{"ast":null,"code":"var _jsxFileName = \"/home/nishanth/projects/livekit-demo/src/ChatBot.tsx\",\n  _s = $RefreshSig$();\nimport { LiveKitRoom } from \"@livekit/components-react\";\nimport \"@livekit/components-styles\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport SendMessage from \"./sendMessage\";\n\n// const serverUrl = \"wss://randomroom-f0bn812z.livekit.cloud\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst serverUrl = \"ws://192.168.0.41:7880\";\nfunction ChatBot({\n  roomName,\n  participantName\n}) {\n  _s();\n  const [token, setToken] = useState(null);\n  // const room = RoomContext\n  // const roomRef = useRef < Room > new Room();\n  const [messageInput, setMessageInput] = useState(\"\");\n  useEffect(() => {\n    const fetchToken = async () => {\n      try {\n        const response = await axios.post(\"http://192.168.0.41:3002/livekit/tokenGenerate\", {\n          roomName,\n          participantName\n        });\n        if (response.data.token) {\n          console.log(\"Token received:\", response.data.token);\n          setToken(response.data.token);\n        } else {\n          console.error(\"Token response did not contain a token:\", response.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching token:\", error);\n      }\n    };\n    fetchToken();\n  }, [roomName, participantName]);\n\n  // useEffect(() => {\n  //   if (room) {\n  //     room.on(\"dataReceived\", (payload, participant) => {\n  //       const newMessage = {\n  //         sender: participant.identity,\n  //         content: new TextDecoder().decode(payload),\n  //       };\n  //       setMessages((prevMessages) => [...prevMessages, newMessage]);\n  //     });\n  //   }\n  // }, [room]);\n\n  // const handleSendMessage = () => {\n  //   console.log(room);\n  //   if (room && messageInput.trim()) {\n  //     try {\n  //       room.localParticipant.publishData(messageInput, \"message\");\n  //       setMessages((prevMessages) => [\n  //         ...prevMessages,\n  //         { sender: participantName, content: messageInput },\n  //       ]);\n  //       setMessageInput(\"\");\n  //     } catch (error) {\n  //       console.error(\"Error sending message:\", error);\n  //     }\n  //   }\n  // };\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\",\n      flexDirection: \"column\"\n    },\n    children: [token && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LiveKitRoom, {\n        video: false,\n        audio: false,\n        token: token,\n        connect: true,\n        serverUrl: serverUrl,\n        \"data-lk-theme\": \"default\",\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(SendMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 10\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"10px\",\n        borderTop: \"1px solid #ccc\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"200px\",\n          overflowY: \"scroll\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: messageInput,\n          onChange: e => setMessageInput(e.target.value),\n          style: {\n            flex: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n_s(ChatBot, \"VW18DI4w7C2Ueyc/Salo67N3jFA=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["LiveKitRoom","axios","React","useEffect","useState","SendMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","serverUrl","ChatBot","roomName","participantName","_s","token","setToken","messageInput","setMessageInput","fetchToken","response","post","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","height","flexDirection","video","audio","connect","flex","padding","borderTop","overflowY","marginBottom","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/nishanth/projects/livekit-demo/src/ChatBot.tsx"],"sourcesContent":["import {\n    LiveKitRoom\n  } from \"@livekit/components-react\";\n  import \"@livekit/components-styles\";\n  import axios from \"axios\";\n  import React, { useEffect, useState } from \"react\";\nimport SendMessage from \"./sendMessage\";\n  \n  // const serverUrl = \"wss://randomroom-f0bn812z.livekit.cloud\";\n  const serverUrl = \"ws://192.168.0.41:7880\";\n  \n  function ChatBot({ roomName, participantName }:any) {\n    const [token, setToken] = useState(null);\n    // const room = RoomContext\n    // const roomRef = useRef < Room > new Room();\n    const [messageInput, setMessageInput] = useState(\"\");\n  \n    useEffect(() => {\n      const fetchToken = async () => {\n        try {\n          const response = await axios.post(\n            \"http://192.168.0.41:3002/livekit/tokenGenerate\",\n            {\n              roomName,\n              participantName,\n            }\n          );\n          if (response.data.token) {\n            console.log(\"Token received:\", response.data.token);\n            setToken(response.data.token);\n          } else {\n            console.error(\"Token response did not contain a token:\", response.data);\n          }\n        } catch (error) {\n          console.error(\"Error fetching token:\", error);\n        }\n      };\n    \n      fetchToken();\n    }, [roomName, participantName]);\n    \n  \n    // useEffect(() => {\n    //   if (room) {\n    //     room.on(\"dataReceived\", (payload, participant) => {\n    //       const newMessage = {\n    //         sender: participant.identity,\n    //         content: new TextDecoder().decode(payload),\n    //       };\n    //       setMessages((prevMessages) => [...prevMessages, newMessage]);\n    //     });\n    //   }\n    // }, [room]);\n  \n    // const handleSendMessage = () => {\n    //   console.log(room);\n    //   if (room && messageInput.trim()) {\n    //     try {\n    //       room.localParticipant.publishData(messageInput, \"message\");\n    //       setMessages((prevMessages) => [\n    //         ...prevMessages,\n    //         { sender: participantName, content: messageInput },\n    //       ]);\n    //       setMessageInput(\"\");\n    //     } catch (error) {\n    //       console.error(\"Error sending message:\", error);\n    //     }\n    //   }\n    // };\n  \n    if (!token) {\n      return <div>Loading...</div>;\n    }\n  \n    return (\n      <div style={{ display: \"flex\", height: \"100vh\", flexDirection: \"column\" }}>\n        {token &&\n        <>\n         <LiveKitRoom\n          video={false}\n          audio={false}\n          token={token}\n          connect={true}\n          serverUrl={serverUrl}\n          data-lk-theme=\"default\"\n          style={{ flex: 1 }}\n        >\n          <SendMessage />\n        </LiveKitRoom>\n        </>\n        }\n        <div style={{ padding: \"10px\", borderTop: \"1px solid #ccc\" }}>\n          <div\n            style={{ height: \"200px\", overflowY: \"scroll\", marginBottom: \"10px\" }}\n          >\n            {/* {messages.map((message, index) => (\n              <div key={index}>\n                <strong>{message.sender}:</strong> {message.content}\n              </div>\n            ))} */}\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <input\n              type=\"text\"\n              value={messageInput}\n              onChange={(e) => setMessageInput(e.target.value)}\n              style={{ flex: 1 }}\n            />\n            {/* <button onClick={handleSendMessage}>Send</button> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  export default ChatBot;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}