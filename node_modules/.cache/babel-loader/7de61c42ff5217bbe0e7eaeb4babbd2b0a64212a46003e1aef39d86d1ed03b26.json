{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/components/controls/ClearPinButton.tsx\nimport * as React52 from \"react\";\n\n// src/hooks/useAudioPlayback.ts\nimport * as React9 from \"react\";\n\n// src/hooks/internal/useResizeObserver.ts\nimport * as React from \"react\";\nimport useLatest from \"@react-hook/latest\";\nfunction useResizeObserver(target, callback) {\n  const resizeObserver = getResizeObserver();\n  const storedCallback = useLatest(callback);\n  React.useLayoutEffect(() => {\n    let didUnsubscribe = false;\n    const targetEl = target.current;\n    if (!targetEl) return;\n    function cb(entry, observer) {\n      if (didUnsubscribe) return;\n      storedCallback.current(entry, observer);\n    }\n    resizeObserver == null ? void 0 : resizeObserver.subscribe(targetEl, cb);\n    return () => {\n      didUnsubscribe = true;\n      resizeObserver == null ? void 0 : resizeObserver.unsubscribe(targetEl, cb);\n    };\n  }, [target.current, resizeObserver, storedCallback]);\n  return resizeObserver == null ? void 0 : resizeObserver.observer;\n}\nfunction createResizeObserver() {\n  let ticking = false;\n  let allEntries = [];\n  const callbacks = /* @__PURE__ */new Map();\n  if (typeof window === \"undefined\") {\n    return;\n  }\n  const observer = new ResizeObserver((entries, obs) => {\n    allEntries = allEntries.concat(entries);\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        const triggered = /* @__PURE__ */new Set();\n        for (let i = 0; i < allEntries.length; i++) {\n          if (triggered.has(allEntries[i].target)) continue;\n          triggered.add(allEntries[i].target);\n          const cbs = callbacks.get(allEntries[i].target);\n          cbs == null ? void 0 : cbs.forEach(cb => cb(allEntries[i], obs));\n        }\n        allEntries = [];\n        ticking = false;\n      });\n    }\n    ticking = true;\n  });\n  return {\n    observer,\n    subscribe(target, callback) {\n      var _a;\n      observer.observe(target);\n      const cbs = (_a = callbacks.get(target)) != null ? _a : [];\n      cbs.push(callback);\n      callbacks.set(target, cbs);\n    },\n    unsubscribe(target, callback) {\n      var _a;\n      const cbs = (_a = callbacks.get(target)) != null ? _a : [];\n      if (cbs.length === 1) {\n        observer.unobserve(target);\n        callbacks.delete(target);\n        return;\n      }\n      const cbIndex = cbs.indexOf(callback);\n      if (cbIndex !== -1) cbs.splice(cbIndex, 1);\n      callbacks.set(target, cbs);\n    }\n  };\n}\nvar _resizeObserver;\nvar getResizeObserver = () => !_resizeObserver ? _resizeObserver = createResizeObserver() : _resizeObserver;\nvar useSize = target => {\n  const [size, setSize] = React.useState({\n    width: 0,\n    height: 0\n  });\n  React.useLayoutEffect(() => {\n    if (target.current) {\n      const {\n        width,\n        height\n      } = target.current.getBoundingClientRect();\n      setSize({\n        width,\n        height\n      });\n    }\n  }, [target.current]);\n  const resizeCallback = React.useCallback(entry => setSize(entry.contentRect), []);\n  useResizeObserver(target, resizeCallback);\n  return size;\n};\n\n// src/hooks/internal/useObservableState.ts\nimport * as React2 from \"react\";\nfunction useObservableState(observable, startWith, resetWhenObservableChanges = true) {\n  const [state, setState] = React2.useState(startWith);\n  React2.useEffect(() => {\n    if (resetWhenObservableChanges) {\n      setState(startWith);\n    }\n    if (typeof window === \"undefined\" || !observable) return;\n    const subscription = observable.subscribe(setState);\n    return () => subscription.unsubscribe();\n  }, [observable, resetWhenObservableChanges]);\n  return state;\n}\n\n// src/hooks/internal/useMediaQuery.ts\nimport * as React3 from \"react\";\nfunction useMediaQuery(query) {\n  const getMatches = query2 => {\n    if (typeof window !== \"undefined\") {\n      return window.matchMedia(query2).matches;\n    }\n    return false;\n  };\n  const [matches, setMatches] = React3.useState(getMatches(query));\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n  React3.useEffect(() => {\n    const matchMedia = window.matchMedia(query);\n    handleChange();\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener(\"change\", handleChange);\n    }\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener(\"change\", handleChange);\n      }\n    };\n  }, [query]);\n  return matches;\n}\n\n// src/hooks/useAudioPlayback.ts\nimport { roomAudioPlaybackAllowedObservable } from \"@livekit/components-core\";\n\n// src/context/layout-context.ts\nimport { PIN_DEFAULT_STATE, WIDGET_DEFAULT_STATE } from \"@livekit/components-core\";\nimport * as React4 from \"react\";\n\n// src/context/chat-context.ts\nfunction chatReducer(state, action) {\n  if (action.msg === \"show_chat\") {\n    return __spreadProps(__spreadValues({}, state), {\n      showChat: true,\n      unreadMessages: 0\n    });\n  } else if (action.msg === \"hide_chat\") {\n    return __spreadProps(__spreadValues({}, state), {\n      showChat: false\n    });\n  } else if (action.msg === \"toggle_chat\") {\n    const newState = __spreadProps(__spreadValues({}, state), {\n      showChat: !state.showChat\n    });\n    if (newState.showChat === true) {\n      newState.unreadMessages = 0;\n    }\n    return newState;\n  } else if (action.msg === \"unread_msg\") {\n    return __spreadProps(__spreadValues({}, state), {\n      unreadMessages: action.count\n    });\n  } else if (action.msg === \"toggle_settings\") {\n    return __spreadProps(__spreadValues({}, state), {\n      showSettings: !state.showSettings\n    });\n  } else {\n    return __spreadValues({}, state);\n  }\n}\n\n// src/context/pin-context.ts\nfunction pinReducer(state, action) {\n  if (action.msg === \"set_pin\") {\n    return [action.trackReference];\n  } else if (action.msg === \"clear_pin\") {\n    return [];\n  } else {\n    return __spreadValues({}, state);\n  }\n}\n\n// src/context/layout-context.ts\nvar LayoutContext = React4.createContext(void 0);\nfunction useLayoutContext() {\n  const layoutContext = React4.useContext(LayoutContext);\n  if (!layoutContext) {\n    throw Error(\"Tried to access LayoutContext context outside a LayoutContextProvider provider.\");\n  }\n  return layoutContext;\n}\nfunction useEnsureLayoutContext(layoutContext) {\n  const layout = useMaybeLayoutContext();\n  layoutContext != null ? layoutContext : layoutContext = layout;\n  if (!layoutContext) {\n    throw Error(\"Tried to access LayoutContext context outside a LayoutContextProvider provider.\");\n  }\n  return layoutContext;\n}\nfunction useCreateLayoutContext() {\n  const [pinState, pinDispatch] = React4.useReducer(pinReducer, PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = React4.useReducer(chatReducer, WIDGET_DEFAULT_STATE);\n  return {\n    pin: {\n      dispatch: pinDispatch,\n      state: pinState\n    },\n    widget: {\n      dispatch: widgetDispatch,\n      state: widgetState\n    }\n  };\n}\nfunction useEnsureCreateLayoutContext(layoutContext) {\n  const [pinState, pinDispatch] = React4.useReducer(pinReducer, PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = React4.useReducer(chatReducer, WIDGET_DEFAULT_STATE);\n  return layoutContext != null ? layoutContext : {\n    pin: {\n      dispatch: pinDispatch,\n      state: pinState\n    },\n    widget: {\n      dispatch: widgetDispatch,\n      state: widgetState\n    }\n  };\n}\nfunction useMaybeLayoutContext() {\n  return React4.useContext(LayoutContext);\n}\n\n// src/context/participant-context.ts\nimport * as React6 from \"react\";\n\n// src/context/track-reference-context.ts\nimport * as React5 from \"react\";\nvar TrackRefContext = React5.createContext(void 0);\nfunction useTrackRefContext() {\n  const trackReference = React5.useContext(TrackRefContext);\n  if (!trackReference) {\n    throw Error(\"tried to access track context outside of track context provider\");\n  }\n  return trackReference;\n}\nfunction useMaybeTrackRefContext() {\n  return React5.useContext(TrackRefContext);\n}\nfunction useEnsureTrackRef(trackRef) {\n  const context = useMaybeTrackRefContext();\n  const ref = trackRef != null ? trackRef : context;\n  if (!ref) {\n    throw new Error(\"No TrackRef, make sure you are inside a TrackRefContext or pass the TrackRef explicitly\");\n  }\n  return ref;\n}\n\n// src/context/participant-context.ts\nvar ParticipantContext = React6.createContext(void 0);\nfunction useParticipantContext() {\n  const participant = React6.useContext(ParticipantContext);\n  if (!participant) {\n    throw Error(\"tried to access participant context outside of participant context provider\");\n  }\n  return participant;\n}\nfunction useMaybeParticipantContext() {\n  return React6.useContext(ParticipantContext);\n}\nfunction useEnsureParticipant(participant) {\n  var _a;\n  const context = useMaybeParticipantContext();\n  const trackContext = useMaybeTrackRefContext();\n  const p = (_a = participant != null ? participant : context) != null ? _a : trackContext == null ? void 0 : trackContext.participant;\n  if (!p) {\n    throw new Error(\"No participant provided, make sure you are inside a participant context or pass the participant explicitly\");\n  }\n  return p;\n}\n\n// src/context/room-context.ts\nimport * as React7 from \"react\";\nvar RoomContext = React7.createContext(void 0);\nfunction useRoomContext() {\n  const ctx = React7.useContext(RoomContext);\n  if (!ctx) {\n    throw Error(\"tried to access room context outside of livekit room component\");\n  }\n  return ctx;\n}\nfunction useMaybeRoomContext() {\n  return React7.useContext(RoomContext);\n}\nfunction useEnsureRoom(room) {\n  const context = useMaybeRoomContext();\n  const r = room != null ? room : context;\n  if (!r) {\n    throw new Error(\"No room provided, make sure you are inside a Room context or pass the room explicitly\");\n  }\n  return r;\n}\n\n// src/context/feature-context.ts\nimport * as React8 from \"react\";\nvar LKFeatureContext = React8.createContext(void 0);\nfunction useFeatureContext(require2) {\n  const ctx = React8.useContext(LKFeatureContext);\n  if (require2 === true) {\n    if (ctx) {\n      return ctx;\n    } else {\n      throw Error(\"tried to access feature context, but none is present\");\n    }\n  }\n  return ctx;\n}\n\n// src/hooks/useAudioPlayback.ts\nfunction useAudioPlayback(room) {\n  const roomEnsured = useEnsureRoom(room);\n  const startAudio = React9.useCallback(() => __async(this, null, function* () {\n    yield roomEnsured.startAudio();\n  }), [roomEnsured]);\n  const observable = React9.useMemo(() => roomAudioPlaybackAllowedObservable(roomEnsured), [roomEnsured]);\n  const {\n    canPlayAudio\n  } = useObservableState(observable, {\n    canPlayAudio: roomEnsured.canPlaybackAudio\n  });\n  return {\n    canPlayAudio,\n    startAudio\n  };\n}\n\n// src/hooks/useClearPinButton.ts\nimport { setupClearPinButton } from \"@livekit/components-core\";\nimport * as React10 from \"react\";\n\n// src/mergeProps.ts\nimport clsx from \"clsx\";\nfunction chain(...callbacks) {\n  return (...args) => {\n    for (const callback of callbacks) {\n      if (typeof callback === \"function\") {\n        try {\n          callback(...args);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n  };\n}\nfunction mergeProps(...args) {\n  const result = __spreadValues({}, args[0]);\n  for (let i = 1; i < args.length; i++) {\n    const props = args[i];\n    for (const key in props) {\n      const a = result[key];\n      const b = props[key];\n      if (typeof a === \"function\" && typeof b === \"function\" &&\n      // This is a lot faster than a regex.\n      key[0] === \"o\" && key[1] === \"n\" && key.charCodeAt(2) >= /* 'A' */\n      65 && key.charCodeAt(2) <= /* 'Z' */\n      90) {\n        result[key] = chain(a, b);\n      } else if ((key === \"className\" || key === \"UNSAFE_className\") && typeof a === \"string\" && typeof b === \"string\") {\n        result[key] = clsx(a, b);\n      } else {\n        result[key] = b !== void 0 ? b : a;\n      }\n    }\n  }\n  return result;\n}\n\n// src/hooks/useClearPinButton.ts\nfunction useClearPinButton(props) {\n  const {\n    state,\n    dispatch\n  } = useLayoutContext().pin;\n  const buttonProps = React10.useMemo(() => {\n    const {\n      className\n    } = setupClearPinButton();\n    const mergedProps = mergeProps(props, {\n      className,\n      disabled: !(state == null ? void 0 : state.length),\n      onClick: () => {\n        if (dispatch) dispatch({\n          msg: \"clear_pin\"\n        });\n      }\n    });\n    return mergedProps;\n  }, [props, dispatch, state]);\n  return {\n    buttonProps\n  };\n}\n\n// src/hooks/useConnectionQualityIndicator.ts\nimport { setupConnectionQualityIndicator } from \"@livekit/components-core\";\nimport { ConnectionQuality } from \"livekit-client\";\nimport * as React11 from \"react\";\nfunction useConnectionQualityIndicator(options = {}) {\n  const p = useEnsureParticipant(options.participant);\n  const {\n    className,\n    connectionQualityObserver\n  } = React11.useMemo(() => setupConnectionQualityIndicator(p), [p]);\n  const quality = useObservableState(connectionQualityObserver, ConnectionQuality.Unknown);\n  return {\n    className,\n    quality\n  };\n}\n\n// src/hooks/useConnectionStatus.ts\nimport { connectionStateObserver } from \"@livekit/components-core\";\nimport * as React12 from \"react\";\nfunction useConnectionState(room) {\n  const r = useEnsureRoom(room);\n  const observable = React12.useMemo(() => connectionStateObserver(r), [r]);\n  const connectionState = useObservableState(observable, r.state);\n  return connectionState;\n}\n\n// src/hooks/useDataChannel.ts\nimport { setupDataMessageHandler } from \"@livekit/components-core\";\nimport * as React13 from \"react\";\nfunction useDataChannel(topicOrCallback, callback) {\n  const onMessage = typeof topicOrCallback === \"function\" ? topicOrCallback : callback;\n  const topic = typeof topicOrCallback === \"string\" ? topicOrCallback : void 0;\n  const room = useRoomContext();\n  const {\n    send,\n    messageObservable,\n    isSendingObservable\n  } = React13.useMemo(() => setupDataMessageHandler(room, topic, onMessage), [room, topic, onMessage]);\n  const message = useObservableState(messageObservable, void 0);\n  const isSending = useObservableState(isSendingObservable, false);\n  return {\n    message,\n    send,\n    isSending\n  };\n}\n\n// src/hooks/useDisconnectButton.ts\nimport { setupDisconnectButton } from \"@livekit/components-core\";\nimport { ConnectionState } from \"livekit-client\";\nimport * as React14 from \"react\";\nfunction useDisconnectButton(props) {\n  const room = useRoomContext();\n  const connectionState = useConnectionState(room);\n  const buttonProps = React14.useMemo(() => {\n    const {\n      className,\n      disconnect\n    } = setupDisconnectButton(room);\n    const mergedProps = mergeProps(props, {\n      className,\n      onClick: () => {\n        var _a;\n        return disconnect((_a = props.stopTracks) != null ? _a : true);\n      },\n      disabled: connectionState === ConnectionState.Disconnected\n    });\n    return mergedProps;\n  }, [room, props, connectionState]);\n  return {\n    buttonProps\n  };\n}\n\n// src/hooks/useFacingMode.ts\nimport { LocalTrackPublication, facingModeFromLocalTrack } from \"livekit-client\";\nfunction useFacingMode(trackReference) {\n  if (trackReference.publication instanceof LocalTrackPublication) {\n    const localTrack = trackReference.publication.track;\n    if (localTrack) {\n      const {\n        facingMode\n      } = facingModeFromLocalTrack(localTrack);\n      return facingMode;\n    }\n  }\n  return \"undefined\";\n}\n\n// src/hooks/useFocusToggle.ts\nimport { setupFocusToggle, isTrackReferencePinned } from \"@livekit/components-core\";\nimport * as React15 from \"react\";\nfunction useFocusToggle({\n  trackRef,\n  props\n}) {\n  const trackReference = useEnsureTrackRef(trackRef);\n  const layoutContext = useMaybeLayoutContext();\n  const {\n    className\n  } = React15.useMemo(() => setupFocusToggle(), []);\n  const inFocus = React15.useMemo(() => {\n    return isTrackReferencePinned(trackReference, layoutContext == null ? void 0 : layoutContext.pin.state);\n  }, [trackReference, layoutContext == null ? void 0 : layoutContext.pin.state]);\n  const mergedProps = React15.useMemo(() => mergeProps(props, {\n    className,\n    onClick: event => {\n      var _a, _b, _c, _d, _e;\n      (_a = props.onClick) == null ? void 0 : _a.call(props, event);\n      if (inFocus) {\n        (_c = layoutContext == null ? void 0 : (_b = layoutContext.pin).dispatch) == null ? void 0 : _c.call(_b, {\n          msg: \"clear_pin\"\n        });\n      } else {\n        (_e = layoutContext == null ? void 0 : (_d = layoutContext.pin).dispatch) == null ? void 0 : _e.call(_d, {\n          msg: \"set_pin\",\n          trackReference\n        });\n      }\n    }\n  }), [props, className, trackReference, inFocus, layoutContext == null ? void 0 : layoutContext.pin]);\n  return {\n    mergedProps,\n    inFocus\n  };\n}\n\n// src/hooks/useGridLayout.ts\nimport { GRID_LAYOUTS, selectGridLayout } from \"@livekit/components-core\";\nimport * as React16 from \"react\";\nfunction useGridLayout(gridElement, trackCount) {\n  const {\n    width,\n    height\n  } = useSize(gridElement);\n  const layout = width > 0 && height > 0 ? selectGridLayout(GRID_LAYOUTS, trackCount, width, height) : GRID_LAYOUTS[0];\n  React16.useEffect(() => {\n    if (gridElement.current && layout) {\n      gridElement.current.style.setProperty(\"--lk-col-count\", layout == null ? void 0 : layout.columns.toString());\n      gridElement.current.style.setProperty(\"--lk-row-count\", layout == null ? void 0 : layout.rows.toString());\n    }\n  }, [gridElement, layout]);\n  return {\n    layout\n  };\n}\n\n// src/hooks/useIsMuted.ts\nimport { getTrackReferenceId, mutedObserver } from \"@livekit/components-core\";\nimport * as React17 from \"react\";\nfunction useIsMuted(sourceOrTrackRef, options = {}) {\n  var _a, _b;\n  const passedParticipant = typeof sourceOrTrackRef === \"string\" ? options.participant : sourceOrTrackRef.participant;\n  const p = useEnsureParticipant(passedParticipant);\n  const ref = typeof sourceOrTrackRef === \"string\" ? {\n    participant: p,\n    source: sourceOrTrackRef\n  } : sourceOrTrackRef;\n  const [isMuted, setIsMuted] = React17.useState(!!(((_a = ref.publication) == null ? void 0 : _a.isMuted) || ((_b = p.getTrackPublication(ref.source)) == null ? void 0 : _b.isMuted)));\n  React17.useEffect(() => {\n    const listener = mutedObserver(ref).subscribe(setIsMuted);\n    return () => listener.unsubscribe();\n  }, [getTrackReferenceId(ref)]);\n  return isMuted;\n}\n\n// src/hooks/useIsSpeaking.ts\nimport { createIsSpeakingObserver } from \"@livekit/components-core\";\nimport * as React18 from \"react\";\nfunction useIsSpeaking(participant) {\n  const p = useEnsureParticipant(participant);\n  const observable = React18.useMemo(() => createIsSpeakingObserver(p), [p]);\n  const isSpeaking = useObservableState(observable, p.isSpeaking);\n  return isSpeaking;\n}\n\n// src/hooks/useLiveKitRoom.ts\nimport { log, setupLiveKitRoom } from \"@livekit/components-core\";\nimport { Room, MediaDeviceFailure, RoomEvent, ConnectionState as ConnectionState2 } from \"livekit-client\";\nimport * as React19 from \"react\";\nvar defaultRoomProps = {\n  connect: true,\n  audio: false,\n  video: false\n};\nfunction useLiveKitRoom(props) {\n  const _a = __spreadValues(__spreadValues({}, defaultRoomProps), props),\n    {\n      token,\n      serverUrl,\n      options,\n      room: passedRoom,\n      connectOptions,\n      connect,\n      audio,\n      video,\n      screen,\n      onConnected,\n      onDisconnected,\n      onError,\n      onMediaDeviceFailure,\n      onEncryptionError,\n      simulateParticipants\n    } = _a,\n    rest = __objRest(_a, [\"token\", \"serverUrl\", \"options\", \"room\", \"connectOptions\", \"connect\", \"audio\", \"video\", \"screen\", \"onConnected\", \"onDisconnected\", \"onError\", \"onMediaDeviceFailure\", \"onEncryptionError\", \"simulateParticipants\"]);\n  if (options && passedRoom) {\n    log.warn(\"when using a manually created room, the options object will be ignored. set the desired options directly when creating the room instead.\");\n  }\n  const [room, setRoom] = React19.useState();\n  React19.useEffect(() => {\n    setRoom(passedRoom != null ? passedRoom : new Room(options));\n  }, [passedRoom]);\n  const htmlProps = React19.useMemo(() => {\n    const {\n      className\n    } = setupLiveKitRoom();\n    return mergeProps(rest, {\n      className\n    });\n  }, [rest]);\n  React19.useEffect(() => {\n    if (!room) return;\n    const onSignalConnected = () => {\n      const localP = room.localParticipant;\n      log.debug(\"trying to publish local tracks\");\n      Promise.all([localP.setMicrophoneEnabled(!!audio, typeof audio !== \"boolean\" ? audio : void 0), localP.setCameraEnabled(!!video, typeof video !== \"boolean\" ? video : void 0), localP.setScreenShareEnabled(!!screen, typeof screen !== \"boolean\" ? screen : void 0)]).catch(e => {\n        log.warn(e);\n        onError == null ? void 0 : onError(e);\n      });\n    };\n    const handleMediaDeviceError = e => {\n      const mediaDeviceFailure = MediaDeviceFailure.getFailure(e);\n      onMediaDeviceFailure == null ? void 0 : onMediaDeviceFailure(mediaDeviceFailure);\n    };\n    const handleEncryptionError = e => {\n      onEncryptionError == null ? void 0 : onEncryptionError(e);\n    };\n    room.on(RoomEvent.SignalConnected, onSignalConnected).on(RoomEvent.MediaDevicesError, handleMediaDeviceError).on(RoomEvent.EncryptionError, handleEncryptionError);\n    return () => {\n      room.off(RoomEvent.SignalConnected, onSignalConnected).off(RoomEvent.MediaDevicesError, handleMediaDeviceError).off(RoomEvent.EncryptionError, handleEncryptionError);\n    };\n  }, [room, audio, video, screen, onError, onEncryptionError, onMediaDeviceFailure]);\n  React19.useEffect(() => {\n    if (!room) return;\n    if (simulateParticipants) {\n      room.simulateParticipants({\n        participants: {\n          count: simulateParticipants\n        },\n        publish: {\n          audio: true,\n          useRealTracks: true\n        }\n      });\n      return;\n    }\n    if (!token) {\n      log.debug(\"no token yet\");\n      return;\n    }\n    if (!serverUrl) {\n      log.warn(\"no livekit url provided\");\n      onError == null ? void 0 : onError(Error(\"no livekit url provided\"));\n      return;\n    }\n    if (connect) {\n      log.debug(\"connecting\");\n      room.connect(serverUrl, token, connectOptions).catch(e => {\n        log.warn(e);\n        onError == null ? void 0 : onError(e);\n      });\n    } else {\n      log.debug(\"disconnecting because connect is false\");\n      room.disconnect();\n    }\n  }, [connect, token, JSON.stringify(connectOptions), room, onError, serverUrl, simulateParticipants]);\n  React19.useEffect(() => {\n    if (!room) return;\n    const connectionStateChangeListener = state => {\n      switch (state) {\n        case ConnectionState2.Disconnected:\n          if (onDisconnected) onDisconnected();\n          break;\n        case ConnectionState2.Connected:\n          if (onConnected) onConnected();\n          break;\n        default:\n          break;\n      }\n    };\n    room.on(RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    return () => {\n      room.off(RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    };\n  }, [token, onConnected, onDisconnected, room]);\n  React19.useEffect(() => {\n    if (!room) return;\n    return () => {\n      log.info(\"disconnecting on onmount\");\n      room.disconnect();\n    };\n  }, [room]);\n  return {\n    room,\n    htmlProps\n  };\n}\n\n// src/hooks/useLocalParticipant.ts\nimport { observeParticipantMedia } from \"@livekit/components-core\";\nimport * as React20 from \"react\";\nfunction useLocalParticipant(options = {}) {\n  const room = useEnsureRoom(options.room);\n  const [localParticipant, setLocalParticipant] = React20.useState(room.localParticipant);\n  const [isMicrophoneEnabled, setIsMicrophoneEnabled] = React20.useState(localParticipant.isMicrophoneEnabled);\n  const [isCameraEnabled, setIsCameraEnabled] = React20.useState(localParticipant.isMicrophoneEnabled);\n  const [lastMicrophoneError, setLastMicrophoneError] = React20.useState(localParticipant.lastMicrophoneError);\n  const [lastCameraError, setLastCameraError] = React20.useState(localParticipant.lastCameraError);\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = React20.useState(localParticipant.isMicrophoneEnabled);\n  const [microphoneTrack, setMicrophoneTrack] = React20.useState(void 0);\n  const [cameraTrack, setCameraTrack] = React20.useState(void 0);\n  const handleUpdate = media => {\n    setIsCameraEnabled(media.isCameraEnabled);\n    setIsMicrophoneEnabled(media.isMicrophoneEnabled);\n    setIsScreenShareEnabled(media.isScreenShareEnabled);\n    setCameraTrack(media.cameraTrack);\n    setMicrophoneTrack(media.microphoneTrack);\n    setLastMicrophoneError(media.participant.lastMicrophoneError);\n    setLastCameraError(media.participant.lastCameraError);\n    setLocalParticipant(media.participant);\n  };\n  React20.useEffect(() => {\n    const listener = observeParticipantMedia(room.localParticipant).subscribe(handleUpdate);\n    return () => listener.unsubscribe();\n  }, [room]);\n  return {\n    isMicrophoneEnabled,\n    isScreenShareEnabled,\n    isCameraEnabled,\n    microphoneTrack,\n    cameraTrack,\n    lastMicrophoneError,\n    lastCameraError,\n    localParticipant\n  };\n}\n\n// src/hooks/useLocalParticipantPermissions.ts\nimport { participantPermissionObserver } from \"@livekit/components-core\";\nimport * as React21 from \"react\";\nfunction useLocalParticipantPermissions() {\n  const room = useRoomContext();\n  const permissionObserver = React21.useMemo(() => participantPermissionObserver(room.localParticipant), [room]);\n  const permissions = useObservableState(permissionObserver, room.localParticipant.permissions);\n  return permissions;\n}\n\n// src/hooks/useMediaDeviceSelect.ts\nimport { createMediaDeviceObserver, setupDeviceSelector, log as log2 } from \"@livekit/components-core\";\nimport * as React22 from \"react\";\nfunction useMediaDeviceSelect({\n  kind,\n  room,\n  track,\n  requestPermissions,\n  onError\n}) {\n  const roomContext = useMaybeRoomContext();\n  const deviceObserver = React22.useMemo(() => createMediaDeviceObserver(kind, onError, requestPermissions), [kind, requestPermissions, onError]);\n  const devices = useObservableState(deviceObserver, []);\n  const [currentDeviceId, setCurrentDeviceId] = React22.useState(\"\");\n  const {\n    className,\n    activeDeviceObservable,\n    setActiveMediaDevice\n  } = React22.useMemo(() => setupDeviceSelector(kind, room != null ? room : roomContext, track), [kind, room, roomContext, track]);\n  React22.useEffect(() => {\n    const listener = activeDeviceObservable.subscribe(deviceId => {\n      log2.info(\"setCurrentDeviceId\", deviceId);\n      if (deviceId) setCurrentDeviceId(deviceId);\n    });\n    return () => {\n      listener == null ? void 0 : listener.unsubscribe();\n    };\n  }, [activeDeviceObservable]);\n  return {\n    devices,\n    className,\n    activeDeviceId: currentDeviceId,\n    setActiveMediaDevice\n  };\n}\n\n// src/hooks/useMediaDevices.ts\nimport * as React23 from \"react\";\nimport { createMediaDeviceObserver as createMediaDeviceObserver2 } from \"@livekit/components-core\";\nfunction useMediaDevices({\n  kind,\n  onError\n}) {\n  const deviceObserver = React23.useMemo(() => createMediaDeviceObserver2(kind, onError), [kind, onError]);\n  const devices = useObservableState(deviceObserver, []);\n  return devices;\n}\n\n// src/hooks/usePagination.ts\nimport * as React25 from \"react\";\n\n// src/hooks/useVisualStableUpdate.ts\nimport { log as log3, sortTrackReferences, updatePages } from \"@livekit/components-core\";\nimport * as React24 from \"react\";\nfunction useVisualStableUpdate(trackReferences, maxItemsOnPage, options = {}) {\n  const lastTrackRefs = React24.useRef([]);\n  const lastMaxItemsOnPage = React24.useRef(-1);\n  const layoutChanged = maxItemsOnPage !== lastMaxItemsOnPage.current;\n  const sortedTrackRefs = typeof options.customSortFunction === \"function\" ? options.customSortFunction(trackReferences) : sortTrackReferences(trackReferences);\n  let updatedTrackRefs = [...sortedTrackRefs];\n  if (layoutChanged === false) {\n    try {\n      updatedTrackRefs = updatePages(lastTrackRefs.current, sortedTrackRefs, maxItemsOnPage);\n    } catch (error) {\n      log3.error(\"Error while running updatePages(): \", error);\n    }\n  }\n  if (layoutChanged) {\n    lastTrackRefs.current = sortedTrackRefs;\n  } else {\n    lastTrackRefs.current = updatedTrackRefs;\n  }\n  lastMaxItemsOnPage.current = maxItemsOnPage;\n  return updatedTrackRefs;\n}\n\n// src/hooks/usePagination.ts\nfunction usePagination(itemPerPage, trackReferences) {\n  const [currentPage, setCurrentPage] = React25.useState(1);\n  const totalPageCount = Math.max(Math.ceil(trackReferences.length / itemPerPage), 1);\n  if (currentPage > totalPageCount) {\n    setCurrentPage(totalPageCount);\n  }\n  const lastItemIndex = currentPage * itemPerPage;\n  const firstItemIndex = lastItemIndex - itemPerPage;\n  const changePage = direction => {\n    setCurrentPage(state => {\n      if (direction === \"next\") {\n        if (state === totalPageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n  const goToPage = num => {\n    if (num > totalPageCount) {\n      setCurrentPage(totalPageCount);\n    } else if (num < 1) {\n      setCurrentPage(1);\n    } else {\n      setCurrentPage(num);\n    }\n  };\n  const updatedTrackReferences = useVisualStableUpdate(trackReferences, itemPerPage);\n  const tracksOnPage = updatedTrackReferences.slice(firstItemIndex, lastItemIndex);\n  return {\n    totalPageCount,\n    nextPage: () => changePage(\"next\"),\n    prevPage: () => changePage(\"previous\"),\n    setPage: goToPage,\n    firstItemIndex,\n    lastItemIndex,\n    tracks: tracksOnPage,\n    currentPage\n  };\n}\n\n// src/hooks/useParticipantInfo.ts\nimport { participantInfoObserver } from \"@livekit/components-core\";\nimport * as React26 from \"react\";\nfunction useParticipantInfo(props = {}) {\n  const p = useEnsureParticipant(props.participant);\n  const infoObserver = React26.useMemo(() => participantInfoObserver(p), [p]);\n  const {\n    identity,\n    name,\n    metadata\n  } = useObservableState(infoObserver, {\n    name: p.name,\n    identity: p.identity,\n    metadata: p.metadata\n  });\n  return {\n    identity,\n    name,\n    metadata\n  };\n}\n\n// src/hooks/useParticipantPermissions.ts\nimport { participantPermissionObserver as participantPermissionObserver2 } from \"@livekit/components-core\";\nimport * as React27 from \"react\";\nfunction useParticipantPermissions(options = {}) {\n  const p = useEnsureParticipant(options.participant);\n  const permissionObserver = React27.useMemo(() => participantPermissionObserver2(p), [p]);\n  const permissions = useObservableState(permissionObserver, p.permissions);\n  return permissions;\n}\n\n// src/hooks/useParticipantTile.ts\nimport { setupParticipantTile } from \"@livekit/components-core\";\nimport * as React28 from \"react\";\nimport { Track } from \"livekit-client\";\nfunction useParticipantTile({\n  trackRef,\n  onParticipantClick,\n  disableSpeakingIndicator,\n  htmlProps\n}) {\n  const trackReference = useEnsureTrackRef(trackRef);\n  const mergedProps = React28.useMemo(() => {\n    const {\n      className\n    } = setupParticipantTile();\n    return mergeProps(htmlProps, {\n      className,\n      onClick: event => {\n        var _a, _b;\n        (_a = htmlProps.onClick) == null ? void 0 : _a.call(htmlProps, event);\n        if (typeof onParticipantClick === \"function\") {\n          const track = (_b = trackReference.publication) != null ? _b : trackReference.participant.getTrackPublication(trackReference.source);\n          onParticipantClick({\n            participant: trackReference.participant,\n            track\n          });\n        }\n      }\n    });\n  }, [htmlProps, onParticipantClick, trackReference.publication, trackReference.source, trackReference.participant]);\n  const micTrack = trackReference.participant.getTrackPublication(Track.Source.Microphone);\n  const micRef = React28.useMemo(() => {\n    return {\n      participant: trackReference.participant,\n      source: Track.Source.Microphone,\n      publication: micTrack\n    };\n  }, [micTrack, trackReference.participant]);\n  const isVideoMuted = useIsMuted(trackReference);\n  const isAudioMuted = useIsMuted(micRef);\n  const isSpeaking = useIsSpeaking(trackReference.participant);\n  const facingMode = useFacingMode(trackReference);\n  return {\n    elementProps: __spreadValues({\n      \"data-lk-audio-muted\": isAudioMuted,\n      \"data-lk-video-muted\": isVideoMuted,\n      \"data-lk-speaking\": disableSpeakingIndicator === true ? false : isSpeaking,\n      \"data-lk-local-participant\": trackReference.participant.isLocal,\n      \"data-lk-source\": trackReference.source,\n      \"data-lk-facing-mode\": facingMode\n    }, mergedProps)\n  };\n}\n\n// src/hooks/useRemoteParticipants.ts\nimport { connectedParticipantsObserver } from \"@livekit/components-core\";\nimport * as React29 from \"react\";\nfunction useRemoteParticipants(options = {}) {\n  const room = useEnsureRoom(options.room);\n  const [participants, setParticipants] = React29.useState([]);\n  React29.useEffect(() => {\n    const listener = connectedParticipantsObserver(room, {\n      additionalRoomEvents: options.updateOnlyOn\n    }).subscribe(setParticipants);\n    return () => listener.unsubscribe();\n  }, [room, JSON.stringify(options.updateOnlyOn)]);\n  return participants;\n}\n\n// src/hooks/useParticipants.ts\nimport * as React30 from \"react\";\nfunction useParticipants(options = {}) {\n  const remoteParticipants = useRemoteParticipants(options);\n  const {\n    localParticipant\n  } = useLocalParticipant(options);\n  return React30.useMemo(() => [localParticipant, ...remoteParticipants], [localParticipant, remoteParticipants]);\n}\n\n// src/hooks/usePinnedTracks.ts\nimport * as React31 from \"react\";\nfunction usePinnedTracks(layoutContext) {\n  layoutContext = useEnsureLayoutContext(layoutContext);\n  return React31.useMemo(() => {\n    if ((layoutContext == null ? void 0 : layoutContext.pin.state) !== void 0 && layoutContext.pin.state.length >= 1) {\n      return layoutContext.pin.state;\n    }\n    return [];\n  }, [layoutContext.pin.state]);\n}\n\n// src/hooks/useRemoteParticipant.ts\nimport { connectedParticipantObserver, participantByIdentifierObserver } from \"@livekit/components-core\";\nimport * as React32 from \"react\";\nfunction useRemoteParticipant(identityOrIdentifier, options = {}) {\n  const room = useRoomContext();\n  const [updateOnlyOn] = React32.useState(options.updateOnlyOn);\n  const observable = React32.useMemo(() => {\n    if (typeof identityOrIdentifier === \"string\") {\n      return connectedParticipantObserver(room, identityOrIdentifier, {\n        additionalEvents: updateOnlyOn\n      });\n    } else {\n      return participantByIdentifierObserver(room, identityOrIdentifier, {\n        additionalEvents: updateOnlyOn\n      });\n    }\n  }, [room, JSON.stringify(identityOrIdentifier), updateOnlyOn]);\n  const [participantWrapper, setParticipantWrapper] = React32.useState({\n    p: void 0\n  });\n  React32.useEffect(() => {\n    const listener = observable.subscribe(p => setParticipantWrapper({\n      p\n    }));\n    return () => listener.unsubscribe();\n  }, [observable]);\n  return participantWrapper.p;\n}\n\n// src/hooks/useRoomInfo.ts\nimport { roomInfoObserver } from \"@livekit/components-core\";\nimport * as React33 from \"react\";\nfunction useRoomInfo(options = {}) {\n  const room = useEnsureRoom(options.room);\n  const infoObserver = React33.useMemo(() => roomInfoObserver(room), [room]);\n  const {\n    name,\n    metadata\n  } = useObservableState(infoObserver, {\n    name: room.name,\n    metadata: room.metadata\n  });\n  return {\n    name,\n    metadata\n  };\n}\n\n// src/hooks/useSortedParticipants.ts\nimport { sortParticipants } from \"@livekit/components-core\";\nimport * as React35 from \"react\";\n\n// src/hooks/useSpeakingParticipants.ts\nimport { activeSpeakerObserver } from \"@livekit/components-core\";\nimport * as React34 from \"react\";\nfunction useSpeakingParticipants() {\n  const room = useRoomContext();\n  const speakerObserver = React34.useMemo(() => activeSpeakerObserver(room), [room]);\n  const activeSpeakers = useObservableState(speakerObserver, room.activeSpeakers);\n  return activeSpeakers;\n}\n\n// src/hooks/useSortedParticipants.ts\nfunction useSortedParticipants(participants) {\n  const [sortedParticipants, setSortedParticipants] = React35.useState(sortParticipants(participants));\n  const activeSpeakers = useSpeakingParticipants();\n  React35.useEffect(() => {\n    setSortedParticipants(sortParticipants(participants));\n  }, [activeSpeakers, participants]);\n  return sortedParticipants;\n}\n\n// src/hooks/useStartAudio.ts\nimport { setupStartAudio } from \"@livekit/components-core\";\nimport * as React36 from \"react\";\nfunction useStartAudio({\n  room,\n  props\n}) {\n  const roomEnsured = useEnsureRoom(room);\n  const {\n    className,\n    roomAudioPlaybackAllowedObservable: roomAudioPlaybackAllowedObservable2,\n    handleStartAudioPlayback\n  } = React36.useMemo(() => setupStartAudio(), []);\n  const observable = React36.useMemo(() => roomAudioPlaybackAllowedObservable2(roomEnsured), [roomEnsured, roomAudioPlaybackAllowedObservable2]);\n  const {\n    canPlayAudio\n  } = useObservableState(observable, {\n    canPlayAudio: roomEnsured.canPlaybackAudio\n  });\n  const mergedProps = React36.useMemo(() => mergeProps(props, {\n    className,\n    onClick: () => {\n      handleStartAudioPlayback(roomEnsured);\n    },\n    style: {\n      display: canPlayAudio ? \"none\" : \"block\"\n    }\n  }), [props, className, canPlayAudio, handleStartAudioPlayback, roomEnsured]);\n  return {\n    mergedProps,\n    canPlayAudio\n  };\n}\n\n// src/hooks/useStartVideo.ts\nimport { setupStartVideo } from \"@livekit/components-core\";\nimport * as React37 from \"react\";\nfunction useStartVideo({\n  room,\n  props\n}) {\n  const roomEnsured = useEnsureRoom(room);\n  const {\n    className,\n    roomVideoPlaybackAllowedObservable,\n    handleStartVideoPlayback\n  } = React37.useMemo(() => setupStartVideo(), []);\n  const observable = React37.useMemo(() => roomVideoPlaybackAllowedObservable(roomEnsured), [roomEnsured, roomVideoPlaybackAllowedObservable]);\n  const {\n    canPlayVideo\n  } = useObservableState(observable, {\n    canPlayVideo: roomEnsured.canPlaybackVideo\n  });\n  const mergedProps = React37.useMemo(() => mergeProps(props, {\n    className,\n    onClick: () => {\n      handleStartVideoPlayback(roomEnsured);\n    },\n    style: {\n      display: canPlayVideo ? \"none\" : \"block\"\n    }\n  }), [props, className, canPlayVideo, handleStartVideoPlayback, roomEnsured]);\n  return {\n    mergedProps,\n    canPlayVideo\n  };\n}\n\n// src/hooks/useSwipe.ts\nimport * as React38 from \"react\";\nfunction useSwipe(element, options = {}) {\n  var _a;\n  const touchStart = React38.useRef(null);\n  const touchEnd = React38.useRef(null);\n  const minSwipeDistance = (_a = options.minSwipeDistance) != null ? _a : 50;\n  const onTouchStart = event => {\n    touchEnd.current = null;\n    touchStart.current = event.targetTouches[0].clientX;\n  };\n  const onTouchMove = event => {\n    touchEnd.current = event.targetTouches[0].clientX;\n  };\n  const onTouchEnd = React38.useCallback(() => {\n    if (!touchStart.current || !touchEnd.current) {\n      return;\n    }\n    const distance = touchStart.current - touchEnd.current;\n    const isLeftSwipe = distance > minSwipeDistance;\n    const isRightSwipe = distance < -minSwipeDistance;\n    if (isLeftSwipe && options.onLeftSwipe) options.onLeftSwipe();\n    if (isRightSwipe && options.onRightSwipe) options.onRightSwipe();\n  }, [minSwipeDistance, options]);\n  React38.useEffect(() => {\n    const elementCopy = element.current;\n    if (elementCopy) {\n      elementCopy.addEventListener(\"touchstart\", onTouchStart, {\n        passive: true\n      });\n      elementCopy.addEventListener(\"touchmove\", onTouchMove, {\n        passive: true\n      });\n      elementCopy.addEventListener(\"touchend\", onTouchEnd, {\n        passive: true\n      });\n    }\n    return () => {\n      if (elementCopy) {\n        elementCopy.removeEventListener(\"touchstart\", onTouchStart);\n        elementCopy.removeEventListener(\"touchmove\", onTouchMove);\n        elementCopy.removeEventListener(\"touchend\", onTouchEnd);\n      }\n    };\n  }, [element, onTouchEnd]);\n}\n\n// src/hooks/useChatToggle.ts\nimport { setupChatToggle } from \"@livekit/components-core\";\nimport * as React39 from \"react\";\nfunction useChatToggle({\n  props\n}) {\n  const {\n    dispatch,\n    state\n  } = useLayoutContext().widget;\n  const {\n    className\n  } = React39.useMemo(() => setupChatToggle(), []);\n  const mergedProps = React39.useMemo(() => {\n    return mergeProps(props, {\n      className,\n      onClick: () => {\n        if (dispatch) dispatch({\n          msg: \"toggle_chat\"\n        });\n      },\n      \"aria-pressed\": (state == null ? void 0 : state.showChat) ? \"true\" : \"false\",\n      \"data-lk-unread-msgs\": state ? state.unreadMessages < 10 ? state.unreadMessages.toFixed(0) : \"9+\" : \"0\"\n    });\n  }, [props, className, dispatch, state]);\n  return {\n    mergedProps\n  };\n}\n\n// src/hooks/useToken.ts\nimport { log as log4 } from \"@livekit/components-core\";\nimport * as React40 from \"react\";\nfunction useToken(tokenEndpoint, roomName, options = {}) {\n  const [token, setToken] = React40.useState(void 0);\n  React40.useEffect(() => {\n    var _a;\n    if (tokenEndpoint === void 0) {\n      throw Error(\"token endpoint needs to be defined\");\n    }\n    if (((_a = options.userInfo) == null ? void 0 : _a.identity) === void 0) {\n      return;\n    }\n    const tokenFetcher = () => __async(this, null, function* () {\n      log4.debug(\"fetching token\");\n      const params = new URLSearchParams(__spreadProps(__spreadValues({}, options.userInfo), {\n        roomName\n      }));\n      const res = yield fetch(`${tokenEndpoint}?${params.toString()}`);\n      if (!res.ok) {\n        log4.error(`Could not fetch token. Server responded with status ${res.status}: ${res.statusText}`);\n        return;\n      }\n      const {\n        accessToken\n      } = yield res.json();\n      setToken(accessToken);\n    });\n    tokenFetcher();\n  }, [tokenEndpoint, roomName, JSON.stringify(options)]);\n  return token;\n}\n\n// src/hooks/useTrackMutedIndicator.ts\nimport { setupTrackMutedIndicator, getTrackReferenceId as getTrackReferenceId2 } from \"@livekit/components-core\";\nimport * as React41 from \"react\";\nfunction useTrackMutedIndicator(trackRef) {\n  var _a, _b;\n  const trackReference = useEnsureTrackRef(trackRef);\n  const {\n    className,\n    mediaMutedObserver\n  } = React41.useMemo(() => setupTrackMutedIndicator(trackReference), [getTrackReferenceId2(trackReference)]);\n  const isMuted = useObservableState(mediaMutedObserver, !!(((_a = trackReference.publication) == null ? void 0 : _a.isMuted) || ((_b = trackReference.participant.getTrackPublication(trackReference.source)) == null ? void 0 : _b.isMuted)));\n  return {\n    isMuted,\n    className\n  };\n}\n\n// src/hooks/useTrackToggle.ts\nimport { setupMediaToggle, setupManualToggle, log as log5 } from \"@livekit/components-core\";\nimport * as React42 from \"react\";\nfunction useTrackToggle(_a) {\n  var _b = _a,\n    {\n      source,\n      onChange,\n      initialState,\n      captureOptions,\n      publishOptions,\n      onDeviceError\n    } = _b,\n    rest = __objRest(_b, [\"source\", \"onChange\", \"initialState\", \"captureOptions\", \"publishOptions\", \"onDeviceError\"]);\n  var _a2;\n  const room = useMaybeRoomContext();\n  const track = (_a2 = room == null ? void 0 : room.localParticipant) == null ? void 0 : _a2.getTrackPublication(source);\n  const userInteractionRef = React42.useRef(false);\n  const {\n    toggle,\n    className,\n    pendingObserver,\n    enabledObserver\n  } = React42.useMemo(() => room ? setupMediaToggle(source, room, captureOptions, publishOptions, onDeviceError) : setupManualToggle(), [room, source, JSON.stringify(captureOptions), publishOptions]);\n  const pending = useObservableState(pendingObserver, false);\n  const enabled = useObservableState(enabledObserver, initialState != null ? initialState : !!(track == null ? void 0 : track.isEnabled));\n  React42.useEffect(() => {\n    onChange == null ? void 0 : onChange(enabled, userInteractionRef.current);\n    userInteractionRef.current = false;\n  }, [enabled, onChange]);\n  React42.useEffect(() => {\n    if (initialState !== void 0) {\n      log5.debug(\"forcing initial toggle state\", source, initialState);\n      toggle(initialState);\n    }\n  }, []);\n  const newProps = React42.useMemo(() => mergeProps(rest, {\n    className\n  }), [rest, className]);\n  const clickHandler = React42.useCallback(evt => {\n    var _a3;\n    userInteractionRef.current = true;\n    toggle().finally(() => userInteractionRef.current = false);\n    (_a3 = rest.onClick) == null ? void 0 : _a3.call(rest, evt);\n  }, [rest, toggle]);\n  return {\n    toggle,\n    enabled,\n    pending,\n    track,\n    buttonProps: __spreadProps(__spreadValues({}, newProps), {\n      \"aria-pressed\": enabled,\n      \"data-lk-source\": source,\n      \"data-lk-enabled\": enabled,\n      disabled: pending,\n      onClick: clickHandler\n    })\n  };\n}\n\n// src/hooks/useTracks.ts\nimport { isSourcesWithOptions, isSourceWitOptions, log as log6, trackReferencesObservable } from \"@livekit/components-core\";\nimport { Track as Track2 } from \"livekit-client\";\nimport * as React43 from \"react\";\nfunction useTracks(sources = [Track2.Source.Camera, Track2.Source.Microphone, Track2.Source.ScreenShare, Track2.Source.ScreenShareAudio, Track2.Source.Unknown], options = {}) {\n  const room = useEnsureRoom(options.room);\n  const [trackReferences, setTrackReferences] = React43.useState([]);\n  const [participants, setParticipants] = React43.useState([]);\n  const sources_ = React43.useMemo(() => {\n    return sources.map(s => isSourceWitOptions(s) ? s.source : s);\n  }, [JSON.stringify(sources)]);\n  React43.useEffect(() => {\n    const subscription = trackReferencesObservable(room, sources_, {\n      additionalRoomEvents: options.updateOnlyOn,\n      onlySubscribed: options.onlySubscribed\n    }).subscribe(({\n      trackReferences: trackReferences2,\n      participants: participants2\n    }) => {\n      log6.debug(\"setting track bundles\", trackReferences2, participants2);\n      setTrackReferences(trackReferences2);\n      setParticipants(participants2);\n    });\n    return () => subscription.unsubscribe();\n  }, [room, JSON.stringify(options.onlySubscribed), JSON.stringify(options.updateOnlyOn), JSON.stringify(sources)]);\n  const maybeTrackReferences = React43.useMemo(() => {\n    if (isSourcesWithOptions(sources)) {\n      const requirePlaceholder = requiredPlaceholders(sources, participants);\n      const trackReferencesWithPlaceholders = Array.from(trackReferences);\n      participants.forEach(participant => {\n        var _a;\n        if (requirePlaceholder.has(participant.identity)) {\n          const sourcesToAddPlaceholder = (_a = requirePlaceholder.get(participant.identity)) != null ? _a : [];\n          sourcesToAddPlaceholder.forEach(placeholderSource => {\n            if (trackReferences.find(({\n              participant: p,\n              publication\n            }) => participant.identity === p.identity && publication.source === placeholderSource)) {\n              return;\n            }\n            log6.debug(`Add ${placeholderSource} placeholder for participant ${participant.identity}.`);\n            const placeholder = {\n              participant,\n              source: placeholderSource\n            };\n            trackReferencesWithPlaceholders.push(placeholder);\n          });\n        }\n      });\n      return trackReferencesWithPlaceholders;\n    } else {\n      return trackReferences;\n    }\n  }, [trackReferences, participants, sources]);\n  return maybeTrackReferences;\n}\nfunction difference(setA, setB) {\n  const _difference = new Set(setA);\n  for (const elem of setB) {\n    _difference.delete(elem);\n  }\n  return _difference;\n}\nfunction requiredPlaceholders(sources, participants) {\n  const placeholderMap = /* @__PURE__ */new Map();\n  if (isSourcesWithOptions(sources)) {\n    const sourcesThatNeedPlaceholder = sources.filter(sourceWithOption => sourceWithOption.withPlaceholder).map(sourceWithOption => sourceWithOption.source);\n    participants.forEach(participant => {\n      const sourcesOfSubscribedTracks = participant.getTrackPublications().map(pub => {\n        var _a;\n        return (_a = pub.track) == null ? void 0 : _a.source;\n      }).filter(trackSource => trackSource !== void 0);\n      const placeholderNeededForThisParticipant = Array.from(difference(new Set(sourcesThatNeedPlaceholder), new Set(sourcesOfSubscribedTracks)));\n      if (placeholderNeededForThisParticipant.length > 0) {\n        placeholderMap.set(participant.identity, placeholderNeededForThisParticipant);\n      }\n    });\n  }\n  return placeholderMap;\n}\n\n// src/hooks/useTrackRefBySourceOrName.ts\nimport { setupMediaTrack, getTrackByIdentifier } from \"@livekit/components-core\";\nimport * as React44 from \"react\";\nimport { Track as Track3 } from \"livekit-client\";\nfunction useTrackRefBySourceOrName(source) {\n  var _a, _b;\n  const [publication, setPublication] = React44.useState(getTrackByIdentifier(source));\n  const {\n    trackObserver\n  } = React44.useMemo(() => {\n    return setupMediaTrack(source);\n  }, [(_a = source.participant.sid) != null ? _a : source.participant.identity, source.source]);\n  React44.useEffect(() => {\n    const subscription = trackObserver.subscribe(publication2 => {\n      setPublication(publication2);\n    });\n    return () => subscription == null ? void 0 : subscription.unsubscribe();\n  }, [trackObserver]);\n  return {\n    participant: source.participant,\n    source: (_b = source.source) != null ? _b : Track3.Source.Unknown,\n    publication\n  };\n}\n\n// src/hooks/useTrackByName.ts\nfunction useTrackByName(name, participant) {\n  const p = useEnsureParticipant(participant);\n  return useTrackRefBySourceOrName({\n    name,\n    participant: p\n  });\n}\n\n// src/hooks/useChat.ts\nimport * as React45 from \"react\";\nimport { setupChat } from \"@livekit/components-core\";\nimport { ConnectionState as ConnectionState3 } from \"livekit-client\";\nfunction useChat(options) {\n  const room = useRoomContext();\n  const connectionState = useConnectionState(room);\n  const isDisconnected = React45.useMemo(() => connectionState === ConnectionState3.Disconnected, [connectionState]);\n  const setup = React45.useMemo(() => setupChat(room, options), [room, options, isDisconnected]);\n  const isSending = useObservableState(setup.isSendingObservable, false);\n  const chatMessages = useObservableState(setup.messageObservable, []);\n  return {\n    send: setup.send,\n    update: setup.update,\n    chatMessages,\n    isSending\n  };\n}\n\n// src/hooks/usePersistentUserChoices.ts\nimport { loadUserChoices, saveUserChoices } from \"@livekit/components-core\";\nimport * as React46 from \"react\";\nfunction usePersistentUserChoices(options = {}) {\n  var _a;\n  const [userChoices, setSettings] = React46.useState(loadUserChoices(options.defaults, (_a = options.preventLoad) != null ? _a : false));\n  const saveAudioInputEnabled = React46.useCallback(isEnabled => {\n    setSettings(prev => __spreadProps(__spreadValues({}, prev), {\n      audioEnabled: isEnabled\n    }));\n  }, []);\n  const saveVideoInputEnabled = React46.useCallback(isEnabled => {\n    setSettings(prev => __spreadProps(__spreadValues({}, prev), {\n      videoEnabled: isEnabled\n    }));\n  }, []);\n  const saveAudioInputDeviceId = React46.useCallback(deviceId => {\n    setSettings(prev => __spreadProps(__spreadValues({}, prev), {\n      audioDeviceId: deviceId\n    }));\n  }, []);\n  const saveVideoInputDeviceId = React46.useCallback(deviceId => {\n    setSettings(prev => __spreadProps(__spreadValues({}, prev), {\n      videoDeviceId: deviceId\n    }));\n  }, []);\n  const saveUsername = React46.useCallback(username => {\n    setSettings(prev => __spreadProps(__spreadValues({}, prev), {\n      username\n    }));\n  }, []);\n  React46.useEffect(() => {\n    var _a2;\n    saveUserChoices(userChoices, (_a2 = options.preventSave) != null ? _a2 : false);\n  }, [userChoices, options.preventSave]);\n  return {\n    userChoices,\n    saveAudioInputEnabled,\n    saveVideoInputEnabled,\n    saveAudioInputDeviceId,\n    saveVideoInputDeviceId,\n    saveUsername\n  };\n}\n\n// src/hooks/useIsEncrypted.ts\nimport * as React47 from \"react\";\nimport { LocalParticipant } from \"livekit-client\";\nimport { encryptionStatusObservable } from \"@livekit/components-core\";\nfunction useIsEncrypted(participant, options = {}) {\n  const p = useEnsureParticipant(participant);\n  const room = useEnsureRoom(options.room);\n  const observer = React47.useMemo(() => encryptionStatusObservable(room, p), [room, p]);\n  const isEncrypted = useObservableState(observer, p instanceof LocalParticipant ? p.isE2EEEnabled : p.isEncrypted);\n  return isEncrypted;\n}\n\n// src/hooks/useTrackVolume.ts\nimport * as React48 from \"react\";\nimport { Track as Track4, createAudioAnalyser } from \"livekit-client\";\nimport { isTrackReference } from \"@livekit/components-core\";\nfunction useTrackVolume(trackOrTrackReference, options = {\n  fftSize: 32,\n  smoothingTimeConstant: 0\n}) {\n  const track = isTrackReference(trackOrTrackReference) ? trackOrTrackReference.publication.track : trackOrTrackReference;\n  const [volume, setVolume] = React48.useState(0);\n  React48.useEffect(() => {\n    if (!track || !track.mediaStream) {\n      return;\n    }\n    const {\n      cleanup,\n      analyser\n    } = createAudioAnalyser(track, options);\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const updateVolume = () => {\n      analyser.getByteFrequencyData(dataArray);\n      let sum = 0;\n      for (let i = 0; i < dataArray.length; i++) {\n        const a = dataArray[i];\n        sum += a * a;\n      }\n      setVolume(Math.sqrt(sum / dataArray.length) / 255);\n    };\n    const interval = setInterval(updateVolume, 1e3 / 30);\n    return () => {\n      cleanup();\n      clearInterval(interval);\n    };\n  }, [track, track == null ? void 0 : track.mediaStream, JSON.stringify(options)]);\n  return volume;\n}\nvar normalizeFrequencies = frequencies => {\n  const normalizeDb = value => {\n    const minDb = -100;\n    const maxDb = -10;\n    let db = 1 - Math.max(minDb, Math.min(maxDb, value)) * -1 / 100;\n    db = Math.sqrt(db);\n    return db;\n  };\n  return frequencies.map(value => {\n    if (value === -Infinity) {\n      return 0;\n    }\n    return normalizeDb(value);\n  });\n};\nvar multibandDefaults = {\n  bands: 5,\n  loPass: 100,\n  hiPass: 600,\n  updateInterval: 10,\n  analyserOptions: {\n    fftSize: 2048\n  }\n};\nfunction useMultibandTrackVolume(trackOrTrackReference, options = {}) {\n  var _a;\n  const track = trackOrTrackReference instanceof Track4 ? trackOrTrackReference : (_a = trackOrTrackReference == null ? void 0 : trackOrTrackReference.publication) == null ? void 0 : _a.track;\n  const [frequencyBands, setFrequencyBands] = React48.useState([]);\n  const opts = __spreadValues(__spreadValues({}, multibandDefaults), options);\n  React48.useEffect(() => {\n    if (!track || !(track == null ? void 0 : track.mediaStream)) {\n      return;\n    }\n    const {\n      analyser,\n      cleanup\n    } = createAudioAnalyser(track, opts.analyserOptions);\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n    const updateVolume = () => {\n      analyser.getFloatFrequencyData(dataArray);\n      let frequencies = new Float32Array(dataArray.length);\n      for (let i = 0; i < dataArray.length; i++) {\n        frequencies[i] = dataArray[i];\n      }\n      frequencies = frequencies.slice(options.loPass, options.hiPass);\n      const normalizedFrequencies = normalizeFrequencies(frequencies);\n      const chunkSize = Math.ceil(normalizedFrequencies.length / opts.bands);\n      const chunks = [];\n      for (let i = 0; i < opts.bands; i++) {\n        const summedVolumes = normalizedFrequencies.slice(i * chunkSize, (i + 1) * chunkSize).reduce((acc, val) => acc += val, 0);\n        chunks.push(summedVolumes / chunkSize);\n      }\n      setFrequencyBands(chunks);\n    };\n    const interval = setInterval(updateVolume, opts.updateInterval);\n    return () => {\n      cleanup();\n      clearInterval(interval);\n    };\n  }, [track, track == null ? void 0 : track.mediaStream, JSON.stringify(options)]);\n  return frequencyBands;\n}\n\n// src/hooks/useParticipantTracks.ts\nimport * as React49 from \"react\";\nimport { participantTracksObservable } from \"@livekit/components-core\";\nfunction useParticipantTracks(sources, participantIdentity) {\n  const room = useRoomContext();\n  const participantContext = useMaybeParticipantContext();\n  const p = participantIdentity ? room.getParticipantByIdentity(participantIdentity) : participantContext;\n  const observable = React49.useMemo(() => p ? participantTracksObservable(p, {\n    sources\n  }) : void 0, [p == null ? void 0 : p.sid, p == null ? void 0 : p.identity, JSON.stringify(sources)]);\n  const trackRefs = useObservableState(observable, []);\n  return trackRefs;\n}\n\n// src/hooks/useTrackTranscription.ts\nimport { addMediaTimestampToTranscription as addTimestampsToTranscription, dedupeSegments, getTrackReferenceId as getTrackReferenceId3, trackTranscriptionObserver } from \"@livekit/components-core\";\nimport * as React51 from \"react\";\n\n// src/hooks/useTrackSyncTime.ts\nimport * as React50 from \"react\";\nimport { trackSyncTimeObserver } from \"@livekit/components-core\";\nfunction useTrackSyncTime({\n  publication\n}) {\n  var _a;\n  const observable = React50.useMemo(() => (publication == null ? void 0 : publication.track) ? trackSyncTimeObserver(publication.track) : void 0, [publication == null ? void 0 : publication.track]);\n  return useObservableState(observable, {\n    timestamp: Date.now(),\n    rtpTimestamp: (_a = publication == null ? void 0 : publication.track) == null ? void 0 : _a.rtpTimestamp\n  });\n}\n\n// src/hooks/useTrackTranscription.ts\nvar TRACK_TRANSCRIPTION_DEFAULTS = {\n  bufferSize: 100\n  // maxAge: 2_000,\n};\nfunction useTrackTranscription(trackRef, options) {\n  const opts = __spreadValues(__spreadValues({}, TRACK_TRANSCRIPTION_DEFAULTS), options);\n  const [segments, setSegments] = React51.useState([]);\n  const syncTimestamps = useTrackSyncTime(trackRef);\n  const handleSegmentMessage = newSegments => {\n    setSegments(prevSegments => dedupeSegments(prevSegments,\n    // when first receiving a segment, add the current media timestamp to it\n    newSegments.map(s => addTimestampsToTranscription(s, syncTimestamps)), opts.bufferSize));\n  };\n  React51.useEffect(() => {\n    if (!trackRef.publication) {\n      return;\n    }\n    const subscription = trackTranscriptionObserver(trackRef.publication).subscribe(evt => {\n      handleSegmentMessage(...evt);\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [getTrackReferenceId3(trackRef), handleSegmentMessage]);\n  return {\n    segments\n  };\n}\n\n// src/components/controls/ClearPinButton.tsx\nvar ClearPinButton = /* @__PURE__ */React52.forwardRef(function ClearPinButton2(props, ref) {\n  const {\n    buttonProps\n  } = useClearPinButton(props);\n  return /* @__PURE__ */React52.createElement(\"button\", __spreadValues({\n    ref\n  }, buttonProps), props.children);\n});\n\n// src/components/ConnectionState.tsx\nimport * as React53 from \"react\";\nvar ConnectionState4 = /* @__PURE__ */React53.forwardRef(function ConnectionState5(_a, ref) {\n  var _b = _a,\n    {\n      room\n    } = _b,\n    props = __objRest(_b, [\"room\"]);\n  const connectionState = useConnectionState(room);\n  return /* @__PURE__ */React53.createElement(\"div\", __spreadValues({\n    ref\n  }, props), connectionState);\n});\n\n// src/components/controls/ChatToggle.tsx\nimport * as React54 from \"react\";\nvar ChatToggle = /* @__PURE__ */React54.forwardRef(function ChatToggle2(props, ref) {\n  const {\n    mergedProps\n  } = useChatToggle({\n    props\n  });\n  return /* @__PURE__ */React54.createElement(\"button\", __spreadValues({\n    ref\n  }, mergedProps), props.children);\n});\n\n// src/components/controls/DisconnectButton.tsx\nimport * as React55 from \"react\";\nvar DisconnectButton = /* @__PURE__ */React55.forwardRef(function DisconnectButton2(props, ref) {\n  const {\n    buttonProps\n  } = useDisconnectButton(props);\n  return /* @__PURE__ */React55.createElement(\"button\", __spreadValues({\n    ref\n  }, buttonProps), props.children);\n});\n\n// src/components/controls/FocusToggle.tsx\nimport * as React75 from \"react\";\n\n// src/assets/icons/CameraDisabledIcon.tsx\nimport * as React56 from \"react\";\nvar SvgCameraDisabledIcon = props => /* @__PURE__ */React56.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"currentColor\"\n}, props), /* @__PURE__ */React56.createElement(\"path\", {\n  d: \"M1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708L11 10.293V4.5A1.5 1.5 0 0 0 9.5 3H3.707zM0 4.5a1.5 1.5 0 0 1 .943-1.393l9.532 9.533c-.262.224-.603.36-.975.36h-8A1.5 1.5 0 0 1 0 11.5z\"\n}), /* @__PURE__ */React56.createElement(\"path\", {\n  d: \"m15.2 3.6-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\"\n}));\nvar CameraDisabledIcon_default = SvgCameraDisabledIcon;\n\n// src/assets/icons/CameraIcon.tsx\nimport * as React57 from \"react\";\nvar SvgCameraIcon = props => /* @__PURE__ */React57.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"currentColor\"\n}, props), /* @__PURE__ */React57.createElement(\"path\", {\n  d: \"M0 4.5A1.5 1.5 0 0 1 1.5 3h8A1.5 1.5 0 0 1 11 4.5v7A1.5 1.5 0 0 1 9.5 13h-8A1.5 1.5 0 0 1 0 11.5zM15.2 3.6l-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\"\n}));\nvar CameraIcon_default = SvgCameraIcon;\n\n// src/assets/icons/ChatCloseIcon.tsx\nimport * as React58 from \"react\";\nvar SvgChatCloseIcon = props => /* @__PURE__ */React58.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  viewBox: \"0 0 24 24\"\n}, props), /* @__PURE__ */React58.createElement(\"path\", {\n  fill: \"#FFF\",\n  d: \"M4.99 3.99a1 1 0 0 0-.697 1.717L10.586 12l-6.293 6.293a1 1 0 1 0 1.414 1.414L12 13.414l6.293 6.293a1 1 0 1 0 1.414-1.414L13.414 12l6.293-6.293a1 1 0 0 0-.727-1.717 1 1 0 0 0-.687.303L12 10.586 5.707 4.293a1 1 0 0 0-.717-.303z\"\n}));\nvar ChatCloseIcon_default = SvgChatCloseIcon;\n\n// src/assets/icons/ChatIcon.tsx\nimport * as React59 from \"react\";\nvar SvgChatIcon = props => /* @__PURE__ */React59.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 18,\n  fill: \"none\"\n}, props), /* @__PURE__ */React59.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M0 2.75A2.75 2.75 0 0 1 2.75 0h10.5A2.75 2.75 0 0 1 16 2.75v13.594a.75.75 0 0 1-1.234.572l-3.691-3.12a1.25 1.25 0 0 0-.807-.296H2.75A2.75 2.75 0 0 1 0 10.75v-8ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v8c0 .69.56 1.25 1.25 1.25h7.518c.65 0 1.279.23 1.775.65l2.457 2.077V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\",\n  clipRule: \"evenodd\"\n}), /* @__PURE__ */React59.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M3 4.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Z\",\n  clipRule: \"evenodd\"\n}));\nvar ChatIcon_default = SvgChatIcon;\n\n// src/assets/icons/Chevron.tsx\nimport * as React60 from \"react\";\nvar SvgChevron = props => /* @__PURE__ */React60.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"none\"\n}, props), /* @__PURE__ */React60.createElement(\"path\", {\n  fill: \"currentcolor\",\n  fillRule: \"evenodd\",\n  d: \"M5.293 2.293a1 1 0 0 1 1.414 0l4.823 4.823a1.25 1.25 0 0 1 0 1.768l-4.823 4.823a1 1 0 0 1-1.414-1.414L9.586 8 5.293 3.707a1 1 0 0 1 0-1.414z\",\n  clipRule: \"evenodd\"\n}));\nvar Chevron_default = SvgChevron;\n\n// src/assets/icons/FocusToggleIcon.tsx\nimport * as React61 from \"react\";\nvar SvgFocusToggleIcon = props => /* @__PURE__ */React61.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"none\"\n}, props), /* @__PURE__ */React61.createElement(\"g\", {\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeWidth: 1.5\n}, /* @__PURE__ */React61.createElement(\"path\", {\n  d: \"M10 1.75h4.25m0 0V6m0-4.25L9 7M6 14.25H1.75m0 0V10m0 4.25L7 9\"\n})));\nvar FocusToggleIcon_default = SvgFocusToggleIcon;\n\n// src/assets/icons/GearIcon.tsx\nimport * as React62 from \"react\";\nvar SvgGearIcon = props => /* @__PURE__ */React62.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"none\"\n}, props), /* @__PURE__ */React62.createElement(\"path\", {\n  fill: \"currentcolor\",\n  fillRule: \"evenodd\",\n  d: \"M8.961.894C8.875-.298 7.125-.298 7.04.894c-.066.912-1.246 1.228-1.76.472-.67-.99-2.186-.115-1.664.96.399.824-.465 1.688-1.288 1.289-1.076-.522-1.95.994-.961 1.665.756.513.44 1.693-.472 1.759-1.192.086-1.192 1.836 0 1.922.912.066 1.228 1.246.472 1.76-.99.67-.115 2.186.96 1.664.824-.399 1.688.465 1.289 1.288-.522 1.076.994 1.95 1.665.961.513-.756 1.693-.44 1.759.472.086 1.192 1.836 1.192 1.922 0 .066-.912 1.246-1.228 1.76-.472.67.99 2.186.115 1.664-.96-.399-.824.465-1.688 1.288-1.289 1.076.522 1.95-.994.961-1.665-.756-.513-.44-1.693.472-1.759 1.192-.086 1.192-1.836 0-1.922-.912-.066-1.228-1.246-.472-1.76.99-.67.115-2.186-.96-1.664-.824.399-1.688-.465-1.289-1.288.522-1.076-.994-1.95-1.665-.961-.513.756-1.693.44-1.759-.472ZM8 13A5 5 0 1 0 8 3a5 5 0 0 0 0 10Z\",\n  clipRule: \"evenodd\"\n}));\nvar GearIcon_default = SvgGearIcon;\n\n// src/assets/icons/LeaveIcon.tsx\nimport * as React63 from \"react\";\nvar SvgLeaveIcon = props => /* @__PURE__ */React63.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"none\"\n}, props), /* @__PURE__ */React63.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M2 2.75A2.75 2.75 0 0 1 4.75 0h6.5A2.75 2.75 0 0 1 14 2.75v10.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-.5a.75.75 0 0 1 1.5 0v.5c0 .69.56 1.25 1.25 1.25h6.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25h-6.5c-.69 0-1.25.56-1.25 1.25v.5a.75.75 0 0 1-1.5 0v-.5Z\",\n  clipRule: \"evenodd\"\n}), /* @__PURE__ */React63.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M8.78 7.47a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 1 1-1.06-1.06l.97-.97H1.75a.75.75 0 0 1 0-1.5h4.69l-.97-.97a.75.75 0 0 1 1.06-1.06l2.25 2.25Z\",\n  clipRule: \"evenodd\"\n}));\nvar LeaveIcon_default = SvgLeaveIcon;\n\n// src/assets/icons/LockLockedIcon.tsx\nimport * as React64 from \"react\";\nvar SvgLockLockedIcon = props => /* @__PURE__ */React64.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"none\"\n}, props), /* @__PURE__ */React64.createElement(\"path\", {\n  fill: \"currentcolor\",\n  fillRule: \"evenodd\",\n  d: \"M4 6.104V4a4 4 0 1 1 8 0v2.104c1.154.326 2 1.387 2 2.646v4.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-4.5c0-1.259.846-2.32 2-2.646ZM5.5 4a2.5 2.5 0 0 1 5 0v2h-5V4Z\",\n  clipRule: \"evenodd\"\n}));\nvar LockLockedIcon_default = SvgLockLockedIcon;\n\n// src/assets/icons/MicDisabledIcon.tsx\nimport * as React65 from \"react\";\nvar SvgMicDisabledIcon = props => /* @__PURE__ */React65.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"currentColor\"\n}, props), /* @__PURE__ */React65.createElement(\"path\", {\n  d: \"M12.227 11.52a5.477 5.477 0 0 0 1.246-2.97.5.5 0 0 0-.995-.1 4.478 4.478 0 0 1-.962 2.359l-1.07-1.07C10.794 9.247 11 8.647 11 8V3a3 3 0 0 0-6 0v1.293L1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708zM8 12.5c.683 0 1.33-.152 1.911-.425l.743.743c-.649.359-1.378.59-2.154.66V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .995-.098A4.5 4.5 0 0 0 8 12.5z\"\n}), /* @__PURE__ */React65.createElement(\"path\", {\n  d: \"M8.743 10.907 5 7.164V8a3 3 0 0 0 3.743 2.907z\"\n}));\nvar MicDisabledIcon_default = SvgMicDisabledIcon;\n\n// src/assets/icons/MicIcon.tsx\nimport * as React66 from \"react\";\nvar SvgMicIcon = props => /* @__PURE__ */React66.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"currentColor\"\n}, props), /* @__PURE__ */React66.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M2.975 8.002a.5.5 0 0 1 .547.449 4.5 4.5 0 0 0 8.956 0 .5.5 0 1 1 .995.098A5.502 5.502 0 0 1 8.5 13.478V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .448-.547z\",\n  clipRule: \"evenodd\"\n}), /* @__PURE__ */React66.createElement(\"path\", {\n  d: \"M5 3a3 3 0 1 1 6 0v5a3 3 0 0 1-6 0z\"\n}));\nvar MicIcon_default = SvgMicIcon;\n\n// src/assets/icons/QualityExcellentIcon.tsx\nimport * as React67 from \"react\";\nvar SvgQualityExcellentIcon = props => /* @__PURE__ */React67.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"currentcolor\"\n}, props), /* @__PURE__ */React67.createElement(\"path\", {\n  d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n}), /* @__PURE__ */React67.createElement(\"path\", {\n  d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n}));\nvar QualityExcellentIcon_default = SvgQualityExcellentIcon;\n\n// src/assets/icons/QualityGoodIcon.tsx\nimport * as React68 from \"react\";\nvar SvgQualityGoodIcon = props => /* @__PURE__ */React68.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"currentcolor\"\n}, props), /* @__PURE__ */React68.createElement(\"path\", {\n  d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n}), /* @__PURE__ */React68.createElement(\"path\", {\n  d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n}), /* @__PURE__ */React68.createElement(\"g\", {\n  opacity: 0.25\n}, /* @__PURE__ */React68.createElement(\"path\", {\n  d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n}), /* @__PURE__ */React68.createElement(\"path\", {\n  d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n})));\nvar QualityGoodIcon_default = SvgQualityGoodIcon;\n\n// src/assets/icons/QualityPoorIcon.tsx\nimport * as React69 from \"react\";\nvar SvgQualityPoorIcon = props => /* @__PURE__ */React69.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"currentcolor\"\n}, props), /* @__PURE__ */React69.createElement(\"path\", {\n  d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n}), /* @__PURE__ */React69.createElement(\"path\", {\n  d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n}), /* @__PURE__ */React69.createElement(\"g\", {\n  opacity: 0.25\n}, /* @__PURE__ */React69.createElement(\"path\", {\n  d: \"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n}), /* @__PURE__ */React69.createElement(\"path\", {\n  d: \"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n}), /* @__PURE__ */React69.createElement(\"path\", {\n  d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n})));\nvar QualityPoorIcon_default = SvgQualityPoorIcon;\n\n// src/assets/icons/QualityUnknownIcon.tsx\nimport * as React70 from \"react\";\nvar SvgQualityUnknownIcon = props => /* @__PURE__ */React70.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"currentColor\"\n}, props), /* @__PURE__ */React70.createElement(\"g\", {\n  opacity: 0.25\n}, /* @__PURE__ */React70.createElement(\"path\", {\n  d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\"\n}), /* @__PURE__ */React70.createElement(\"path\", {\n  d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\"\n})));\nvar QualityUnknownIcon_default = SvgQualityUnknownIcon;\n\n// src/assets/icons/ScreenShareIcon.tsx\nimport * as React71 from \"react\";\nvar SvgScreenShareIcon = props => /* @__PURE__ */React71.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 20,\n  height: 16,\n  fill: \"none\"\n}, props), /* @__PURE__ */React71.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M0 2.75A2.75 2.75 0 0 1 2.75 0h14.5A2.75 2.75 0 0 1 20 2.75v10.5A2.75 2.75 0 0 1 17.25 16H2.75A2.75 2.75 0 0 1 0 13.25V2.75ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v10.5c0 .69.56 1.25 1.25 1.25h14.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\",\n  clipRule: \"evenodd\"\n}), /* @__PURE__ */React71.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M9.47 4.22a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1-1.06 1.06l-.97-.97v4.69a.75.75 0 0 1-1.5 0V6.56l-.97.97a.75.75 0 0 1-1.06-1.06l2.25-2.25Z\",\n  clipRule: \"evenodd\"\n}));\nvar ScreenShareIcon_default = SvgScreenShareIcon;\n\n// src/assets/icons/ScreenShareStopIcon.tsx\nimport * as React72 from \"react\";\nvar SvgScreenShareStopIcon = props => /* @__PURE__ */React72.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 20,\n  height: 16,\n  fill: \"none\"\n}, props), /* @__PURE__ */React72.createElement(\"g\", {\n  fill: \"currentColor\"\n}, /* @__PURE__ */React72.createElement(\"path\", {\n  d: \"M7.28 4.22a.75.75 0 0 0-1.06 1.06L8.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L10 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L11.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L10 6.94z\"\n}), /* @__PURE__ */React72.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M2.75 0A2.75 2.75 0 0 0 0 2.75v10.5A2.75 2.75 0 0 0 2.75 16h14.5A2.75 2.75 0 0 0 20 13.25V2.75A2.75 2.75 0 0 0 17.25 0zM1.5 2.75c0-.69.56-1.25 1.25-1.25h14.5c.69 0 1.25.56 1.25 1.25v10.5c0 .69-.56 1.25-1.25 1.25H2.75c-.69 0-1.25-.56-1.25-1.25z\",\n  clipRule: \"evenodd\"\n})));\nvar ScreenShareStopIcon_default = SvgScreenShareStopIcon;\n\n// src/assets/icons/SpinnerIcon.tsx\nimport * as React73 from \"react\";\nvar SvgSpinnerIcon = props => /* @__PURE__ */React73.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"none\"\n}, props), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M8 0a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0V.75A.75.75 0 0 1 8 0Z\",\n  clipRule: \"evenodd\"\n}), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M8 12a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0v-2.5A.75.75 0 0 1 8 12Z\",\n  clipRule: \"evenodd\",\n  opacity: 0.7\n}), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M12 1.072a.75.75 0 0 1 .274 1.024l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 12 1.072Z\",\n  clipRule: \"evenodd\"\n}), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M6 11.464a.75.75 0 0 1 .274 1.025l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 6 11.464Z\",\n  clipRule: \"evenodd\",\n  opacity: 0.6\n}), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M14.928 4a.75.75 0 0 1-.274 1.025l-2.165 1.25a.75.75 0 1 1-.75-1.3l2.165-1.25A.75.75 0 0 1 14.928 4Z\",\n  clipRule: \"evenodd\"\n}), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M4.536 10a.75.75 0 0 1-.275 1.024l-2.165 1.25a.75.75 0 0 1-.75-1.298l2.165-1.25A.75.75 0 0 1 4.536 10Z\",\n  clipRule: \"evenodd\",\n  opacity: 0.5\n}), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M16 8a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 16 8Z\",\n  clipRule: \"evenodd\"\n}), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M4 8a.75.75 0 0 1-.75.75H.75a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 4 8Z\",\n  clipRule: \"evenodd\",\n  opacity: 0.4\n}), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M14.928 12a.75.75 0 0 1-1.024.274l-2.165-1.25a.75.75 0 0 1 .75-1.299l2.165 1.25A.75.75 0 0 1 14.928 12Z\",\n  clipRule: \"evenodd\",\n  opacity: 0.9\n}), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M4.536 6a.75.75 0 0 1-1.025.275l-2.165-1.25a.75.75 0 1 1 .75-1.3l2.165 1.25A.75.75 0 0 1 4.536 6Z\",\n  clipRule: \"evenodd\",\n  opacity: 0.3\n}), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M12 14.928a.75.75 0 0 1-1.024-.274l-1.25-2.165a.75.75 0 0 1 1.298-.75l1.25 2.165A.75.75 0 0 1 12 14.928Z\",\n  clipRule: \"evenodd\",\n  opacity: 0.8\n}), /* @__PURE__ */React73.createElement(\"path\", {\n  fill: \"currentColor\",\n  fillRule: \"evenodd\",\n  d: \"M6 4.536a.75.75 0 0 1-1.024-.275l-1.25-2.165a.75.75 0 1 1 1.299-.75l1.25 2.165A.75.75 0 0 1 6 4.536Z\",\n  clipRule: \"evenodd\",\n  opacity: 0.2\n}));\nvar SpinnerIcon_default = SvgSpinnerIcon;\n\n// src/assets/icons/UnfocusToggleIcon.tsx\nimport * as React74 from \"react\";\nvar SvgUnfocusToggleIcon = props => /* @__PURE__ */React74.createElement(\"svg\", __spreadValues({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 16,\n  height: 16,\n  fill: \"none\"\n}, props), /* @__PURE__ */React74.createElement(\"g\", {\n  stroke: \"currentColor\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeWidth: 1.5\n}, /* @__PURE__ */React74.createElement(\"path\", {\n  d: \"M13.25 7H9m0 0V2.75M9 7l5.25-5.25M2.75 9H7m0 0v4.25M7 9l-5.25 5.25\"\n})));\nvar UnfocusToggleIcon_default = SvgUnfocusToggleIcon;\n\n// src/components/controls/FocusToggle.tsx\nvar FocusToggle = /* @__PURE__ */React75.forwardRef(function FocusToggle2(_a, ref) {\n  var _b = _a,\n    {\n      trackRef\n    } = _b,\n    props = __objRest(_b, [\"trackRef\"]);\n  const trackRefFromContext = useMaybeTrackRefContext();\n  const {\n    mergedProps,\n    inFocus\n  } = useFocusToggle({\n    trackRef: trackRef != null ? trackRef : trackRefFromContext,\n    props\n  });\n  return /* @__PURE__ */React75.createElement(LayoutContext.Consumer, null, layoutContext => layoutContext !== void 0 && /* @__PURE__ */React75.createElement(\"button\", __spreadValues({\n    ref\n  }, mergedProps), props.children ? props.children : inFocus ? /* @__PURE__ */React75.createElement(UnfocusToggleIcon_default, null) : /* @__PURE__ */React75.createElement(FocusToggleIcon_default, null)));\n});\n\n// src/components/controls/MediaDeviceSelect.tsx\nimport * as React77 from \"react\";\n\n// src/utils.ts\nimport * as React76 from \"react\";\nimport { log as log7 } from \"@livekit/components-core\";\nfunction isProp(prop) {\n  return prop !== void 0;\n}\nfunction mergeProps2(...props) {\n  return mergeProps(...props.filter(isProp));\n}\nfunction cloneSingleChild(children, props, key) {\n  return React76.Children.map(children, child => {\n    if (React76.isValidElement(child) && React76.Children.only(children)) {\n      return React76.cloneElement(child, __spreadProps(__spreadValues({}, props), {\n        key\n      }));\n    }\n    return child;\n  });\n}\nfunction warnAboutMissingStyles(el) {\n  var _a, _b;\n  if (typeof window !== \"undefined\" && typeof process !== \"undefined\" && (\n  // eslint-disable-next-line turbo/no-undeclared-env-vars\n  ((_a = process == null ? void 0 : process.env) == null ? void 0 : _a.NODE_ENV) === \"dev\" ||\n  // eslint-disable-next-line turbo/no-undeclared-env-vars\n  ((_b = process == null ? void 0 : process.env) == null ? void 0 : _b.NODE_ENV) === \"development\")) {\n    const target = el != null ? el : document.querySelector(\".lk-room-container\");\n    if (target && !getComputedStyle(target).getPropertyValue(\"--lk-has-imported-styles\")) {\n      log7.warn(\"It looks like you're not using the `@livekit/components-styles package`. To render the UI with the default styling, please import it in your layout or page.\");\n    }\n  }\n}\n\n// src/components/controls/MediaDeviceSelect.tsx\nimport { RoomEvent as RoomEvent2 } from \"livekit-client\";\nvar MediaDeviceSelect = /* @__PURE__ */React77.forwardRef(function MediaDeviceSelect2(_a, ref) {\n  var _b = _a,\n    {\n      kind,\n      initialSelection,\n      onActiveDeviceChange,\n      onDeviceListChange,\n      onDeviceSelectError,\n      exactMatch,\n      track,\n      requestPermissions,\n      onError\n    } = _b,\n    props = __objRest(_b, [\"kind\", \"initialSelection\", \"onActiveDeviceChange\", \"onDeviceListChange\", \"onDeviceSelectError\", \"exactMatch\", \"track\", \"requestPermissions\", \"onError\"]);\n  const room = useMaybeRoomContext();\n  const handleError = React77.useCallback(e => {\n    if (room) {\n      room.emit(RoomEvent2.MediaDevicesError, e);\n    }\n    onError == null ? void 0 : onError(e);\n  }, [room, onError]);\n  const {\n    devices,\n    activeDeviceId,\n    setActiveMediaDevice,\n    className\n  } = useMediaDeviceSelect({\n    kind,\n    room,\n    track,\n    requestPermissions,\n    onError: handleError\n  });\n  React77.useEffect(() => {\n    if (initialSelection !== void 0) {\n      setActiveMediaDevice(initialSelection);\n    }\n  }, [setActiveMediaDevice]);\n  React77.useEffect(() => {\n    if (typeof onDeviceListChange === \"function\") {\n      onDeviceListChange(devices);\n    }\n  }, [onDeviceListChange, devices]);\n  React77.useEffect(() => {\n    if (activeDeviceId && activeDeviceId !== \"\") {\n      onActiveDeviceChange == null ? void 0 : onActiveDeviceChange(activeDeviceId);\n    }\n  }, [activeDeviceId]);\n  const handleActiveDeviceChange = deviceId => __async(this, null, function* () {\n    try {\n      yield setActiveMediaDevice(deviceId, {\n        exact: exactMatch\n      });\n    } catch (e) {\n      if (e instanceof Error) {\n        onDeviceSelectError == null ? void 0 : onDeviceSelectError(e);\n      } else {\n        throw e;\n      }\n    }\n  });\n  const mergedProps = React77.useMemo(() => mergeProps2(props, {\n    className\n  }, {\n    className: \"lk-list\"\n  }), [className, props]);\n  function isActive(deviceId, activeDeviceId2, index) {\n    return deviceId === activeDeviceId2 || index === 0 && activeDeviceId2 === \"default\";\n  }\n  return /* @__PURE__ */React77.createElement(\"ul\", __spreadValues({\n    ref\n  }, mergedProps), devices.map((device, index) => /* @__PURE__ */React77.createElement(\"li\", {\n    key: device.deviceId,\n    id: device.deviceId,\n    \"data-lk-active\": isActive(device.deviceId, activeDeviceId, index),\n    \"aria-selected\": isActive(device.deviceId, activeDeviceId, index),\n    role: \"option\"\n  }, /* @__PURE__ */React77.createElement(\"button\", {\n    className: \"lk-button\",\n    onClick: () => handleActiveDeviceChange(device.deviceId)\n  }, device.label))));\n});\n\n// src/components/controls/StartAudio.tsx\nimport * as React78 from \"react\";\nvar StartAudio = /* @__PURE__ */React78.forwardRef(function StartAudio2(_a, ref) {\n  var _b = _a,\n    {\n      label = \"Allow Audio\"\n    } = _b,\n    props = __objRest(_b, [\"label\"]);\n  const room = useRoomContext();\n  const {\n    mergedProps\n  } = useStartAudio({\n    room,\n    props\n  });\n  return /* @__PURE__ */React78.createElement(\"button\", __spreadValues({\n    ref\n  }, mergedProps), label);\n});\n\n// src/components/controls/TrackToggle.tsx\nimport * as React80 from \"react\";\n\n// src/assets/icons/util.tsx\nimport * as React79 from \"react\";\nimport { ConnectionQuality as ConnectionQuality2, Track as Track5 } from \"livekit-client\";\nfunction getSourceIcon(source, enabled) {\n  switch (source) {\n    case Track5.Source.Microphone:\n      return enabled ? /* @__PURE__ */React79.createElement(MicIcon_default, null) : /* @__PURE__ */React79.createElement(MicDisabledIcon_default, null);\n    case Track5.Source.Camera:\n      return enabled ? /* @__PURE__ */React79.createElement(CameraIcon_default, null) : /* @__PURE__ */React79.createElement(CameraDisabledIcon_default, null);\n    case Track5.Source.ScreenShare:\n      return enabled ? /* @__PURE__ */React79.createElement(ScreenShareStopIcon_default, null) : /* @__PURE__ */React79.createElement(ScreenShareIcon_default, null);\n    default:\n      return void 0;\n  }\n}\nfunction getConnectionQualityIcon(quality) {\n  switch (quality) {\n    case ConnectionQuality2.Excellent:\n      return /* @__PURE__ */React79.createElement(QualityExcellentIcon_default, null);\n    case ConnectionQuality2.Good:\n      return /* @__PURE__ */React79.createElement(QualityGoodIcon_default, null);\n    case ConnectionQuality2.Poor:\n      return /* @__PURE__ */React79.createElement(QualityPoorIcon_default, null);\n    default:\n      return /* @__PURE__ */React79.createElement(QualityUnknownIcon_default, null);\n  }\n}\n\n// src/components/controls/TrackToggle.tsx\nvar TrackToggle = /* @__PURE__ */React80.forwardRef(function TrackToggle2(_a, ref) {\n  var _b = _a,\n    {\n      showIcon\n    } = _b,\n    props = __objRest(_b, [\"showIcon\"]);\n  const {\n    buttonProps,\n    enabled\n  } = useTrackToggle(props);\n  return /* @__PURE__ */React80.createElement(\"button\", __spreadValues({\n    ref\n  }, buttonProps), (showIcon != null ? showIcon : true) && getSourceIcon(props.source, enabled), props.children);\n});\n\n// src/components/layout/FocusLayout.tsx\nimport * as React89 from \"react\";\n\n// src/components/participant/ParticipantTile.tsx\nimport * as React88 from \"react\";\nimport { Track as Track6 } from \"livekit-client\";\nimport { isTrackReference as isTrackReference3, isTrackReferencePinned as isTrackReferencePinned2 } from \"@livekit/components-core\";\n\n// src/components/participant/ConnectionQualityIndicator.tsx\nimport * as React81 from \"react\";\nvar ConnectionQualityIndicator = /* @__PURE__ */React81.forwardRef(function ConnectionQualityIndicator2(props, ref) {\n  var _a;\n  const {\n    className,\n    quality\n  } = useConnectionQualityIndicator(props);\n  const elementProps = React81.useMemo(() => {\n    return __spreadProps(__spreadValues({}, mergeProps2(props, {\n      className\n    })), {\n      \"data-lk-quality\": quality\n    });\n  }, [quality, props, className]);\n  return /* @__PURE__ */React81.createElement(\"div\", __spreadValues({\n    ref\n  }, elementProps), (_a = props.children) != null ? _a : getConnectionQualityIcon(quality));\n});\n\n// src/components/participant/ParticipantName.tsx\nimport { setupParticipantName } from \"@livekit/components-core\";\nimport * as React82 from \"react\";\nvar ParticipantName = /* @__PURE__ */React82.forwardRef(function ParticipantName2(_a, ref) {\n  var _b = _a,\n    {\n      participant\n    } = _b,\n    props = __objRest(_b, [\"participant\"]);\n  const p = useEnsureParticipant(participant);\n  const {\n    className,\n    infoObserver\n  } = React82.useMemo(() => {\n    return setupParticipantName(p);\n  }, [p]);\n  const {\n    identity,\n    name\n  } = useObservableState(infoObserver, {\n    name: p.name,\n    identity: p.identity,\n    metadata: p.metadata\n  });\n  const mergedProps = React82.useMemo(() => {\n    return mergeProps2(props, {\n      className,\n      \"data-lk-participant-name\": name\n    });\n  }, [props, className, name]);\n  return /* @__PURE__ */React82.createElement(\"span\", __spreadValues({\n    ref\n  }, mergedProps), name !== \"\" ? name : identity, props.children);\n});\n\n// src/components/participant/TrackMutedIndicator.tsx\nimport * as React83 from \"react\";\nvar TrackMutedIndicator = /* @__PURE__ */React83.forwardRef(function TrackMutedIndicator2(_a, ref) {\n  var _b = _a,\n    {\n      trackRef,\n      show = \"always\"\n    } = _b,\n    props = __objRest(_b, [\"trackRef\", \"show\"]);\n  var _a2;\n  const {\n    className,\n    isMuted\n  } = useTrackMutedIndicator(trackRef);\n  const showIndicator = show === \"always\" || show === \"muted\" && isMuted || show === \"unmuted\" && !isMuted;\n  const htmlProps = React83.useMemo(() => mergeProps2(props, {\n    className\n  }), [className, props]);\n  if (!showIndicator) {\n    return null;\n  }\n  return /* @__PURE__ */React83.createElement(\"div\", __spreadProps(__spreadValues({\n    ref\n  }, htmlProps), {\n    \"data-lk-muted\": isMuted\n  }), (_a2 = props.children) != null ? _a2 : getSourceIcon(trackRef.source, !isMuted));\n});\n\n// src/assets/images/ParticipantPlaceholder.tsx\nimport * as React84 from \"react\";\nvar SvgParticipantPlaceholder = props => /* @__PURE__ */React84.createElement(\"svg\", __spreadValues({\n  width: 320,\n  height: 320,\n  viewBox: \"0 0 320 320\",\n  preserveAspectRatio: \"xMidYMid meet\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, props), /* @__PURE__ */React84.createElement(\"path\", {\n  d: \"M160 180C204.182 180 240 144.183 240 100C240 55.8172 204.182 20 160 20C115.817 20 79.9997 55.8172 79.9997 100C79.9997 144.183 115.817 180 160 180Z\",\n  fill: \"white\",\n  fillOpacity: 0.25\n}), /* @__PURE__ */React84.createElement(\"path\", {\n  d: \"M97.6542 194.614C103.267 191.818 109.841 192.481 115.519 195.141C129.025 201.466 144.1 205 159.999 205C175.899 205 190.973 201.466 204.48 195.141C210.158 192.481 216.732 191.818 222.345 194.614C262.703 214.719 291.985 253.736 298.591 300.062C300.15 310.997 291.045 320 280 320H39.9997C28.954 320 19.8495 310.997 21.4087 300.062C28.014 253.736 57.2966 214.72 97.6542 194.614Z\",\n  fill: \"white\",\n  fillOpacity: 0.25\n}));\nvar ParticipantPlaceholder_default = SvgParticipantPlaceholder;\n\n// src/components/participant/VideoTrack.tsx\nimport { RemoteTrackPublication } from \"livekit-client\";\nimport * as React86 from \"react\";\n\n// src/hooks/useMediaTrackBySourceOrName.ts\nimport { isTrackReference as isTrackReference2 } from \"@livekit/components-core\";\nimport { setupMediaTrack as setupMediaTrack2, log as log8, isLocal, getTrackByIdentifier as getTrackByIdentifier2 } from \"@livekit/components-core\";\nimport * as React85 from \"react\";\nfunction useMediaTrackBySourceOrName(observerOptions, options = {}) {\n  var _a;\n  const [publication, setPublication] = React85.useState(getTrackByIdentifier2(observerOptions));\n  const [isMuted, setMuted] = React85.useState(publication == null ? void 0 : publication.isMuted);\n  const [isSubscribed, setSubscribed] = React85.useState(publication == null ? void 0 : publication.isSubscribed);\n  const [track, setTrack] = React85.useState(publication == null ? void 0 : publication.track);\n  const [orientation, setOrientation] = React85.useState(\"landscape\");\n  const previousElement = React85.useRef();\n  const {\n    className,\n    trackObserver\n  } = React85.useMemo(() => {\n    return setupMediaTrack2(observerOptions);\n  }, [(_a = observerOptions.participant.sid) != null ? _a : observerOptions.participant.identity, observerOptions.source, isTrackReference2(observerOptions) && observerOptions.publication.trackSid]);\n  React85.useEffect(() => {\n    const subscription = trackObserver.subscribe(publication2 => {\n      log8.debug(\"update track\", publication2);\n      setPublication(publication2);\n      setMuted(publication2 == null ? void 0 : publication2.isMuted);\n      setSubscribed(publication2 == null ? void 0 : publication2.isSubscribed);\n      setTrack(publication2 == null ? void 0 : publication2.track);\n    });\n    return () => subscription == null ? void 0 : subscription.unsubscribe();\n  }, [trackObserver]);\n  React85.useEffect(() => {\n    var _a2, _b;\n    if (track) {\n      if (previousElement.current) {\n        track.detach(previousElement.current);\n      }\n      if (((_a2 = options.element) == null ? void 0 : _a2.current) && !(isLocal(observerOptions.participant) && (track == null ? void 0 : track.kind) === \"audio\")) {\n        track.attach(options.element.current);\n      }\n    }\n    previousElement.current = (_b = options.element) == null ? void 0 : _b.current;\n    return () => {\n      if (previousElement.current) {\n        track == null ? void 0 : track.detach(previousElement.current);\n      }\n    };\n  }, [track, options.element]);\n  React85.useEffect(() => {\n    var _a2, _b;\n    if (typeof ((_a2 = publication == null ? void 0 : publication.dimensions) == null ? void 0 : _a2.width) === \"number\" && typeof ((_b = publication == null ? void 0 : publication.dimensions) == null ? void 0 : _b.height) === \"number\") {\n      const orientation_ = publication.dimensions.width > publication.dimensions.height ? \"landscape\" : \"portrait\";\n      setOrientation(orientation_);\n    }\n  }, [publication]);\n  return {\n    publication,\n    isMuted,\n    isSubscribed,\n    track,\n    elementProps: mergeProps2(options.props, __spreadValues({\n      className,\n      \"data-lk-local-participant\": observerOptions.participant.isLocal,\n      \"data-lk-source\": publication == null ? void 0 : publication.source\n    }, (publication == null ? void 0 : publication.kind) === \"video\" && {\n      \"data-lk-orientation\": orientation\n    }))\n  };\n}\n\n// src/components/participant/VideoTrack.tsx\nimport * as useHooks from \"usehooks-ts\";\nvar VideoTrack = /* @__PURE__ */React86.forwardRef(function VideoTrack2(_a, ref) {\n  var _b = _a,\n    {\n      onTrackClick,\n      onClick,\n      onSubscriptionStatusChanged,\n      trackRef,\n      manageSubscription\n    } = _b,\n    props = __objRest(_b, [\"onTrackClick\", \"onClick\", \"onSubscriptionStatusChanged\", \"trackRef\", \"manageSubscription\"]);\n  const trackReference = useEnsureTrackRef(trackRef);\n  const mediaEl = React86.useRef(null);\n  React86.useImperativeHandle(ref, () => mediaEl.current);\n  const intersectionEntry = useHooks.useIntersectionObserver({\n    root: mediaEl.current\n  });\n  const [debouncedIntersectionEntry] = useHooks.useDebounceValue(intersectionEntry, 3e3);\n  React86.useEffect(() => {\n    if (manageSubscription && trackReference.publication instanceof RemoteTrackPublication && (debouncedIntersectionEntry == null ? void 0 : debouncedIntersectionEntry.isIntersecting) === false && (intersectionEntry == null ? void 0 : intersectionEntry.isIntersecting) === false) {\n      trackReference.publication.setSubscribed(false);\n    }\n  }, [debouncedIntersectionEntry, trackReference, manageSubscription]);\n  React86.useEffect(() => {\n    if (manageSubscription && trackReference.publication instanceof RemoteTrackPublication && (intersectionEntry == null ? void 0 : intersectionEntry.isIntersecting) === true) {\n      trackReference.publication.setSubscribed(true);\n    }\n  }, [intersectionEntry, trackReference, manageSubscription]);\n  const {\n    elementProps,\n    publication: pub,\n    isSubscribed\n  } = useMediaTrackBySourceOrName(trackReference, {\n    element: mediaEl,\n    props\n  });\n  React86.useEffect(() => {\n    onSubscriptionStatusChanged == null ? void 0 : onSubscriptionStatusChanged(!!isSubscribed);\n  }, [isSubscribed, onSubscriptionStatusChanged]);\n  const clickHandler = evt => {\n    onClick == null ? void 0 : onClick(evt);\n    onTrackClick == null ? void 0 : onTrackClick({\n      participant: trackReference == null ? void 0 : trackReference.participant,\n      track: pub\n    });\n  };\n  return /* @__PURE__ */React86.createElement(\"video\", __spreadProps(__spreadValues({\n    ref: mediaEl\n  }, elementProps), {\n    muted: true,\n    onClick: clickHandler\n  }));\n});\n\n// src/components/participant/AudioTrack.tsx\nimport * as React87 from \"react\";\nimport { log as log9 } from \"@livekit/components-core\";\nimport { RemoteAudioTrack, RemoteTrackPublication as RemoteTrackPublication2 } from \"livekit-client\";\nvar AudioTrack = /* @__PURE__ */React87.forwardRef(function AudioTrack2(_a, ref) {\n  var _b = _a,\n    {\n      trackRef,\n      onSubscriptionStatusChanged,\n      volume,\n      muted\n    } = _b,\n    props = __objRest(_b, [\"trackRef\", \"onSubscriptionStatusChanged\", \"volume\", \"muted\"]);\n  const trackReference = useEnsureTrackRef(trackRef);\n  const mediaEl = React87.useRef(null);\n  React87.useImperativeHandle(ref, () => mediaEl.current);\n  const {\n    elementProps,\n    isSubscribed,\n    track,\n    publication: pub\n  } = useMediaTrackBySourceOrName(trackReference, {\n    element: mediaEl,\n    props\n  });\n  React87.useEffect(() => {\n    onSubscriptionStatusChanged == null ? void 0 : onSubscriptionStatusChanged(!!isSubscribed);\n  }, [isSubscribed, onSubscriptionStatusChanged]);\n  React87.useEffect(() => {\n    if (track === void 0 || volume === void 0) {\n      return;\n    }\n    if (track instanceof RemoteAudioTrack) {\n      track.setVolume(volume);\n    } else {\n      log9.warn(\"Volume can only be set on remote audio tracks.\");\n    }\n  }, [volume, track]);\n  React87.useEffect(() => {\n    if (pub === void 0 || muted === void 0) {\n      return;\n    }\n    if (pub instanceof RemoteTrackPublication2) {\n      pub.setEnabled(!muted);\n    } else {\n      log9.warn(\"Can only call setEnabled on remote track publications.\");\n    }\n  }, [muted, pub, track]);\n  return /* @__PURE__ */React87.createElement(\"audio\", __spreadValues({\n    ref: mediaEl\n  }, elementProps));\n});\n\n// src/components/participant/ParticipantTile.tsx\nfunction ParticipantContextIfNeeded(props) {\n  const hasContext = !!useMaybeParticipantContext();\n  return props.participant && !hasContext ? /* @__PURE__ */React88.createElement(ParticipantContext.Provider, {\n    value: props.participant\n  }, props.children) : /* @__PURE__ */React88.createElement(React88.Fragment, null, props.children);\n}\nfunction TrackRefContextIfNeeded(props) {\n  const hasContext = !!useMaybeTrackRefContext();\n  return props.trackRef && !hasContext ? /* @__PURE__ */React88.createElement(TrackRefContext.Provider, {\n    value: props.trackRef\n  }, props.children) : /* @__PURE__ */React88.createElement(React88.Fragment, null, props.children);\n}\nvar ParticipantTile = /* @__PURE__ */React88.forwardRef(function ParticipantTile2(_a, ref) {\n  var _b = _a,\n    {\n      trackRef,\n      children,\n      onParticipantClick,\n      disableSpeakingIndicator\n    } = _b,\n    htmlProps = __objRest(_b, [\"trackRef\", \"children\", \"onParticipantClick\", \"disableSpeakingIndicator\"]);\n  var _a2, _b2;\n  const trackReference = useEnsureTrackRef(trackRef);\n  const {\n    elementProps\n  } = useParticipantTile({\n    htmlProps,\n    disableSpeakingIndicator,\n    onParticipantClick,\n    trackRef: trackReference\n  });\n  const isEncrypted = useIsEncrypted(trackReference.participant);\n  const layoutContext = useMaybeLayoutContext();\n  const autoManageSubscription = (_a2 = useFeatureContext()) == null ? void 0 : _a2.autoSubscription;\n  const handleSubscribe = React88.useCallback(subscribed => {\n    if (trackReference.source && !subscribed && layoutContext && layoutContext.pin.dispatch && isTrackReferencePinned2(trackReference, layoutContext.pin.state)) {\n      layoutContext.pin.dispatch({\n        msg: \"clear_pin\"\n      });\n    }\n  }, [trackReference, layoutContext]);\n  return /* @__PURE__ */React88.createElement(\"div\", __spreadValues({\n    ref,\n    style: {\n      position: \"relative\"\n    }\n  }, elementProps), /* @__PURE__ */React88.createElement(TrackRefContextIfNeeded, {\n    trackRef: trackReference\n  }, /* @__PURE__ */React88.createElement(ParticipantContextIfNeeded, {\n    participant: trackReference.participant\n  }, children != null ? children : /* @__PURE__ */React88.createElement(React88.Fragment, null, isTrackReference3(trackReference) && (((_b2 = trackReference.publication) == null ? void 0 : _b2.kind) === \"video\" || trackReference.source === Track6.Source.Camera || trackReference.source === Track6.Source.ScreenShare) ? /* @__PURE__ */React88.createElement(VideoTrack, {\n    trackRef: trackReference,\n    onSubscriptionStatusChanged: handleSubscribe,\n    manageSubscription: autoManageSubscription\n  }) : isTrackReference3(trackReference) && /* @__PURE__ */React88.createElement(AudioTrack, {\n    trackRef: trackReference,\n    onSubscriptionStatusChanged: handleSubscribe\n  }), /* @__PURE__ */React88.createElement(\"div\", {\n    className: \"lk-participant-placeholder\"\n  }, /* @__PURE__ */React88.createElement(ParticipantPlaceholder_default, null)), /* @__PURE__ */React88.createElement(\"div\", {\n    className: \"lk-participant-metadata\"\n  }, /* @__PURE__ */React88.createElement(\"div\", {\n    className: \"lk-participant-metadata-item\"\n  }, trackReference.source === Track6.Source.Camera ? /* @__PURE__ */React88.createElement(React88.Fragment, null, isEncrypted && /* @__PURE__ */React88.createElement(LockLockedIcon_default, {\n    style: {\n      marginRight: \"0.25rem\"\n    }\n  }), /* @__PURE__ */React88.createElement(TrackMutedIndicator, {\n    trackRef: {\n      participant: trackReference.participant,\n      source: Track6.Source.Microphone\n    },\n    show: \"muted\"\n  }), /* @__PURE__ */React88.createElement(ParticipantName, null)) : /* @__PURE__ */React88.createElement(React88.Fragment, null, /* @__PURE__ */React88.createElement(ScreenShareIcon_default, {\n    style: {\n      marginRight: \"0.25rem\"\n    }\n  }), /* @__PURE__ */React88.createElement(ParticipantName, null, \"'s screen\"))), /* @__PURE__ */React88.createElement(ConnectionQualityIndicator, {\n    className: \"lk-participant-metadata-item\"\n  }))), /* @__PURE__ */React88.createElement(FocusToggle, {\n    trackRef: trackReference\n  }))));\n});\n\n// src/components/layout/FocusLayout.tsx\nfunction FocusLayoutContainer(props) {\n  const elementProps = mergeProps2(props, {\n    className: \"lk-focus-layout\"\n  });\n  return /* @__PURE__ */React89.createElement(\"div\", __spreadValues({}, elementProps), props.children);\n}\nfunction FocusLayout(_a) {\n  var _b = _a,\n    {\n      trackRef\n    } = _b,\n    htmlProps = __objRest(_b, [\"trackRef\"]);\n  return /* @__PURE__ */React89.createElement(ParticipantTile, __spreadValues({\n    trackRef\n  }, htmlProps));\n}\n\n// src/components/layout/GridLayout.tsx\nimport * as React93 from \"react\";\n\n// src/components/TrackLoop.tsx\nimport * as React90 from \"react\";\nimport { getTrackReferenceId as getTrackReferenceId4 } from \"@livekit/components-core\";\nfunction TrackLoop(_a) {\n  var _b = _a,\n    {\n      tracks\n    } = _b,\n    props = __objRest(_b, [\"tracks\"]);\n  return /* @__PURE__ */React90.createElement(React90.Fragment, null, tracks.map(trackReference => {\n    return /* @__PURE__ */React90.createElement(TrackRefContext.Provider, {\n      value: trackReference,\n      key: getTrackReferenceId4(trackReference)\n    }, cloneSingleChild(props.children));\n  }));\n}\n\n// src/components/controls/PaginationControl.tsx\nimport * as React91 from \"react\";\nimport { createInteractingObservable } from \"@livekit/components-core\";\nfunction PaginationControl({\n  totalPageCount,\n  nextPage,\n  prevPage,\n  currentPage,\n  pagesContainer: connectedElement\n}) {\n  const [interactive, setInteractive] = React91.useState(false);\n  React91.useEffect(() => {\n    let subscription;\n    if (connectedElement) {\n      subscription = createInteractingObservable(connectedElement.current, 2e3).subscribe(setInteractive);\n    }\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [connectedElement]);\n  return /* @__PURE__ */React91.createElement(\"div\", {\n    className: \"lk-pagination-control\",\n    \"data-lk-user-interaction\": interactive\n  }, /* @__PURE__ */React91.createElement(\"button\", {\n    className: \"lk-button\",\n    onClick: prevPage\n  }, /* @__PURE__ */React91.createElement(Chevron_default, null)), /* @__PURE__ */React91.createElement(\"span\", {\n    className: \"lk-pagination-count\"\n  }, `${currentPage} of ${totalPageCount}`), /* @__PURE__ */React91.createElement(\"button\", {\n    className: \"lk-button\",\n    onClick: nextPage\n  }, /* @__PURE__ */React91.createElement(Chevron_default, null)));\n}\n\n// src/components/controls/PaginationIndicator.tsx\nimport * as React92 from \"react\";\nvar PaginationIndicator = /* @__PURE__ */React92.forwardRef(function PaginationIndicator2({\n  totalPageCount,\n  currentPage\n}, ref) {\n  const bubbles = new Array(totalPageCount).fill(\"\").map((_, index) => {\n    if (index + 1 === currentPage) {\n      return /* @__PURE__ */React92.createElement(\"span\", {\n        \"data-lk-active\": true,\n        key: index\n      });\n    } else {\n      return /* @__PURE__ */React92.createElement(\"span\", {\n        key: index\n      });\n    }\n  });\n  return /* @__PURE__ */React92.createElement(\"div\", {\n    ref,\n    className: \"lk-pagination-indicator\"\n  }, bubbles);\n});\n\n// src/components/layout/GridLayout.tsx\nfunction GridLayout(_a) {\n  var _b = _a,\n    {\n      tracks\n    } = _b,\n    props = __objRest(_b, [\"tracks\"]);\n  const gridEl = React93.createRef();\n  const elementProps = React93.useMemo(() => mergeProps2(props, {\n    className: \"lk-grid-layout\"\n  }), [props]);\n  const {\n    layout\n  } = useGridLayout(gridEl, tracks.length);\n  const pagination = usePagination(layout.maxTiles, tracks);\n  useSwipe(gridEl, {\n    onLeftSwipe: pagination.nextPage,\n    onRightSwipe: pagination.prevPage\n  });\n  return /* @__PURE__ */React93.createElement(\"div\", __spreadValues({\n    ref: gridEl,\n    \"data-lk-pagination\": pagination.totalPageCount > 1\n  }, elementProps), /* @__PURE__ */React93.createElement(TrackLoop, {\n    tracks: pagination.tracks\n  }, props.children), tracks.length > layout.maxTiles && /* @__PURE__ */React93.createElement(React93.Fragment, null, /* @__PURE__ */React93.createElement(PaginationIndicator, {\n    totalPageCount: pagination.totalPageCount,\n    currentPage: pagination.currentPage\n  }), /* @__PURE__ */React93.createElement(PaginationControl, __spreadValues({\n    pagesContainer: gridEl\n  }, pagination))));\n}\n\n// src/components/layout/CarouselLayout.tsx\nimport { getScrollBarWidth } from \"@livekit/components-core\";\nimport * as React94 from \"react\";\nvar MIN_HEIGHT = 130;\nvar MIN_WIDTH = 140;\nvar MIN_VISIBLE_TILES = 1;\nvar ASPECT_RATIO = 16 / 10;\nvar ASPECT_RATIO_INVERT = (1 - ASPECT_RATIO) * -1;\nfunction CarouselLayout(_a) {\n  var _b = _a,\n    {\n      tracks,\n      orientation\n    } = _b,\n    props = __objRest(_b, [\"tracks\", \"orientation\"]);\n  const asideEl = React94.useRef(null);\n  const [prevTiles, setPrevTiles] = React94.useState(0);\n  const {\n    width,\n    height\n  } = useSize(asideEl);\n  const carouselOrientation = orientation ? orientation : height >= width ? \"vertical\" : \"horizontal\";\n  const tileSpan = carouselOrientation === \"vertical\" ? Math.max(width * ASPECT_RATIO_INVERT, MIN_HEIGHT) : Math.max(height * ASPECT_RATIO, MIN_WIDTH);\n  const scrollBarWidth = getScrollBarWidth();\n  const tilesThatFit = carouselOrientation === \"vertical\" ? Math.max((height - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES) : Math.max((width - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES);\n  let maxVisibleTiles = Math.round(tilesThatFit);\n  if (Math.abs(tilesThatFit - prevTiles) < 0.5) {\n    maxVisibleTiles = Math.round(prevTiles);\n  } else if (prevTiles !== tilesThatFit) {\n    setPrevTiles(tilesThatFit);\n  }\n  const sortedTiles = useVisualStableUpdate(tracks, maxVisibleTiles);\n  React94.useLayoutEffect(() => {\n    if (asideEl.current) {\n      asideEl.current.dataset.lkOrientation = carouselOrientation;\n      asideEl.current.style.setProperty(\"--lk-max-visible-tiles\", maxVisibleTiles.toString());\n    }\n  }, [maxVisibleTiles, carouselOrientation]);\n  return /* @__PURE__ */React94.createElement(\"aside\", __spreadValues({\n    key: carouselOrientation,\n    className: \"lk-carousel\",\n    ref: asideEl\n  }, props), /* @__PURE__ */React94.createElement(TrackLoop, {\n    tracks: sortedTiles\n  }, props.children));\n}\n\n// src/components/layout/LayoutContextProvider.tsx\nimport { log as log10 } from \"@livekit/components-core\";\nimport * as React95 from \"react\";\nfunction LayoutContextProvider({\n  value,\n  onPinChange,\n  onWidgetChange,\n  children\n}) {\n  const layoutContextValue = useEnsureCreateLayoutContext(value);\n  React95.useEffect(() => {\n    log10.debug(\"PinState Updated\", {\n      state: layoutContextValue.pin.state\n    });\n    if (onPinChange && layoutContextValue.pin.state) onPinChange(layoutContextValue.pin.state);\n  }, [layoutContextValue.pin.state, onPinChange]);\n  React95.useEffect(() => {\n    log10.debug(\"Widget Updated\", {\n      widgetState: layoutContextValue.widget.state\n    });\n    if (onWidgetChange && layoutContextValue.widget.state) {\n      onWidgetChange(layoutContextValue.widget.state);\n    }\n  }, [onWidgetChange, layoutContextValue.widget.state]);\n  return /* @__PURE__ */React95.createElement(LayoutContext.Provider, {\n    value: layoutContextValue\n  }, children);\n}\n\n// src/components/LiveKitRoom.tsx\nimport * as React96 from \"react\";\nvar LiveKitRoom = /* @__PURE__ */React96.forwardRef(function LiveKitRoom2(props, ref) {\n  const {\n    room,\n    htmlProps\n  } = useLiveKitRoom(props);\n  return /* @__PURE__ */React96.createElement(\"div\", __spreadValues({\n    ref\n  }, htmlProps), room && /* @__PURE__ */React96.createElement(RoomContext.Provider, {\n    value: room\n  }, /* @__PURE__ */React96.createElement(LKFeatureContext.Provider, {\n    value: props.featureFlags\n  }, props.children)));\n});\n\n// src/components/participant/AudioVisualizer.tsx\nimport * as React97 from \"react\";\nvar AudioVisualizer = /* @__PURE__ */React97.forwardRef(function AudioVisualizer2(_a, ref) {\n  var _b = _a,\n    {\n      trackRef\n    } = _b,\n    props = __objRest(_b, [\"trackRef\"]);\n  const svgWidth = 200;\n  const svgHeight = 90;\n  const barWidth = 6;\n  const barSpacing = 4;\n  const volMultiplier = 50;\n  const barCount = 7;\n  const trackReference = useEnsureTrackRef(trackRef);\n  const volumes = useMultibandTrackVolume(trackReference, {\n    bands: 7,\n    loPass: 300\n  });\n  return /* @__PURE__ */React97.createElement(\"svg\", __spreadProps(__spreadValues({\n    ref,\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: `0 0 ${svgWidth} ${svgHeight}`\n  }, props), {\n    className: \"lk-audio-visualizer\"\n  }), /* @__PURE__ */React97.createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    width: \"100%\",\n    height: \"100%\"\n  }), /* @__PURE__ */React97.createElement(\"g\", {\n    style: {\n      transform: `translate(${(svgWidth - barCount * (barWidth + barSpacing)) / 2}px, 0)`\n    }\n  }, volumes.map((vol, idx) => /* @__PURE__ */React97.createElement(\"rect\", {\n    key: idx,\n    x: idx * (barWidth + barSpacing),\n    y: svgHeight / 2 - vol * volMultiplier / 2,\n    width: barWidth,\n    height: vol * volMultiplier\n  }))));\n});\n\n// src/components/ParticipantLoop.tsx\nimport * as React98 from \"react\";\nfunction ParticipantLoop(_a) {\n  var _b = _a,\n    {\n      participants\n    } = _b,\n    props = __objRest(_b, [\"participants\"]);\n  return /* @__PURE__ */React98.createElement(React98.Fragment, null, participants.map(participant => /* @__PURE__ */React98.createElement(ParticipantContext.Provider, {\n    value: participant,\n    key: participant.identity\n  }, cloneSingleChild(props.children))));\n}\n\n// src/components/RoomAudioRenderer.tsx\nimport { getTrackReferenceId as getTrackReferenceId5, isLocal as isLocal2 } from \"@livekit/components-core\";\nimport { Track as Track7 } from \"livekit-client\";\nimport * as React99 from \"react\";\nfunction RoomAudioRenderer({\n  volume,\n  muted\n}) {\n  const tracks = useTracks([Track7.Source.Microphone, Track7.Source.ScreenShareAudio, Track7.Source.Unknown], {\n    updateOnlyOn: [],\n    onlySubscribed: true\n  }).filter(ref => !isLocal2(ref.participant) && ref.publication.kind === Track7.Kind.Audio);\n  return /* @__PURE__ */React99.createElement(\"div\", {\n    style: {\n      display: \"none\"\n    }\n  }, tracks.map(trackRef => /* @__PURE__ */React99.createElement(AudioTrack, {\n    key: getTrackReferenceId5(trackRef),\n    trackRef,\n    volume,\n    muted\n  })));\n}\n\n// src/components/RoomName.tsx\nimport * as React100 from \"react\";\nvar RoomName = /* @__PURE__ */React100.forwardRef(function RoomName2(_a, ref) {\n  var _b = _a,\n    {\n      childrenPosition = \"before\",\n      children\n    } = _b,\n    htmlAttributes = __objRest(_b, [\"childrenPosition\", \"children\"]);\n  const {\n    name\n  } = useRoomInfo();\n  return /* @__PURE__ */React100.createElement(\"span\", __spreadValues({\n    ref\n  }, htmlAttributes), childrenPosition === \"before\" && children, name, childrenPosition === \"after\" && children);\n});\n\n// src/components/Toast.tsx\nimport * as React101 from \"react\";\nfunction Toast(props) {\n  const htmlProps = React101.useMemo(() => mergeProps2(props, {\n    className: \"lk-toast\"\n  }), [props]);\n  return /* @__PURE__ */React101.createElement(\"div\", __spreadValues({}, htmlProps), props.children);\n}\n\n// src/components/participant/ParticipantAudioTile.tsx\nimport * as React102 from \"react\";\nimport { isTrackReference as isTrackReference4 } from \"@livekit/components-core\";\nvar ParticipantAudioTile = /* @__PURE__ */React102.forwardRef(function ParticipantAudioTile2(_a, ref) {\n  var _b = _a,\n    {\n      children,\n      disableSpeakingIndicator,\n      onParticipantClick,\n      trackRef\n    } = _b,\n    htmlProps = __objRest(_b, [\"children\", \"disableSpeakingIndicator\", \"onParticipantClick\", \"trackRef\"]);\n  const trackReference = useEnsureTrackRef(trackRef);\n  const {\n    elementProps\n  } = useParticipantTile({\n    trackRef: trackReference,\n    htmlProps,\n    disableSpeakingIndicator,\n    onParticipantClick\n  });\n  return /* @__PURE__ */React102.createElement(\"div\", __spreadValues({\n    ref,\n    style: {\n      position: \"relative\"\n    }\n  }, elementProps), /* @__PURE__ */React102.createElement(TrackRefContext.Provider, {\n    value: trackReference\n  }, children != null ? children : /* @__PURE__ */React102.createElement(React102.Fragment, null, isTrackReference4(trackReference) && /* @__PURE__ */React102.createElement(AudioTrack, {\n    trackRef: trackReference\n  }), /* @__PURE__ */React102.createElement(AudioVisualizer, null), /* @__PURE__ */React102.createElement(\"div\", {\n    className: \"lk-participant-metadata\"\n  }, /* @__PURE__ */React102.createElement(\"div\", {\n    className: \"lk-participant-metadata-item\"\n  }, /* @__PURE__ */React102.createElement(TrackMutedIndicator, {\n    trackRef: trackReference\n  }), /* @__PURE__ */React102.createElement(ParticipantName, null)), /* @__PURE__ */React102.createElement(ConnectionQualityIndicator, {\n    className: \"lk-participant-metadata-item\"\n  })))));\n});\n\n// src/components/ConnectionStateToast.tsx\nimport { ConnectionState as ConnectionState6 } from \"livekit-client\";\nimport * as React103 from \"react\";\nfunction ConnectionStateToast(props) {\n  const [notification, setNotification] = React103.useState(void 0);\n  const state = useConnectionState(props.room);\n  React103.useEffect(() => {\n    switch (state) {\n      case ConnectionState6.Reconnecting:\n        setNotification( /* @__PURE__ */React103.createElement(React103.Fragment, null, /* @__PURE__ */React103.createElement(SpinnerIcon_default, {\n          className: \"lk-spinner\"\n        }), \" Reconnecting\"));\n        break;\n      case ConnectionState6.Connecting:\n        setNotification( /* @__PURE__ */React103.createElement(React103.Fragment, null, /* @__PURE__ */React103.createElement(SpinnerIcon_default, {\n          className: \"lk-spinner\"\n        }), \" Connecting\"));\n        break;\n      case ConnectionState6.Disconnected:\n        setNotification( /* @__PURE__ */React103.createElement(React103.Fragment, null, \"Disconnected\"));\n        break;\n      default:\n        setNotification(void 0);\n        break;\n    }\n  }, [state]);\n  return notification ? /* @__PURE__ */React103.createElement(Toast, {\n    className: \"lk-toast-connection-state\"\n  }, notification) : /* @__PURE__ */React103.createElement(React103.Fragment, null);\n}\n\n// src/components/ChatEntry.tsx\nimport { tokenize, createDefaultGrammar } from \"@livekit/components-core\";\nimport * as React104 from \"react\";\nvar ChatEntry = /* @__PURE__ */React104.forwardRef(function ChatEntry2(_a, ref) {\n  var _b = _a,\n    {\n      entry,\n      hideName = false,\n      hideTimestamp = false,\n      messageFormatter\n    } = _b,\n    props = __objRest(_b, [\"entry\", \"hideName\", \"hideTimestamp\", \"messageFormatter\"]);\n  var _a2, _b2, _c, _d;\n  const formattedMessage = React104.useMemo(() => {\n    return messageFormatter ? messageFormatter(entry.message) : entry.message;\n  }, [entry.message, messageFormatter]);\n  const hasBeenEdited = !!entry.editTimestamp;\n  const time = new Date(entry.timestamp);\n  const locale = navigator ? navigator.language : \"en-US\";\n  return /* @__PURE__ */React104.createElement(\"li\", __spreadValues({\n    ref,\n    className: \"lk-chat-entry\",\n    title: time.toLocaleTimeString(locale, {\n      timeStyle: \"full\"\n    }),\n    \"data-lk-message-origin\": ((_a2 = entry.from) == null ? void 0 : _a2.isLocal) ? \"local\" : \"remote\"\n  }, props), (!hideTimestamp || !hideName || hasBeenEdited) && /* @__PURE__ */React104.createElement(\"span\", {\n    className: \"lk-meta-data\"\n  }, !hideName && /* @__PURE__ */React104.createElement(\"strong\", {\n    className: \"lk-participant-name\"\n  }, (_d = (_b2 = entry.from) == null ? void 0 : _b2.name) != null ? _d : (_c = entry.from) == null ? void 0 : _c.identity), (!hideTimestamp || hasBeenEdited) && /* @__PURE__ */React104.createElement(\"span\", {\n    className: \"lk-timestamp\"\n  }, hasBeenEdited && \"edited \", time.toLocaleTimeString(locale, {\n    timeStyle: \"short\"\n  }))), /* @__PURE__ */React104.createElement(\"span\", {\n    className: \"lk-message-body\"\n  }, formattedMessage));\n});\nfunction formatChatMessageLinks(message) {\n  return tokenize(message, createDefaultGrammar()).map((tok, i) => {\n    if (typeof tok === `string`) {\n      return tok;\n    } else {\n      const content = tok.content.toString();\n      const href = tok.type === `url` ? /^http(s?):\\/\\//.test(content) ? content : `https://${content}` : `mailto:${content}`;\n      return /* @__PURE__ */React104.createElement(\"a\", {\n        className: \"lk-chat-link\",\n        key: i,\n        href,\n        target: \"_blank\",\n        rel: \"noreferrer\"\n      }, content);\n    }\n  });\n}\n\n// src/prefabs/Chat.tsx\nimport * as React105 from \"react\";\nfunction Chat(_a) {\n  var _b = _a,\n    {\n      messageFormatter,\n      messageDecoder,\n      messageEncoder,\n      channelTopic\n    } = _b,\n    props = __objRest(_b, [\"messageFormatter\", \"messageDecoder\", \"messageEncoder\", \"channelTopic\"]);\n  const inputRef = React105.useRef(null);\n  const ulRef = React105.useRef(null);\n  const chatOptions = React105.useMemo(() => {\n    return {\n      messageDecoder,\n      messageEncoder,\n      channelTopic\n    };\n  }, [messageDecoder, messageEncoder, channelTopic]);\n  const {\n    send,\n    chatMessages,\n    isSending\n  } = useChat(chatOptions);\n  const layoutContext = useMaybeLayoutContext();\n  const lastReadMsgAt = React105.useRef(0);\n  function handleSubmit(event) {\n    return __async(this, null, function* () {\n      event.preventDefault();\n      if (inputRef.current && inputRef.current.value.trim() !== \"\") {\n        if (send) {\n          yield send(inputRef.current.value);\n          inputRef.current.value = \"\";\n          inputRef.current.focus();\n        }\n      }\n    });\n  }\n  React105.useEffect(() => {\n    var _a2;\n    if (ulRef) {\n      (_a2 = ulRef.current) == null ? void 0 : _a2.scrollTo({\n        top: ulRef.current.scrollHeight\n      });\n    }\n  }, [ulRef, chatMessages]);\n  React105.useEffect(() => {\n    var _a2, _b2, _c, _d, _e;\n    if (!layoutContext || chatMessages.length === 0) {\n      return;\n    }\n    if (((_a2 = layoutContext.widget.state) == null ? void 0 : _a2.showChat) && chatMessages.length > 0 && lastReadMsgAt.current !== ((_b2 = chatMessages[chatMessages.length - 1]) == null ? void 0 : _b2.timestamp)) {\n      lastReadMsgAt.current = (_c = chatMessages[chatMessages.length - 1]) == null ? void 0 : _c.timestamp;\n      return;\n    }\n    const unreadMessageCount = chatMessages.filter(msg => !lastReadMsgAt.current || msg.timestamp > lastReadMsgAt.current).length;\n    const {\n      widget\n    } = layoutContext;\n    if (unreadMessageCount > 0 && ((_d = widget.state) == null ? void 0 : _d.unreadMessages) !== unreadMessageCount) {\n      (_e = widget.dispatch) == null ? void 0 : _e.call(widget, {\n        msg: \"unread_msg\",\n        count: unreadMessageCount\n      });\n    }\n  }, [chatMessages, layoutContext == null ? void 0 : layoutContext.widget]);\n  return /* @__PURE__ */React105.createElement(\"div\", __spreadProps(__spreadValues({}, props), {\n    className: \"lk-chat\"\n  }), /* @__PURE__ */React105.createElement(\"div\", {\n    className: \"lk-chat-header\"\n  }, \"Messages\", /* @__PURE__ */React105.createElement(ChatToggle, {\n    className: \"lk-close-button\"\n  }, /* @__PURE__ */React105.createElement(ChatCloseIcon_default, null))), /* @__PURE__ */React105.createElement(\"ul\", {\n    className: \"lk-list lk-chat-messages\",\n    ref: ulRef\n  }, props.children ? chatMessages.map((msg, idx) => {\n    var _a2;\n    return cloneSingleChild(props.children, {\n      entry: msg,\n      key: (_a2 = msg.id) != null ? _a2 : idx,\n      messageFormatter\n    });\n  }) : chatMessages.map((msg, idx, allMsg) => {\n    var _a2;\n    const hideName = idx >= 1 && allMsg[idx - 1].from === msg.from;\n    const hideTimestamp = idx >= 1 && msg.timestamp - allMsg[idx - 1].timestamp < 6e4;\n    return /* @__PURE__ */React105.createElement(ChatEntry, {\n      key: (_a2 = msg.id) != null ? _a2 : idx,\n      hideName,\n      hideTimestamp: hideName === false ? false : hideTimestamp,\n      entry: msg,\n      messageFormatter\n    });\n  })), /* @__PURE__ */React105.createElement(\"form\", {\n    className: \"lk-chat-form\",\n    onSubmit: handleSubmit\n  }, /* @__PURE__ */React105.createElement(\"input\", {\n    className: \"lk-form-control lk-chat-form-input\",\n    disabled: isSending,\n    ref: inputRef,\n    type: \"text\",\n    placeholder: \"Enter a message...\",\n    onInput: ev => ev.stopPropagation(),\n    onKeyDown: ev => ev.stopPropagation(),\n    onKeyUp: ev => ev.stopPropagation()\n  }), /* @__PURE__ */React105.createElement(\"button\", {\n    type: \"submit\",\n    className: \"lk-button lk-chat-form-button\",\n    disabled: isSending\n  }, \"Send\")));\n}\n\n// src/prefabs/PreJoin.tsx\nimport { createLocalAudioTrack, createLocalTracks, createLocalVideoTrack, facingModeFromLocalTrack as facingModeFromLocalTrack2, Track as Track8, VideoPresets, Mutex } from \"livekit-client\";\nimport * as React108 from \"react\";\n\n// src/prefabs/MediaDeviceMenu.tsx\nimport { computeMenuPosition, wasClickOutside } from \"@livekit/components-core\";\nimport * as React106 from \"react\";\nimport { log as log11 } from \"@livekit/components-core\";\nfunction MediaDeviceMenu(_a) {\n  var _b = _a,\n    {\n      kind,\n      initialSelection,\n      onActiveDeviceChange,\n      tracks,\n      requestPermissions = false\n    } = _b,\n    props = __objRest(_b, [\"kind\", \"initialSelection\", \"onActiveDeviceChange\", \"tracks\", \"requestPermissions\"]);\n  const [isOpen, setIsOpen] = React106.useState(false);\n  const [devices, setDevices] = React106.useState([]);\n  const [updateRequired, setUpdateRequired] = React106.useState(true);\n  const [needPermissions, setNeedPermissions] = React106.useState(requestPermissions);\n  const handleActiveDeviceChange = (kind2, deviceId) => {\n    log11.debug(\"handle device change\");\n    setIsOpen(false);\n    onActiveDeviceChange == null ? void 0 : onActiveDeviceChange(kind2, deviceId);\n  };\n  const button = React106.useRef(null);\n  const tooltip = React106.useRef(null);\n  React106.useLayoutEffect(() => {\n    if (isOpen) {\n      setNeedPermissions(true);\n    }\n  }, [isOpen]);\n  React106.useLayoutEffect(() => {\n    if (button.current && tooltip.current && (devices || updateRequired)) {\n      computeMenuPosition(button.current, tooltip.current).then(({\n        x,\n        y\n      }) => {\n        if (tooltip.current) {\n          Object.assign(tooltip.current.style, {\n            left: `${x}px`,\n            top: `${y}px`\n          });\n        }\n      });\n    }\n    setUpdateRequired(false);\n  }, [button, tooltip, devices, updateRequired]);\n  const handleClickOutside = React106.useCallback(event => {\n    if (!tooltip.current) {\n      return;\n    }\n    if (event.target === button.current) {\n      return;\n    }\n    if (isOpen && wasClickOutside(tooltip.current, event)) {\n      setIsOpen(false);\n    }\n  }, [isOpen, tooltip, button]);\n  React106.useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    window.addEventListener(\"resize\", () => setUpdateRequired(true));\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n      window.removeEventListener(\"resize\", () => setUpdateRequired(true));\n    };\n  }, [handleClickOutside, setUpdateRequired]);\n  return /* @__PURE__ */React106.createElement(React106.Fragment, null, /* @__PURE__ */React106.createElement(\"button\", __spreadProps(__spreadValues({\n    className: \"lk-button lk-button-menu\",\n    \"aria-pressed\": isOpen\n  }, props), {\n    onClick: () => setIsOpen(!isOpen),\n    ref: button\n  }), props.children), !props.disabled && /* @__PURE__ */React106.createElement(\"div\", {\n    className: \"lk-device-menu\",\n    ref: tooltip,\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\"\n    }\n  }, kind ? /* @__PURE__ */React106.createElement(MediaDeviceSelect, {\n    initialSelection,\n    onActiveDeviceChange: deviceId => handleActiveDeviceChange(kind, deviceId),\n    onDeviceListChange: setDevices,\n    kind,\n    track: tracks == null ? void 0 : tracks[kind],\n    requestPermissions: needPermissions\n  }) : /* @__PURE__ */React106.createElement(React106.Fragment, null, /* @__PURE__ */React106.createElement(\"div\", {\n    className: \"lk-device-menu-heading\"\n  }, \"Audio inputs\"), /* @__PURE__ */React106.createElement(MediaDeviceSelect, {\n    kind: \"audioinput\",\n    onActiveDeviceChange: deviceId => handleActiveDeviceChange(\"audioinput\", deviceId),\n    onDeviceListChange: setDevices,\n    track: tracks == null ? void 0 : tracks.audioinput,\n    requestPermissions: needPermissions\n  }), /* @__PURE__ */React106.createElement(\"div\", {\n    className: \"lk-device-menu-heading\"\n  }, \"Video inputs\"), /* @__PURE__ */React106.createElement(MediaDeviceSelect, {\n    kind: \"videoinput\",\n    onActiveDeviceChange: deviceId => handleActiveDeviceChange(\"videoinput\", deviceId),\n    onDeviceListChange: setDevices,\n    track: tracks == null ? void 0 : tracks.videoinput,\n    requestPermissions: needPermissions\n  }))));\n}\n\n// src/prefabs/PreJoin.tsx\nimport { log as log12 } from \"@livekit/components-core\";\n\n// src/hooks/useWarnAboutMissingStyles.ts\nimport * as React107 from \"react\";\nfunction useWarnAboutMissingStyles() {\n  React107.useEffect(() => {\n    warnAboutMissingStyles();\n  }, []);\n}\n\n// src/prefabs/PreJoin.tsx\nimport { defaultUserChoices } from \"@livekit/components-core\";\nfunction usePreviewTracks(options, onError) {\n  const [tracks, setTracks] = React108.useState();\n  const trackLock = React108.useMemo(() => new Mutex(), []);\n  React108.useEffect(() => {\n    let needsCleanup = false;\n    let localTracks = [];\n    trackLock.lock().then(unlock => __async(this, null, function* () {\n      try {\n        if (options.audio || options.video) {\n          localTracks = yield createLocalTracks(options);\n          if (needsCleanup) {\n            localTracks.forEach(tr => tr.stop());\n          } else {\n            setTracks(localTracks);\n          }\n        }\n      } catch (e) {\n        if (onError && e instanceof Error) {\n          onError(e);\n        } else {\n          log12.error(e);\n        }\n      } finally {\n        unlock();\n      }\n    }));\n    return () => {\n      needsCleanup = true;\n      localTracks.forEach(track => {\n        track.stop();\n      });\n    };\n  }, [JSON.stringify(options), onError, trackLock]);\n  return tracks;\n}\nfunction usePreviewDevice(enabled, deviceId, kind) {\n  const [deviceError, setDeviceError] = React108.useState(null);\n  const [isCreatingTrack, setIsCreatingTrack] = React108.useState(false);\n  const devices = useMediaDevices({\n    kind\n  });\n  const [selectedDevice, setSelectedDevice] = React108.useState(void 0);\n  const [localTrack, setLocalTrack] = React108.useState();\n  const [localDeviceId, setLocalDeviceId] = React108.useState(deviceId);\n  React108.useEffect(() => {\n    setLocalDeviceId(deviceId);\n  }, [deviceId]);\n  const createTrack = (deviceId2, kind2) => __async(this, null, function* () {\n    try {\n      const track = kind2 === \"videoinput\" ? yield createLocalVideoTrack({\n        deviceId: deviceId2,\n        resolution: VideoPresets.h720.resolution\n      }) : yield createLocalAudioTrack({\n        deviceId: deviceId2\n      });\n      const newDeviceId = yield track.getDeviceId();\n      if (newDeviceId && deviceId2 !== newDeviceId) {\n        prevDeviceId.current = newDeviceId;\n        setLocalDeviceId(newDeviceId);\n      }\n      setLocalTrack(track);\n    } catch (e) {\n      if (e instanceof Error) {\n        setDeviceError(e);\n      }\n    }\n  });\n  const switchDevice = (track, id) => __async(this, null, function* () {\n    yield track.setDeviceId(id);\n    prevDeviceId.current = id;\n  });\n  const prevDeviceId = React108.useRef(localDeviceId);\n  React108.useEffect(() => {\n    if (enabled && !localTrack && !deviceError && !isCreatingTrack) {\n      log12.debug(\"creating track\", kind);\n      setIsCreatingTrack(true);\n      createTrack(localDeviceId, kind).finally(() => {\n        setIsCreatingTrack(false);\n      });\n    }\n  }, [enabled, localTrack, deviceError, isCreatingTrack]);\n  React108.useEffect(() => {\n    if (!localTrack) {\n      return;\n    }\n    if (!enabled) {\n      log12.debug(`muting ${kind} track`);\n      localTrack.mute().then(() => log12.debug(localTrack.mediaStreamTrack));\n    } else if ((selectedDevice == null ? void 0 : selectedDevice.deviceId) && prevDeviceId.current !== (selectedDevice == null ? void 0 : selectedDevice.deviceId)) {\n      log12.debug(`switching ${kind} device from`, prevDeviceId.current, selectedDevice.deviceId);\n      switchDevice(localTrack, selectedDevice.deviceId);\n    } else {\n      log12.debug(`unmuting local ${kind} track`);\n      localTrack.unmute();\n    }\n  }, [localTrack, selectedDevice, enabled, kind]);\n  React108.useEffect(() => {\n    return () => {\n      if (localTrack) {\n        log12.debug(`stopping local ${kind} track`);\n        localTrack.stop();\n        localTrack.mute();\n      }\n    };\n  }, []);\n  React108.useEffect(() => {\n    setSelectedDevice(devices == null ? void 0 : devices.find(dev => dev.deviceId === localDeviceId));\n  }, [localDeviceId, devices]);\n  return {\n    selectedDevice,\n    localTrack,\n    deviceError\n  };\n}\nfunction PreJoin(_a) {\n  var _b = _a,\n    {\n      defaults = {},\n      onValidate,\n      onSubmit,\n      onError,\n      debug,\n      joinLabel = \"Join Room\",\n      micLabel = \"Microphone\",\n      camLabel = \"Camera\",\n      userLabel = \"Username\",\n      persistUserChoices = true\n    } = _b,\n    htmlProps = __objRest(_b, [\"defaults\", \"onValidate\", \"onSubmit\", \"onError\", \"debug\", \"joinLabel\", \"micLabel\", \"camLabel\", \"userLabel\", \"persistUserChoices\"]);\n  const [userChoices, setUserChoices] = React108.useState(defaultUserChoices);\n  const partialDefaults = __spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues({}, defaults.audioDeviceId !== void 0 && {\n    audioDeviceId: defaults.audioDeviceId\n  }), defaults.videoDeviceId !== void 0 && {\n    videoDeviceId: defaults.videoDeviceId\n  }), defaults.audioEnabled !== void 0 && {\n    audioEnabled: defaults.audioEnabled\n  }), defaults.videoEnabled !== void 0 && {\n    videoEnabled: defaults.videoEnabled\n  }), defaults.username !== void 0 && {\n    username: defaults.username\n  });\n  const {\n    userChoices: initialUserChoices,\n    saveAudioInputDeviceId,\n    saveAudioInputEnabled,\n    saveVideoInputDeviceId,\n    saveVideoInputEnabled,\n    saveUsername\n  } = usePersistentUserChoices({\n    defaults: partialDefaults,\n    preventSave: !persistUserChoices,\n    preventLoad: !persistUserChoices\n  });\n  const [audioEnabled, setAudioEnabled] = React108.useState(initialUserChoices.audioEnabled);\n  const [videoEnabled, setVideoEnabled] = React108.useState(initialUserChoices.videoEnabled);\n  const [audioDeviceId, setAudioDeviceId] = React108.useState(initialUserChoices.audioDeviceId);\n  const [videoDeviceId, setVideoDeviceId] = React108.useState(initialUserChoices.videoDeviceId);\n  const [username, setUsername] = React108.useState(initialUserChoices.username);\n  React108.useEffect(() => {\n    saveAudioInputEnabled(audioEnabled);\n  }, [audioEnabled, saveAudioInputEnabled]);\n  React108.useEffect(() => {\n    saveVideoInputEnabled(videoEnabled);\n  }, [videoEnabled, saveVideoInputEnabled]);\n  React108.useEffect(() => {\n    saveAudioInputDeviceId(audioDeviceId);\n  }, [audioDeviceId, saveAudioInputDeviceId]);\n  React108.useEffect(() => {\n    saveVideoInputDeviceId(videoDeviceId);\n  }, [videoDeviceId, saveVideoInputDeviceId]);\n  React108.useEffect(() => {\n    saveUsername(username);\n  }, [username, saveUsername]);\n  const tracks = usePreviewTracks({\n    audio: audioEnabled ? {\n      deviceId: initialUserChoices.audioDeviceId\n    } : false,\n    video: videoEnabled ? {\n      deviceId: initialUserChoices.videoDeviceId\n    } : false\n  }, onError);\n  const videoEl = React108.useRef(null);\n  const videoTrack = React108.useMemo(() => tracks == null ? void 0 : tracks.filter(track => track.kind === Track8.Kind.Video)[0], [tracks]);\n  const facingMode = React108.useMemo(() => {\n    if (videoTrack) {\n      const {\n        facingMode: facingMode2\n      } = facingModeFromLocalTrack2(videoTrack);\n      return facingMode2;\n    } else {\n      return \"undefined\";\n    }\n  }, [videoTrack]);\n  const audioTrack = React108.useMemo(() => tracks == null ? void 0 : tracks.filter(track => track.kind === Track8.Kind.Audio)[0], [tracks]);\n  React108.useEffect(() => {\n    if (videoEl.current && videoTrack) {\n      videoTrack.unmute();\n      videoTrack.attach(videoEl.current);\n    }\n    return () => {\n      videoTrack == null ? void 0 : videoTrack.detach();\n    };\n  }, [videoTrack]);\n  const [isValid, setIsValid] = React108.useState();\n  const handleValidation = React108.useCallback(values => {\n    if (typeof onValidate === \"function\") {\n      return onValidate(values);\n    } else {\n      return values.username !== \"\";\n    }\n  }, [onValidate]);\n  React108.useEffect(() => {\n    const newUserChoices = {\n      username,\n      videoEnabled,\n      videoDeviceId,\n      audioEnabled,\n      audioDeviceId\n    };\n    setUserChoices(newUserChoices);\n    setIsValid(handleValidation(newUserChoices));\n  }, [username, videoEnabled, handleValidation, audioEnabled, audioDeviceId, videoDeviceId]);\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (handleValidation(userChoices)) {\n      if (typeof onSubmit === \"function\") {\n        onSubmit(userChoices);\n      }\n    } else {\n      log12.warn(\"Validation failed with: \", userChoices);\n    }\n  }\n  useWarnAboutMissingStyles();\n  return /* @__PURE__ */React108.createElement(\"div\", __spreadValues({\n    className: \"lk-prejoin\"\n  }, htmlProps), /* @__PURE__ */React108.createElement(\"div\", {\n    className: \"lk-video-container\"\n  }, videoTrack && /* @__PURE__ */React108.createElement(\"video\", {\n    ref: videoEl,\n    width: \"1280\",\n    height: \"720\",\n    \"data-lk-facing-mode\": facingMode\n  }), (!videoTrack || !videoEnabled) && /* @__PURE__ */React108.createElement(\"div\", {\n    className: \"lk-camera-off-note\"\n  }, /* @__PURE__ */React108.createElement(ParticipantPlaceholder_default, null))), /* @__PURE__ */React108.createElement(\"div\", {\n    className: \"lk-button-group-container\"\n  }, /* @__PURE__ */React108.createElement(\"div\", {\n    className: \"lk-button-group audio\"\n  }, /* @__PURE__ */React108.createElement(TrackToggle, {\n    initialState: audioEnabled,\n    source: Track8.Source.Microphone,\n    onChange: enabled => setAudioEnabled(enabled)\n  }, micLabel), /* @__PURE__ */React108.createElement(\"div\", {\n    className: \"lk-button-group-menu\"\n  }, /* @__PURE__ */React108.createElement(MediaDeviceMenu, {\n    initialSelection: audioDeviceId,\n    kind: \"audioinput\",\n    disabled: !audioTrack,\n    tracks: {\n      audioinput: audioTrack\n    },\n    onActiveDeviceChange: (_, id) => setAudioDeviceId(id)\n  }))), /* @__PURE__ */React108.createElement(\"div\", {\n    className: \"lk-button-group video\"\n  }, /* @__PURE__ */React108.createElement(TrackToggle, {\n    initialState: videoEnabled,\n    source: Track8.Source.Camera,\n    onChange: enabled => setVideoEnabled(enabled)\n  }, camLabel), /* @__PURE__ */React108.createElement(\"div\", {\n    className: \"lk-button-group-menu\"\n  }, /* @__PURE__ */React108.createElement(MediaDeviceMenu, {\n    initialSelection: videoDeviceId,\n    kind: \"videoinput\",\n    disabled: !videoTrack,\n    tracks: {\n      videoinput: videoTrack\n    },\n    onActiveDeviceChange: (_, id) => setVideoDeviceId(id)\n  })))), /* @__PURE__ */React108.createElement(\"form\", {\n    className: \"lk-username-container\"\n  }, /* @__PURE__ */React108.createElement(\"input\", {\n    className: \"lk-form-control\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    defaultValue: username,\n    placeholder: userLabel,\n    onChange: inputEl => setUsername(inputEl.target.value),\n    autoComplete: \"off\"\n  }), /* @__PURE__ */React108.createElement(\"button\", {\n    className: \"lk-button lk-join-button\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    disabled: !isValid\n  }, joinLabel)), debug && /* @__PURE__ */React108.createElement(React108.Fragment, null, /* @__PURE__ */React108.createElement(\"strong\", null, \"User Choices:\"), /* @__PURE__ */React108.createElement(\"ul\", {\n    className: \"lk-list\",\n    style: {\n      overflow: \"hidden\",\n      maxWidth: \"15rem\"\n    }\n  }, /* @__PURE__ */React108.createElement(\"li\", null, \"Username: \", `${userChoices.username}`), /* @__PURE__ */React108.createElement(\"li\", null, \"Video Enabled: \", `${userChoices.videoEnabled}`), /* @__PURE__ */React108.createElement(\"li\", null, \"Audio Enabled: \", `${userChoices.audioEnabled}`), /* @__PURE__ */React108.createElement(\"li\", null, \"Video Device: \", `${userChoices.videoDeviceId}`), /* @__PURE__ */React108.createElement(\"li\", null, \"Audio Device: \", `${userChoices.audioDeviceId}`))));\n}\n\n// src/prefabs/VideoConference.tsx\nimport { isEqualTrackRef, isTrackReference as isTrackReference5, isWeb, log as log13 } from \"@livekit/components-core\";\nimport { RoomEvent as RoomEvent3, Track as Track10 } from \"livekit-client\";\nimport * as React113 from \"react\";\n\n// src/prefabs/ControlBar.tsx\nimport { Track as Track9 } from \"livekit-client\";\nimport * as React112 from \"react\";\nimport { supportsScreenSharing } from \"@livekit/components-core\";\n\n// src/components/controls/StartMediaButton.tsx\nimport * as React109 from \"react\";\nvar StartMediaButton = /* @__PURE__ */React109.forwardRef(function StartMediaButton2(_a, ref) {\n  var _b = _a,\n    {\n      label\n    } = _b,\n    props = __objRest(_b, [\"label\"]);\n  const room = useRoomContext();\n  const {\n    mergedProps: audioProps,\n    canPlayAudio\n  } = useStartAudio({\n    room,\n    props\n  });\n  const {\n    mergedProps,\n    canPlayVideo\n  } = useStartVideo({\n    room,\n    props: audioProps\n  });\n  const _a2 = mergedProps,\n    {\n      style\n    } = _a2,\n    restProps = __objRest(_a2, [\"style\"]);\n  style.display = canPlayAudio && canPlayVideo ? \"none\" : \"block\";\n  return /* @__PURE__ */React109.createElement(\"button\", __spreadValues({\n    ref,\n    style\n  }, restProps), label != null ? label : `Start ${!canPlayAudio ? \"Audio\" : \"Video\"}`);\n});\n\n// src/components/controls/SettingsMenuToggle.tsx\nimport * as React111 from \"react\";\n\n// src/hooks/useSettingsToggle.ts\nimport * as React110 from \"react\";\nfunction useSettingsToggle({\n  props\n}) {\n  const {\n    dispatch,\n    state\n  } = useLayoutContext().widget;\n  const className = \"lk-button lk-settings-toggle\";\n  const mergedProps = React110.useMemo(() => {\n    return mergeProps(props, {\n      className,\n      onClick: () => {\n        if (dispatch) dispatch({\n          msg: \"toggle_settings\"\n        });\n      },\n      \"aria-pressed\": (state == null ? void 0 : state.showSettings) ? \"true\" : \"false\"\n    });\n  }, [props, className, dispatch, state]);\n  return {\n    mergedProps\n  };\n}\n\n// src/components/controls/SettingsMenuToggle.tsx\nvar SettingsMenuToggle = /* @__PURE__ */React111.forwardRef(function SettingsMenuToggle2(props, ref) {\n  const {\n    mergedProps\n  } = useSettingsToggle({\n    props\n  });\n  return /* @__PURE__ */React111.createElement(\"button\", __spreadValues({\n    ref\n  }, mergedProps), props.children);\n});\n\n// src/prefabs/ControlBar.tsx\nfunction ControlBar(_a) {\n  var _b = _a,\n    {\n      variation,\n      controls,\n      saveUserChoices: saveUserChoices2 = true\n    } = _b,\n    props = __objRest(_b, [\"variation\", \"controls\", \"saveUserChoices\"]);\n  var _a2, _b2, _c, _d, _e;\n  const [isChatOpen, setIsChatOpen] = React112.useState(false);\n  const layoutContext = useMaybeLayoutContext();\n  React112.useEffect(() => {\n    var _a3, _b3;\n    if (((_a3 = layoutContext == null ? void 0 : layoutContext.widget.state) == null ? void 0 : _a3.showChat) !== void 0) {\n      setIsChatOpen((_b3 = layoutContext == null ? void 0 : layoutContext.widget.state) == null ? void 0 : _b3.showChat);\n    }\n  }, [(_a2 = layoutContext == null ? void 0 : layoutContext.widget.state) == null ? void 0 : _a2.showChat]);\n  const isTooLittleSpace = useMediaQuery(`(max-width: ${isChatOpen ? 1e3 : 760}px)`);\n  const defaultVariation = isTooLittleSpace ? \"minimal\" : \"verbose\";\n  variation != null ? variation : variation = defaultVariation;\n  const visibleControls = __spreadValues({\n    leave: true\n  }, controls);\n  const localPermissions = useLocalParticipantPermissions();\n  if (!localPermissions) {\n    visibleControls.camera = false;\n    visibleControls.chat = false;\n    visibleControls.microphone = false;\n    visibleControls.screenShare = false;\n  } else {\n    (_b2 = visibleControls.camera) != null ? _b2 : visibleControls.camera = localPermissions.canPublish;\n    (_c = visibleControls.microphone) != null ? _c : visibleControls.microphone = localPermissions.canPublish;\n    (_d = visibleControls.screenShare) != null ? _d : visibleControls.screenShare = localPermissions.canPublish;\n    (_e = visibleControls.chat) != null ? _e : visibleControls.chat = localPermissions.canPublishData && (controls == null ? void 0 : controls.chat);\n  }\n  const showIcon = React112.useMemo(() => variation === \"minimal\" || variation === \"verbose\", [variation]);\n  const showText = React112.useMemo(() => variation === \"textOnly\" || variation === \"verbose\", [variation]);\n  const browserSupportsScreenSharing = supportsScreenSharing();\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = React112.useState(false);\n  const onScreenShareChange = React112.useCallback(enabled => {\n    setIsScreenShareEnabled(enabled);\n  }, [setIsScreenShareEnabled]);\n  const htmlProps = mergeProps2({\n    className: \"lk-control-bar\"\n  }, props);\n  const {\n    saveAudioInputEnabled,\n    saveVideoInputEnabled,\n    saveAudioInputDeviceId,\n    saveVideoInputDeviceId\n  } = usePersistentUserChoices({\n    preventSave: !saveUserChoices2\n  });\n  const microphoneOnChange = React112.useCallback((enabled, isUserInitiated) => isUserInitiated ? saveAudioInputEnabled(enabled) : null, [saveAudioInputEnabled]);\n  const cameraOnChange = React112.useCallback((enabled, isUserInitiated) => isUserInitiated ? saveVideoInputEnabled(enabled) : null, [saveVideoInputEnabled]);\n  return /* @__PURE__ */React112.createElement(\"div\", __spreadValues({}, htmlProps), visibleControls.microphone && /* @__PURE__ */React112.createElement(\"div\", {\n    className: \"lk-button-group\"\n  }, /* @__PURE__ */React112.createElement(TrackToggle, {\n    source: Track9.Source.Microphone,\n    showIcon,\n    onChange: microphoneOnChange\n  }, showText && \"Microphone\"), /* @__PURE__ */React112.createElement(\"div\", {\n    className: \"lk-button-group-menu\"\n  }, /* @__PURE__ */React112.createElement(MediaDeviceMenu, {\n    kind: \"audioinput\",\n    onActiveDeviceChange: (_kind, deviceId) => saveAudioInputDeviceId(deviceId != null ? deviceId : \"\")\n  }))), visibleControls.camera && /* @__PURE__ */React112.createElement(\"div\", {\n    className: \"lk-button-group\"\n  }, /* @__PURE__ */React112.createElement(TrackToggle, {\n    source: Track9.Source.Camera,\n    showIcon,\n    onChange: cameraOnChange\n  }, showText && \"Camera\"), /* @__PURE__ */React112.createElement(\"div\", {\n    className: \"lk-button-group-menu\"\n  }, /* @__PURE__ */React112.createElement(MediaDeviceMenu, {\n    kind: \"videoinput\",\n    onActiveDeviceChange: (_kind, deviceId) => saveVideoInputDeviceId(deviceId != null ? deviceId : \"\")\n  }))), visibleControls.screenShare && browserSupportsScreenSharing && /* @__PURE__ */React112.createElement(TrackToggle, {\n    source: Track9.Source.ScreenShare,\n    captureOptions: {\n      audio: true,\n      selfBrowserSurface: \"include\"\n    },\n    showIcon,\n    onChange: onScreenShareChange\n  }, showText && (isScreenShareEnabled ? \"Stop screen share\" : \"Share screen\")), visibleControls.chat && /* @__PURE__ */React112.createElement(ChatToggle, null, showIcon && /* @__PURE__ */React112.createElement(ChatIcon_default, null), showText && \"Chat\"), visibleControls.settings && /* @__PURE__ */React112.createElement(SettingsMenuToggle, null, showIcon && /* @__PURE__ */React112.createElement(GearIcon_default, null), showText && \"Settings\"), visibleControls.leave && /* @__PURE__ */React112.createElement(DisconnectButton, null, showIcon && /* @__PURE__ */React112.createElement(LeaveIcon_default, null), showText && \"Leave\"), /* @__PURE__ */React112.createElement(StartMediaButton, null));\n}\n\n// src/prefabs/VideoConference.tsx\nfunction VideoConference(_a) {\n  var _b = _a,\n    {\n      chatMessageFormatter,\n      chatMessageDecoder,\n      chatMessageEncoder,\n      SettingsComponent\n    } = _b,\n    props = __objRest(_b, [\"chatMessageFormatter\", \"chatMessageDecoder\", \"chatMessageEncoder\", \"SettingsComponent\"]);\n  var _a2, _b2;\n  const [widgetState, setWidgetState] = React113.useState({\n    showChat: false,\n    unreadMessages: 0,\n    showSettings: false\n  });\n  const lastAutoFocusedScreenShareTrack = React113.useRef(null);\n  const tracks = useTracks([{\n    source: Track10.Source.Camera,\n    withPlaceholder: true\n  }, {\n    source: Track10.Source.ScreenShare,\n    withPlaceholder: false\n  }], {\n    updateOnlyOn: [RoomEvent3.ActiveSpeakersChanged],\n    onlySubscribed: false\n  });\n  const widgetUpdate = state => {\n    log13.debug(\"updating widget state\", state);\n    setWidgetState(state);\n  };\n  const layoutContext = useCreateLayoutContext();\n  const screenShareTracks = tracks.filter(isTrackReference5).filter(track => track.publication.source === Track10.Source.ScreenShare);\n  const focusTrack = (_a2 = usePinnedTracks(layoutContext)) == null ? void 0 : _a2[0];\n  const carouselTracks = tracks.filter(track => !isEqualTrackRef(track, focusTrack));\n  React113.useEffect(() => {\n    var _a3, _b3, _c, _d, _e, _f;\n    if (screenShareTracks.some(track => track.publication.isSubscribed) && lastAutoFocusedScreenShareTrack.current === null) {\n      log13.debug(\"Auto set screen share focus:\", {\n        newScreenShareTrack: screenShareTracks[0]\n      });\n      (_b3 = (_a3 = layoutContext.pin).dispatch) == null ? void 0 : _b3.call(_a3, {\n        msg: \"set_pin\",\n        trackReference: screenShareTracks[0]\n      });\n      lastAutoFocusedScreenShareTrack.current = screenShareTracks[0];\n    } else if (lastAutoFocusedScreenShareTrack.current && !screenShareTracks.some(track => {\n      var _a4, _b4;\n      return track.publication.trackSid === ((_b4 = (_a4 = lastAutoFocusedScreenShareTrack.current) == null ? void 0 : _a4.publication) == null ? void 0 : _b4.trackSid);\n    })) {\n      log13.debug(\"Auto clearing screen share focus.\");\n      (_d = (_c = layoutContext.pin).dispatch) == null ? void 0 : _d.call(_c, {\n        msg: \"clear_pin\"\n      });\n      lastAutoFocusedScreenShareTrack.current = null;\n    }\n    if (focusTrack && !isTrackReference5(focusTrack)) {\n      const updatedFocusTrack = tracks.find(tr => tr.participant.identity === focusTrack.participant.identity && tr.source === focusTrack.source);\n      if (updatedFocusTrack !== focusTrack && isTrackReference5(updatedFocusTrack)) {\n        (_f = (_e = layoutContext.pin).dispatch) == null ? void 0 : _f.call(_e, {\n          msg: \"set_pin\",\n          trackReference: updatedFocusTrack\n        });\n      }\n    }\n  }, [screenShareTracks.map(ref => `${ref.publication.trackSid}_${ref.publication.isSubscribed}`).join(), (_b2 = focusTrack == null ? void 0 : focusTrack.publication) == null ? void 0 : _b2.trackSid, tracks]);\n  useWarnAboutMissingStyles();\n  return /* @__PURE__ */React113.createElement(\"div\", __spreadValues({\n    className: \"lk-video-conference\"\n  }, props), isWeb() && /* @__PURE__ */React113.createElement(LayoutContextProvider, {\n    value: layoutContext,\n    onWidgetChange: widgetUpdate\n  }, /* @__PURE__ */React113.createElement(\"div\", {\n    className: \"lk-video-conference-inner\"\n  }, !focusTrack ? /* @__PURE__ */React113.createElement(\"div\", {\n    className: \"lk-grid-layout-wrapper\"\n  }, /* @__PURE__ */React113.createElement(GridLayout, {\n    tracks\n  }, /* @__PURE__ */React113.createElement(ParticipantTile, null))) : /* @__PURE__ */React113.createElement(\"div\", {\n    className: \"lk-focus-layout-wrapper\"\n  }, /* @__PURE__ */React113.createElement(FocusLayoutContainer, null, /* @__PURE__ */React113.createElement(CarouselLayout, {\n    tracks: carouselTracks\n  }, /* @__PURE__ */React113.createElement(ParticipantTile, null)), focusTrack && /* @__PURE__ */React113.createElement(FocusLayout, {\n    trackRef: focusTrack\n  }))), /* @__PURE__ */React113.createElement(ControlBar, {\n    controls: {\n      chat: true,\n      settings: !!SettingsComponent\n    }\n  })), /* @__PURE__ */React113.createElement(Chat, {\n    style: {\n      display: widgetState.showChat ? \"grid\" : \"none\"\n    },\n    messageFormatter: chatMessageFormatter,\n    messageEncoder: chatMessageEncoder,\n    messageDecoder: chatMessageDecoder\n  }), SettingsComponent && /* @__PURE__ */React113.createElement(\"div\", {\n    className: \"lk-settings-menu-modal\",\n    style: {\n      display: widgetState.showSettings ? \"block\" : \"none\"\n    }\n  }, /* @__PURE__ */React113.createElement(SettingsComponent, null))), /* @__PURE__ */React113.createElement(RoomAudioRenderer, null), /* @__PURE__ */React113.createElement(ConnectionStateToast, null));\n}\n\n// src/prefabs/AudioConference.tsx\nimport * as React114 from \"react\";\nimport { Track as Track11 } from \"livekit-client\";\nfunction AudioConference(_a) {\n  var props = __objRest(_a, []);\n  const [widgetState, setWidgetState] = React114.useState({\n    showChat: false,\n    unreadMessages: 0\n  });\n  const audioTracks = useTracks([Track11.Source.Microphone]);\n  useWarnAboutMissingStyles();\n  return /* @__PURE__ */React114.createElement(LayoutContextProvider, {\n    onWidgetChange: setWidgetState\n  }, /* @__PURE__ */React114.createElement(\"div\", __spreadValues({\n    className: \"lk-audio-conference\"\n  }, props), /* @__PURE__ */React114.createElement(\"div\", {\n    className: \"lk-audio-conference-stage\"\n  }, /* @__PURE__ */React114.createElement(TrackLoop, {\n    tracks: audioTracks\n  }, /* @__PURE__ */React114.createElement(ParticipantAudioTile, null))), /* @__PURE__ */React114.createElement(ControlBar, {\n    controls: {\n      microphone: true,\n      screenShare: false,\n      camera: false,\n      chat: true\n    }\n  }), widgetState.showChat && /* @__PURE__ */React114.createElement(Chat, null)));\n}\n\n// src/index.ts\nimport { setLogLevel, setLogExtension, isTrackReference as isTrackReference6 } from \"@livekit/components-core\";\nexport { AudioConference, AudioTrack, AudioVisualizer, CameraDisabledIcon_default as CameraDisabledIcon, CameraIcon_default as CameraIcon, CarouselLayout, Chat, ChatCloseIcon_default as ChatCloseIcon, ChatEntry, ChatIcon_default as ChatIcon, ChatToggle, Chevron_default as Chevron, ClearPinButton, ConnectionQualityIndicator, ConnectionState4 as ConnectionState, ConnectionStateToast, ControlBar, DisconnectButton, FocusLayout, FocusLayoutContainer, FocusToggle, FocusToggleIcon_default as FocusToggleIcon, GearIcon_default as GearIcon, GridLayout, LKFeatureContext, LayoutContext, LayoutContextProvider, LeaveIcon_default as LeaveIcon, LiveKitRoom, LockLockedIcon_default as LockLockedIcon, MediaDeviceMenu, MediaDeviceSelect, MicDisabledIcon_default as MicDisabledIcon, MicIcon_default as MicIcon, ParticipantAudioTile, ParticipantContext, ParticipantContextIfNeeded, ParticipantLoop, ParticipantName, ParticipantPlaceholder_default as ParticipantPlaceholder, ParticipantTile, PreJoin, QualityExcellentIcon_default as QualityExcellentIcon, QualityGoodIcon_default as QualityGoodIcon, QualityPoorIcon_default as QualityPoorIcon, QualityUnknownIcon_default as QualityUnknownIcon, RoomAudioRenderer, RoomContext, RoomName, ScreenShareIcon_default as ScreenShareIcon, ScreenShareStopIcon_default as ScreenShareStopIcon, SpinnerIcon_default as SpinnerIcon, StartAudio, Toast, TrackLoop, TrackMutedIndicator, TrackRefContext, TrackToggle, UnfocusToggleIcon_default as UnfocusToggleIcon, VideoConference, VideoTrack, formatChatMessageLinks, isTrackReference6 as isTrackReference, setLogExtension, setLogLevel, useAudioPlayback, useChat, useChatToggle, useClearPinButton, useConnectionQualityIndicator, useConnectionState, useCreateLayoutContext, useDataChannel, useDisconnectButton, useEnsureCreateLayoutContext, useEnsureLayoutContext, useEnsureParticipant, useEnsureRoom, useEnsureTrackRef, useFacingMode, useFeatureContext, useFocusToggle, useGridLayout, useIsEncrypted, useIsMuted, useIsSpeaking, useLayoutContext, useLiveKitRoom, useLocalParticipant, useLocalParticipantPermissions, useMaybeLayoutContext, useMaybeParticipantContext, useMaybeRoomContext, useMaybeTrackRefContext, useMediaDeviceSelect, useMediaDevices, useMultibandTrackVolume, usePagination, useParticipantContext, useParticipantInfo, useParticipantPermissions, useParticipantTile, useParticipantTracks, useParticipants, usePersistentUserChoices, usePinnedTracks, usePreviewDevice, usePreviewTracks, useRemoteParticipant, useRemoteParticipants, useRoomContext, useRoomInfo, useSortedParticipants, useSpeakingParticipants, useStartAudio, useStartVideo, useSwipe, useToken, useTrackByName, useTrackMutedIndicator, useTrackRefContext, useTrackToggle, useTrackTranscription, useTrackVolume, useTracks, useVisualStableUpdate };","map":{"version":3,"names":["React52","React9","React","useLatest","useResizeObserver","target","callback","resizeObserver","getResizeObserver","storedCallback","useLayoutEffect","didUnsubscribe","targetEl","current","cb","entry","observer","subscribe","unsubscribe","createResizeObserver","ticking","allEntries","callbacks","Map","window","ResizeObserver","entries","obs","concat","requestAnimationFrame","triggered","Set","i","length","has","add","cbs","get","forEach","_a","observe","push","set","unobserve","delete","cbIndex","indexOf","splice","_resizeObserver","useSize","size","setSize","useState","width","height","getBoundingClientRect","resizeCallback","useCallback","contentRect","React2","useObservableState","observable","startWith","resetWhenObservableChanges","state","setState","useEffect","subscription","React3","useMediaQuery","query","getMatches","query2","matchMedia","matches","setMatches","handleChange","addListener","addEventListener","removeListener","removeEventListener","roomAudioPlaybackAllowedObservable","PIN_DEFAULT_STATE","WIDGET_DEFAULT_STATE","React4","chatReducer","action","msg","__spreadProps","__spreadValues","showChat","unreadMessages","newState","count","showSettings","pinReducer","trackReference","LayoutContext","createContext","useLayoutContext","layoutContext","useContext","Error","useEnsureLayoutContext","layout","useMaybeLayoutContext","useCreateLayoutContext","pinState","pinDispatch","useReducer","widgetState","widgetDispatch","pin","dispatch","widget","useEnsureCreateLayoutContext","React6","React5","TrackRefContext","useTrackRefContext","useMaybeTrackRefContext","useEnsureTrackRef","trackRef","context","ref","ParticipantContext","useParticipantContext","participant","useMaybeParticipantContext","useEnsureParticipant","trackContext","p","React7","RoomContext","useRoomContext","ctx","useMaybeRoomContext","useEnsureRoom","room","r","React8","LKFeatureContext","useFeatureContext","require2","useAudioPlayback","roomEnsured","startAudio","__async","useMemo","canPlayAudio","canPlaybackAudio","setupClearPinButton","React10","clsx","chain","args","e","console","error","mergeProps","result","props","key","a","b","charCodeAt","useClearPinButton","buttonProps","className","mergedProps","disabled","onClick","setupConnectionQualityIndicator","ConnectionQuality","React11","useConnectionQualityIndicator","options","connectionQualityObserver","quality","Unknown","connectionStateObserver","React12","useConnectionState","connectionState","setupDataMessageHandler","React13","useDataChannel","topicOrCallback","onMessage","topic","send","messageObservable","isSendingObservable","message","isSending","setupDisconnectButton","ConnectionState","React14","useDisconnectButton","disconnect","stopTracks","Disconnected","LocalTrackPublication","facingModeFromLocalTrack","useFacingMode","publication","localTrack","track","facingMode","setupFocusToggle","isTrackReferencePinned","React15","useFocusToggle","inFocus","event","_b","_c","_d","_e","call","GRID_LAYOUTS","selectGridLayout","React16","useGridLayout","gridElement","trackCount","style","setProperty","columns","toString","rows","getTrackReferenceId","mutedObserver","React17","useIsMuted","sourceOrTrackRef","passedParticipant","source","isMuted","setIsMuted","getTrackPublication","listener","createIsSpeakingObserver","React18","useIsSpeaking","isSpeaking","log","setupLiveKitRoom","Room","MediaDeviceFailure","RoomEvent","ConnectionState2","React19","defaultRoomProps","connect","audio","video","useLiveKitRoom","token","serverUrl","passedRoom","connectOptions","screen","onConnected","onDisconnected","onError","onMediaDeviceFailure","onEncryptionError","simulateParticipants","rest","__objRest","warn","setRoom","htmlProps","onSignalConnected","localP","localParticipant","debug","Promise","all","setMicrophoneEnabled","setCameraEnabled","setScreenShareEnabled","catch","handleMediaDeviceError","mediaDeviceFailure","getFailure","handleEncryptionError","on","SignalConnected","MediaDevicesError","EncryptionError","off","participants","publish","useRealTracks","JSON","stringify","connectionStateChangeListener","Connected","ConnectionStateChanged","info","observeParticipantMedia","React20","useLocalParticipant","setLocalParticipant","isMicrophoneEnabled","setIsMicrophoneEnabled","isCameraEnabled","setIsCameraEnabled","lastMicrophoneError","setLastMicrophoneError","lastCameraError","setLastCameraError","isScreenShareEnabled","setIsScreenShareEnabled","microphoneTrack","setMicrophoneTrack","cameraTrack","setCameraTrack","handleUpdate","media","participantPermissionObserver","React21","useLocalParticipantPermissions","permissionObserver","permissions","createMediaDeviceObserver","setupDeviceSelector","log2","React22","useMediaDeviceSelect","kind","requestPermissions","roomContext","deviceObserver","devices","currentDeviceId","setCurrentDeviceId","activeDeviceObservable","setActiveMediaDevice","deviceId","activeDeviceId","React23","createMediaDeviceObserver2","useMediaDevices","React25","log3","sortTrackReferences","updatePages","React24","useVisualStableUpdate","trackReferences","maxItemsOnPage","lastTrackRefs","useRef","lastMaxItemsOnPage","layoutChanged","sortedTrackRefs","customSortFunction","updatedTrackRefs","usePagination","itemPerPage","currentPage","setCurrentPage","totalPageCount","Math","max","ceil","lastItemIndex","firstItemIndex","changePage","direction","goToPage","num","updatedTrackReferences","tracksOnPage","slice","nextPage","prevPage","setPage","tracks","participantInfoObserver","React26","useParticipantInfo","infoObserver","identity","name","metadata","participantPermissionObserver2","React27","useParticipantPermissions","setupParticipantTile","React28","Track","useParticipantTile","onParticipantClick","disableSpeakingIndicator","micTrack","Source","Microphone","micRef","isVideoMuted","isAudioMuted","elementProps","isLocal","connectedParticipantsObserver","React29","useRemoteParticipants","setParticipants","additionalRoomEvents","updateOnlyOn","React30","useParticipants","remoteParticipants","React31","usePinnedTracks","connectedParticipantObserver","participantByIdentifierObserver","React32","useRemoteParticipant","identityOrIdentifier","additionalEvents","participantWrapper","setParticipantWrapper","roomInfoObserver","React33","useRoomInfo","sortParticipants","React35","activeSpeakerObserver","React34","useSpeakingParticipants","speakerObserver","activeSpeakers","useSortedParticipants","sortedParticipants","setSortedParticipants","setupStartAudio","React36","useStartAudio","roomAudioPlaybackAllowedObservable2","handleStartAudioPlayback","display","setupStartVideo","React37","useStartVideo","roomVideoPlaybackAllowedObservable","handleStartVideoPlayback","canPlayVideo","canPlaybackVideo","React38","useSwipe","element","touchStart","touchEnd","minSwipeDistance","onTouchStart","targetTouches","clientX","onTouchMove","onTouchEnd","distance","isLeftSwipe","isRightSwipe","onLeftSwipe","onRightSwipe","elementCopy","passive","setupChatToggle","React39","useChatToggle","toFixed","log4","React40","useToken","tokenEndpoint","roomName","setToken","userInfo","tokenFetcher","params","URLSearchParams","res","fetch","ok","status","statusText","accessToken","json","setupTrackMutedIndicator","getTrackReferenceId2","React41","useTrackMutedIndicator","mediaMutedObserver","setupMediaToggle","setupManualToggle","log5","React42","useTrackToggle","onChange","initialState","captureOptions","publishOptions","onDeviceError","_a2","userInteractionRef","toggle","pendingObserver","enabledObserver","pending","enabled","isEnabled","newProps","clickHandler","evt","_a3","finally","isSourcesWithOptions","isSourceWitOptions","log6","trackReferencesObservable","Track2","React43","useTracks","sources","Camera","ScreenShare","ScreenShareAudio","setTrackReferences","sources_","map","s","onlySubscribed","trackReferences2","participants2","maybeTrackReferences","requirePlaceholder","requiredPlaceholders","trackReferencesWithPlaceholders","Array","from","sourcesToAddPlaceholder","placeholderSource","find","placeholder","difference","setA","setB","_difference","elem","placeholderMap","sourcesThatNeedPlaceholder","filter","sourceWithOption","withPlaceholder","sourcesOfSubscribedTracks","getTrackPublications","pub","trackSource","placeholderNeededForThisParticipant","setupMediaTrack","getTrackByIdentifier","React44","Track3","useTrackRefBySourceOrName","setPublication","trackObserver","sid","publication2","useTrackByName","React45","setupChat","ConnectionState3","useChat","isDisconnected","setup","chatMessages","update","loadUserChoices","saveUserChoices","React46","usePersistentUserChoices","userChoices","setSettings","defaults","preventLoad","saveAudioInputEnabled","prev","audioEnabled","saveVideoInputEnabled","videoEnabled","saveAudioInputDeviceId","audioDeviceId","saveVideoInputDeviceId","videoDeviceId","saveUsername","username","preventSave","React47","LocalParticipant","encryptionStatusObservable","useIsEncrypted","isEncrypted","isE2EEEnabled","React48","Track4","createAudioAnalyser","isTrackReference","useTrackVolume","trackOrTrackReference","fftSize","smoothingTimeConstant","volume","setVolume","mediaStream","cleanup","analyser","bufferLength","frequencyBinCount","dataArray","Uint8Array","updateVolume","getByteFrequencyData","sum","sqrt","interval","setInterval","clearInterval","normalizeFrequencies","frequencies","normalizeDb","value","minDb","maxDb","db","min","Infinity","multibandDefaults","bands","loPass","hiPass","updateInterval","analyserOptions","useMultibandTrackVolume","frequencyBands","setFrequencyBands","opts","Float32Array","getFloatFrequencyData","normalizedFrequencies","chunkSize","chunks","summedVolumes","reduce","acc","val","React49","participantTracksObservable","useParticipantTracks","participantIdentity","participantContext","getParticipantByIdentity","trackRefs","addMediaTimestampToTranscription","addTimestampsToTranscription","dedupeSegments","getTrackReferenceId3","trackTranscriptionObserver","React51","React50","trackSyncTimeObserver","useTrackSyncTime","timestamp","Date","now","rtpTimestamp","TRACK_TRANSCRIPTION_DEFAULTS","bufferSize","useTrackTranscription","segments","setSegments","syncTimestamps","handleSegmentMessage","newSegments","prevSegments","ClearPinButton","forwardRef","ClearPinButton2","createElement","children","React53","ConnectionState4","ConnectionState5","React54","ChatToggle","ChatToggle2","React55","DisconnectButton","DisconnectButton2","React75","React56","SvgCameraDisabledIcon","xmlns","fill","d","CameraDisabledIcon_default","React57","SvgCameraIcon","CameraIcon_default","React58","SvgChatCloseIcon","viewBox","ChatCloseIcon_default","React59","SvgChatIcon","fillRule","clipRule","ChatIcon_default","React60","SvgChevron","Chevron_default","React61","SvgFocusToggleIcon","stroke","strokeLinecap","strokeLinejoin","strokeWidth","FocusToggleIcon_default","React62","SvgGearIcon","GearIcon_default","React63","SvgLeaveIcon","LeaveIcon_default","React64","SvgLockLockedIcon","LockLockedIcon_default","React65","SvgMicDisabledIcon","MicDisabledIcon_default","React66","SvgMicIcon","MicIcon_default","React67","SvgQualityExcellentIcon","QualityExcellentIcon_default","React68","SvgQualityGoodIcon","opacity","QualityGoodIcon_default","React69","SvgQualityPoorIcon","QualityPoorIcon_default","React70","SvgQualityUnknownIcon","QualityUnknownIcon_default","React71","SvgScreenShareIcon","ScreenShareIcon_default","React72","SvgScreenShareStopIcon","ScreenShareStopIcon_default","React73","SvgSpinnerIcon","SpinnerIcon_default","React74","SvgUnfocusToggleIcon","UnfocusToggleIcon_default","FocusToggle","FocusToggle2","trackRefFromContext","Consumer","React77","React76","log7","isProp","prop","mergeProps2","cloneSingleChild","Children","child","isValidElement","only","cloneElement","warnAboutMissingStyles","el","process","env","NODE_ENV","document","querySelector","getComputedStyle","getPropertyValue","RoomEvent2","MediaDeviceSelect","MediaDeviceSelect2","initialSelection","onActiveDeviceChange","onDeviceListChange","onDeviceSelectError","exactMatch","handleError","emit","handleActiveDeviceChange","exact","isActive","activeDeviceId2","index","device","id","role","label","React78","StartAudio","StartAudio2","React80","React79","ConnectionQuality2","Track5","getSourceIcon","getConnectionQualityIcon","Excellent","Good","Poor","TrackToggle","TrackToggle2","showIcon","React89","React88","Track6","isTrackReference3","isTrackReferencePinned2","React81","ConnectionQualityIndicator","ConnectionQualityIndicator2","setupParticipantName","React82","ParticipantName","ParticipantName2","React83","TrackMutedIndicator","TrackMutedIndicator2","show","showIndicator","React84","SvgParticipantPlaceholder","preserveAspectRatio","fillOpacity","ParticipantPlaceholder_default","RemoteTrackPublication","React86","isTrackReference2","setupMediaTrack2","log8","getTrackByIdentifier2","React85","useMediaTrackBySourceOrName","observerOptions","setMuted","isSubscribed","setSubscribed","setTrack","orientation","setOrientation","previousElement","trackSid","detach","attach","dimensions","orientation_","useHooks","VideoTrack","VideoTrack2","onTrackClick","onSubscriptionStatusChanged","manageSubscription","mediaEl","useImperativeHandle","intersectionEntry","useIntersectionObserver","root","debouncedIntersectionEntry","useDebounceValue","isIntersecting","muted","React87","log9","RemoteAudioTrack","RemoteTrackPublication2","AudioTrack","AudioTrack2","setEnabled","ParticipantContextIfNeeded","hasContext","Provider","Fragment","TrackRefContextIfNeeded","ParticipantTile","ParticipantTile2","_b2","autoManageSubscription","autoSubscription","handleSubscribe","subscribed","position","marginRight","FocusLayoutContainer","FocusLayout","React93","React90","getTrackReferenceId4","TrackLoop","React91","createInteractingObservable","PaginationControl","pagesContainer","connectedElement","interactive","setInteractive","React92","PaginationIndicator","PaginationIndicator2","bubbles","_","GridLayout","gridEl","createRef","pagination","maxTiles","getScrollBarWidth","React94","MIN_HEIGHT","MIN_WIDTH","MIN_VISIBLE_TILES","ASPECT_RATIO","ASPECT_RATIO_INVERT","CarouselLayout","asideEl","prevTiles","setPrevTiles","carouselOrientation","tileSpan","scrollBarWidth","tilesThatFit","maxVisibleTiles","round","abs","sortedTiles","dataset","lkOrientation","log10","React95","LayoutContextProvider","onPinChange","onWidgetChange","layoutContextValue","React96","LiveKitRoom","LiveKitRoom2","featureFlags","React97","AudioVisualizer","AudioVisualizer2","svgWidth","svgHeight","barWidth","barSpacing","volMultiplier","barCount","volumes","x","y","transform","vol","idx","React98","ParticipantLoop","getTrackReferenceId5","isLocal2","Track7","React99","RoomAudioRenderer","Kind","Audio","React100","RoomName","RoomName2","childrenPosition","htmlAttributes","React101","Toast","React102","isTrackReference4","ParticipantAudioTile","ParticipantAudioTile2","ConnectionState6","React103","ConnectionStateToast","notification","setNotification","Reconnecting","Connecting","tokenize","createDefaultGrammar","React104","ChatEntry","ChatEntry2","hideName","hideTimestamp","messageFormatter","formattedMessage","hasBeenEdited","editTimestamp","time","locale","navigator","language","title","toLocaleTimeString","timeStyle","formatChatMessageLinks","tok","content","href","type","test","rel","React105","Chat","messageDecoder","messageEncoder","channelTopic","inputRef","ulRef","chatOptions","lastReadMsgAt","handleSubmit","preventDefault","trim","focus","scrollTo","top","scrollHeight","unreadMessageCount","allMsg","onSubmit","onInput","ev","stopPropagation","onKeyDown","onKeyUp","createLocalAudioTrack","createLocalTracks","createLocalVideoTrack","facingModeFromLocalTrack2","Track8","VideoPresets","Mutex","React108","computeMenuPosition","wasClickOutside","React106","log11","MediaDeviceMenu","isOpen","setIsOpen","setDevices","updateRequired","setUpdateRequired","needPermissions","setNeedPermissions","kind2","button","tooltip","then","Object","assign","left","handleClickOutside","visibility","audioinput","videoinput","log12","React107","useWarnAboutMissingStyles","defaultUserChoices","usePreviewTracks","setTracks","trackLock","needsCleanup","localTracks","lock","unlock","tr","stop","usePreviewDevice","deviceError","setDeviceError","isCreatingTrack","setIsCreatingTrack","selectedDevice","setSelectedDevice","setLocalTrack","localDeviceId","setLocalDeviceId","createTrack","deviceId2","resolution","h720","newDeviceId","getDeviceId","prevDeviceId","switchDevice","setDeviceId","mute","mediaStreamTrack","unmute","dev","PreJoin","onValidate","joinLabel","micLabel","camLabel","userLabel","persistUserChoices","setUserChoices","partialDefaults","initialUserChoices","setAudioEnabled","setVideoEnabled","setAudioDeviceId","setVideoDeviceId","setUsername","videoEl","videoTrack","Video","facingMode2","audioTrack","isValid","setIsValid","handleValidation","values","newUserChoices","defaultValue","inputEl","autoComplete","overflow","maxWidth","isEqualTrackRef","isTrackReference5","isWeb","log13","RoomEvent3","Track10","React113","Track9","React112","supportsScreenSharing","React109","StartMediaButton","StartMediaButton2","audioProps","restProps","React111","React110","useSettingsToggle","SettingsMenuToggle","SettingsMenuToggle2","ControlBar","variation","controls","saveUserChoices2","isChatOpen","setIsChatOpen","_b3","isTooLittleSpace","defaultVariation","visibleControls","leave","localPermissions","camera","chat","microphone","screenShare","canPublish","canPublishData","showText","browserSupportsScreenSharing","onScreenShareChange","microphoneOnChange","isUserInitiated","cameraOnChange","_kind","selfBrowserSurface","settings","VideoConference","chatMessageFormatter","chatMessageDecoder","chatMessageEncoder","SettingsComponent","setWidgetState","lastAutoFocusedScreenShareTrack","ActiveSpeakersChanged","widgetUpdate","screenShareTracks","focusTrack","carouselTracks","_f","some","newScreenShareTrack","_a4","_b4","updatedFocusTrack","join","React114","Track11","AudioConference","audioTracks","setLogLevel","setLogExtension","isTrackReference6"],"sources":["/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/controls/ClearPinButton.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useAudioPlayback.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/internal/useResizeObserver.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/internal/useObservableState.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/internal/useMediaQuery.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/context/layout-context.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/context/chat-context.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/context/pin-context.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/context/participant-context.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/context/track-reference-context.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/context/room-context.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/context/feature-context.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useClearPinButton.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/mergeProps.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useConnectionQualityIndicator.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useConnectionStatus.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useDataChannel.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useDisconnectButton.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useFacingMode.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useFocusToggle.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useGridLayout.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useIsMuted.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useIsSpeaking.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useLiveKitRoom.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useLocalParticipant.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useLocalParticipantPermissions.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useMediaDeviceSelect.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useMediaDevices.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/usePagination.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useVisualStableUpdate.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useParticipantInfo.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useParticipantPermissions.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useParticipantTile.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useRemoteParticipants.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useParticipants.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/usePinnedTracks.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useRemoteParticipant.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useRoomInfo.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useSortedParticipants.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useSpeakingParticipants.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useStartAudio.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useStartVideo.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useSwipe.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useChatToggle.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useToken.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useTrackMutedIndicator.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useTrackToggle.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useTracks.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useTrackRefBySourceOrName.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useTrackByName.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useChat.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/usePersistentUserChoices.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useIsEncrypted.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useTrackVolume.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useParticipantTracks.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useTrackTranscription.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useTrackSyncTime.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/ConnectionState.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/controls/ChatToggle.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/controls/DisconnectButton.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/controls/FocusToggle.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/CameraDisabledIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/CameraIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/ChatCloseIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/ChatIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/Chevron.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/FocusToggleIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/GearIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/LeaveIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/LockLockedIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/MicDisabledIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/MicIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/QualityExcellentIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/QualityGoodIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/QualityPoorIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/QualityUnknownIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/ScreenShareIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/ScreenShareStopIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/SpinnerIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/UnfocusToggleIcon.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/controls/MediaDeviceSelect.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/utils.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/controls/StartAudio.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/controls/TrackToggle.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/icons/util.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/layout/FocusLayout.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/participant/ParticipantTile.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/participant/ConnectionQualityIndicator.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/participant/ParticipantName.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/participant/TrackMutedIndicator.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/assets/images/ParticipantPlaceholder.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/participant/VideoTrack.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useMediaTrackBySourceOrName.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/participant/AudioTrack.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/layout/GridLayout.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/TrackLoop.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/controls/PaginationControl.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/controls/PaginationIndicator.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/layout/CarouselLayout.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/layout/LayoutContextProvider.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/LiveKitRoom.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/participant/AudioVisualizer.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/ParticipantLoop.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/RoomAudioRenderer.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/RoomName.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/Toast.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/participant/ParticipantAudioTile.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/ConnectionStateToast.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/ChatEntry.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/prefabs/Chat.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/prefabs/PreJoin.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/prefabs/MediaDeviceMenu.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useWarnAboutMissingStyles.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/prefabs/VideoConference.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/prefabs/ControlBar.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/controls/StartMediaButton.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/components/controls/SettingsMenuToggle.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/hooks/useSettingsToggle.ts","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/prefabs/AudioConference.tsx","/home/nishanth/projects/livekit-demo/node_modules/@livekit/components-react/src/index.ts"],"sourcesContent":["import * as React from 'react';\nimport { useClearPinButton } from '../../hooks';\n\n/** @public */\nexport interface ClearPinButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\n/**\n * The `ClearPinButton` is a basic html button with the added ability to signal\n * the `LayoutContext` that it should display the grid view again.\n * @remarks\n * This component works only inside a `LayoutContext`.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ClearPinButton>Back to grid view</ClearPinButton>\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport const ClearPinButton: (\n  props: ClearPinButtonProps & React.RefAttributes<HTMLButtonElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLButtonElement, ClearPinButtonProps>(\n  function ClearPinButton(props: ClearPinButtonProps, ref) {\n    const { buttonProps } = useClearPinButton(props);\n    return (\n      <button ref={ref} {...buttonProps}>\n        {props.children}\n      </button>\n    );\n  },\n);\n","import type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useObservableState } from './internal';\nimport { roomAudioPlaybackAllowedObservable } from '@livekit/components-core';\nimport { useEnsureRoom } from '../context';\n\n/**\n * In many browsers to start audio playback, the user must perform a user-initiated event such as clicking a button.\n * The `useAudioPlayback` hook returns an object with a boolean `canPlayAudio` flag that indicates whether audio\n * playback is allowed in the current context, as well as a `startAudio` function that can be called in a button\n * `onClick` callback to start audio playback in the current context.\n *\n * @see Autoplay policy on MDN web docs for more info: {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Best_practices#autoplay_policy}\n * @alpha\n */\nexport function useAudioPlayback(room?: Room): {\n  canPlayAudio: boolean;\n  startAudio: () => Promise<void>;\n} {\n  const roomEnsured = useEnsureRoom(room);\n  const startAudio = React.useCallback(async () => {\n    await roomEnsured.startAudio();\n  }, [roomEnsured]);\n\n  const observable = React.useMemo(\n    () => roomAudioPlaybackAllowedObservable(roomEnsured),\n    [roomEnsured],\n  );\n  const { canPlayAudio } = useObservableState(observable, {\n    canPlayAudio: roomEnsured.canPlaybackAudio,\n  });\n\n  return { canPlayAudio, startAudio };\n}\n","/* eslint-disable no-return-assign */\n/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport useLatest from '@react-hook/latest';\n\n/**\n * A React hook that fires a callback whenever ResizeObserver detects a change to its size\n * code extracted from https://github.com/jaredLunde/react-hook/blob/master/packages/resize-observer/src/index.tsx in order to not include the polyfill for resize-observer\n *\n * @internal\n */\nexport function useResizeObserver<T extends HTMLElement>(\n  target: React.RefObject<T>,\n  callback: UseResizeObserverCallback,\n) {\n  const resizeObserver = getResizeObserver();\n  const storedCallback = useLatest(callback);\n\n  React.useLayoutEffect(() => {\n    let didUnsubscribe = false;\n\n    const targetEl = target.current;\n    if (!targetEl) return;\n\n    function cb(entry: ResizeObserverEntry, observer: ResizeObserver) {\n      if (didUnsubscribe) return;\n      storedCallback.current(entry, observer);\n    }\n\n    resizeObserver?.subscribe(targetEl as HTMLElement, cb);\n\n    return () => {\n      didUnsubscribe = true;\n      resizeObserver?.unsubscribe(targetEl as HTMLElement, cb);\n    };\n  }, [target.current, resizeObserver, storedCallback]);\n\n  return resizeObserver?.observer;\n}\n\nfunction createResizeObserver() {\n  let ticking = false;\n  let allEntries: ResizeObserverEntry[] = [];\n\n  const callbacks: Map<unknown, Array<UseResizeObserverCallback>> = new Map();\n\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  const observer = new ResizeObserver((entries: ResizeObserverEntry[], obs: ResizeObserver) => {\n    allEntries = allEntries.concat(entries);\n    if (!ticking) {\n      window.requestAnimationFrame(() => {\n        const triggered = new Set<Element>();\n        for (let i = 0; i < allEntries.length; i++) {\n          if (triggered.has(allEntries[i].target)) continue;\n          triggered.add(allEntries[i].target);\n          const cbs = callbacks.get(allEntries[i].target);\n          cbs?.forEach((cb) => cb(allEntries[i], obs));\n        }\n        allEntries = [];\n        ticking = false;\n      });\n    }\n    ticking = true;\n  });\n\n  return {\n    observer,\n    subscribe(target: HTMLElement, callback: UseResizeObserverCallback) {\n      observer.observe(target);\n      const cbs = callbacks.get(target) ?? [];\n      cbs.push(callback);\n      callbacks.set(target, cbs);\n    },\n    unsubscribe(target: HTMLElement, callback: UseResizeObserverCallback) {\n      const cbs = callbacks.get(target) ?? [];\n      if (cbs.length === 1) {\n        observer.unobserve(target);\n        callbacks.delete(target);\n        return;\n      }\n      const cbIndex = cbs.indexOf(callback);\n      if (cbIndex !== -1) cbs.splice(cbIndex, 1);\n      callbacks.set(target, cbs);\n    },\n  };\n}\n\nlet _resizeObserver: ReturnType<typeof createResizeObserver>;\n\nconst getResizeObserver = () =>\n  !_resizeObserver ? (_resizeObserver = createResizeObserver()) : _resizeObserver;\n\nexport type UseResizeObserverCallback = (\n  entry: ResizeObserverEntry,\n  observer: ResizeObserver,\n) => unknown;\n\nexport const useSize = (target: React.RefObject<HTMLDivElement>) => {\n  const [size, setSize] = React.useState({ width: 0, height: 0 });\n  React.useLayoutEffect(() => {\n    if (target.current) {\n      const { width, height } = target.current.getBoundingClientRect();\n      setSize({ width, height });\n    }\n  }, [target.current]);\n\n  const resizeCallback = React.useCallback(\n    (entry: ResizeObserverEntry) => setSize(entry.contentRect),\n    [],\n  );\n  // Where the magic happens\n  useResizeObserver(target, resizeCallback);\n  return size;\n};\n","import * as React from 'react';\n// @ts-ignore\nimport type { Observable } from 'rxjs';\n\n/**\n * @internal\n */\nexport function useObservableState<T>(\n  observable: Observable<T> | undefined,\n  startWith: T,\n  resetWhenObservableChanges = true,\n) {\n  const [state, setState] = React.useState<T>(startWith);\n  React.useEffect(() => {\n    if (resetWhenObservableChanges) {\n      setState(startWith);\n    }\n    // observable state doesn't run in SSR\n    if (typeof window === 'undefined' || !observable) return;\n    const subscription = observable.subscribe(setState);\n    return () => subscription.unsubscribe();\n  }, [observable, resetWhenObservableChanges]);\n  return state;\n}\n","import * as React from 'react';\n/**\n * Implementation used from https://github.com/juliencrn/usehooks-ts\n *\n * @internal\n */\nexport function useMediaQuery(query: string): boolean {\n  const getMatches = (query: string): boolean => {\n    // Prevents SSR issues\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches;\n    }\n    return false;\n  };\n\n  const [matches, setMatches] = React.useState<boolean>(getMatches(query));\n\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n\n  React.useEffect(() => {\n    const matchMedia = window.matchMedia(query);\n\n    // Triggered at the first client-side load and if query changes\n    handleChange();\n\n    // Listen matchMedia\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener('change', handleChange);\n    }\n\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener('change', handleChange);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  return matches;\n}\n","import { PIN_DEFAULT_STATE, WIDGET_DEFAULT_STATE } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { PinContextType } from './pin-context';\nimport type { WidgetContextType } from './chat-context';\nimport { chatReducer } from './chat-context';\nimport { pinReducer } from './pin-context';\n\n/** @public */\nexport type LayoutContextType = {\n  pin: PinContextType;\n  widget: WidgetContextType;\n};\n\n/** @public */\nexport const LayoutContext = React.createContext<LayoutContextType | undefined>(undefined);\n\n/**\n * Ensures that a layout context is provided via context.\n * If no layout context is provided, an error is thrown.\n * @public\n */\nexport function useLayoutContext(): LayoutContextType {\n  const layoutContext = React.useContext(LayoutContext);\n  if (!layoutContext) {\n    throw Error('Tried to access LayoutContext context outside a LayoutContextProvider provider.');\n  }\n  return layoutContext;\n}\n\n/**\n * Ensures that a layout context is provided, either via context or explicitly as a parameter.\n * If not inside a `LayoutContext` and no layout context is provided, an error is thrown.\n * @public\n */\nexport function useEnsureLayoutContext(layoutContext?: LayoutContextType) {\n  const layout = useMaybeLayoutContext();\n  layoutContext ??= layout;\n  if (!layoutContext) {\n    throw Error('Tried to access LayoutContext context outside a LayoutContextProvider provider.');\n  }\n  return layoutContext;\n}\n\n/** @public */\nexport function useCreateLayoutContext(): LayoutContextType {\n  const [pinState, pinDispatch] = React.useReducer(pinReducer, PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = React.useReducer(chatReducer, WIDGET_DEFAULT_STATE);\n  return {\n    pin: { dispatch: pinDispatch, state: pinState },\n    widget: { dispatch: widgetDispatch, state: widgetState },\n  };\n}\n\n/** @public */\nexport function useEnsureCreateLayoutContext(layoutContext?: LayoutContextType): LayoutContextType {\n  const [pinState, pinDispatch] = React.useReducer(pinReducer, PIN_DEFAULT_STATE);\n  const [widgetState, widgetDispatch] = React.useReducer(chatReducer, WIDGET_DEFAULT_STATE);\n  return (\n    layoutContext ?? {\n      pin: { dispatch: pinDispatch, state: pinState },\n      widget: { dispatch: widgetDispatch, state: widgetState },\n    }\n  );\n}\n\n/**\n * Returns a layout context from the `LayoutContext` if it exists, otherwise `undefined`.\n * @public\n */\nexport function useMaybeLayoutContext(): LayoutContextType | undefined {\n  return React.useContext(LayoutContext);\n}\n","import type { WidgetState } from '@livekit/components-core';\nimport type * as React from 'react';\n\n/** @internal */\nexport type ChatContextAction =\n  | { msg: 'show_chat' }\n  | { msg: 'hide_chat' }\n  | { msg: 'toggle_chat' }\n  | { msg: 'unread_msg'; count: number }\n  | { msg: 'toggle_settings' };\n\n/** @internal */\nexport type WidgetContextType = {\n  dispatch?: React.Dispatch<ChatContextAction>;\n  state?: WidgetState;\n};\n\n/** @internal */\nexport function chatReducer(state: WidgetState, action: ChatContextAction): WidgetState {\n  if (action.msg === 'show_chat') {\n    return { ...state, showChat: true, unreadMessages: 0 };\n  } else if (action.msg === 'hide_chat') {\n    return { ...state, showChat: false };\n  } else if (action.msg === 'toggle_chat') {\n    const newState = { ...state, showChat: !state.showChat };\n    if (newState.showChat === true) {\n      newState.unreadMessages = 0;\n    }\n    return newState;\n  } else if (action.msg === 'unread_msg') {\n    return { ...state, unreadMessages: action.count };\n  } else if (action.msg === 'toggle_settings') {\n    return { ...state, showSettings: !state.showSettings };\n  } else {\n    return { ...state };\n  }\n}\n","import type { PinState, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport type * as React from 'react';\n\n/** @internal */\nexport type PinAction =\n  | {\n      msg: 'set_pin';\n      trackReference: TrackReferenceOrPlaceholder;\n    }\n  | { msg: 'clear_pin' };\n\n/** @internal */\nexport type PinContextType = {\n  dispatch?: React.Dispatch<PinAction>;\n  state?: PinState;\n};\n\n/** @internal */\nexport function pinReducer(state: PinState, action: PinAction): PinState {\n  if (action.msg === 'set_pin') {\n    return [action.trackReference];\n  } else if (action.msg === 'clear_pin') {\n    return [];\n  } else {\n    return { ...state };\n  }\n}\n","import type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useMaybeTrackRefContext } from './track-reference-context';\n\n/** @public */\nexport const ParticipantContext = React.createContext<Participant | undefined>(undefined);\n\n/**\n * Ensures that a participant is provided via context.\n * If not inside a `ParticipantContext`, an error is thrown.\n * @public\n */\nexport function useParticipantContext() {\n  const participant = React.useContext(ParticipantContext);\n  if (!participant) {\n    throw Error('tried to access participant context outside of participant context provider');\n  }\n  return participant;\n}\n\n/**\n * Returns a participant from the `ParticipantContext` if it exists, otherwise `undefined`.\n * @public\n */\nexport function useMaybeParticipantContext() {\n  return React.useContext(ParticipantContext);\n}\n\n/**\n * Ensures that a participant is provided, either via context or explicitly as a parameter.\n * If not inside a `ParticipantContext` and no participant is provided, an error is thrown.\n * @public\n */\nexport function useEnsureParticipant(participant?: Participant) {\n  const context = useMaybeParticipantContext();\n  const trackContext = useMaybeTrackRefContext();\n  const p = participant ?? context ?? trackContext?.participant;\n  if (!p) {\n    throw new Error(\n      'No participant provided, make sure you are inside a participant context or pass the participant explicitly',\n    );\n  }\n  return p;\n}\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport * as React from 'react';\n\n/**\n * This context provides a `TrackReferenceOrPlaceholder` to all child components.\n * @public\n */\nexport const TrackRefContext = React.createContext<TrackReferenceOrPlaceholder | undefined>(\n  undefined,\n);\n\n/**\n * Ensures that a track reference is provided via context.\n * If not inside a `TrackRefContext`, an error is thrown.\n * @public\n */\nexport function useTrackRefContext() {\n  const trackReference = React.useContext(TrackRefContext);\n  if (!trackReference) {\n    throw Error('tried to access track context outside of track context provider');\n  }\n  return trackReference;\n}\n\n/**\n * Returns a track reference from the `TrackRefContext` if it exists, otherwise `undefined`.\n * @public\n */\nexport function useMaybeTrackRefContext() {\n  return React.useContext(TrackRefContext);\n}\n\n/**\n * Ensures that a track reference is provided, either via context or explicitly as a parameter.\n * If not inside a `TrackRefContext` and no track reference is provided, an error is thrown.\n * @public\n */\nexport function useEnsureTrackRef(trackRef?: TrackReferenceOrPlaceholder) {\n  const context = useMaybeTrackRefContext();\n  const ref = trackRef ?? context;\n  if (!ref) {\n    throw new Error(\n      'No TrackRef, make sure you are inside a TrackRefContext or pass the TrackRef explicitly',\n    );\n  }\n  return ref;\n}\n","import type { Room } from 'livekit-client';\nimport * as React from 'react';\n\n/** @public */\nexport const RoomContext = React.createContext<Room | undefined>(undefined);\n\n/**\n * Ensures that a room is provided via context.\n * If no room is provided, an error is thrown.\n * @public\n */\nexport function useRoomContext() {\n  const ctx = React.useContext(RoomContext);\n  if (!ctx) {\n    throw Error('tried to access room context outside of livekit room component');\n  }\n  return ctx;\n}\n\n/**\n * Returns the room context if it exists, otherwise undefined.\n * @public\n */\nexport function useMaybeRoomContext() {\n  return React.useContext(RoomContext);\n}\n\n/**\n * Ensures that a room is provided, either via context or explicitly as a parameter.\n * If no room is provided, an error is thrown.\n * @public\n */\nexport function useEnsureRoom(room?: Room) {\n  const context = useMaybeRoomContext();\n  const r = room ?? context;\n  if (!r) {\n    throw new Error(\n      'No room provided, make sure you are inside a Room context or pass the room explicitly',\n    );\n  }\n  return r;\n}\n","import * as React from 'react';\n\n/** @internal */\nexport interface FeatureFlags {\n  autoSubscription?: boolean;\n}\n\ntype FeatureContext<T extends boolean = false> = T extends true\n  ? FeatureFlags\n  : FeatureFlags | undefined;\n\n/** @internal */\nexport const LKFeatureContext = React.createContext<FeatureFlags | undefined>(undefined);\n\n/**\n * @internal\n */\nexport function useFeatureContext<T extends boolean>(require?: T): FeatureContext<T> {\n  const ctx = React.useContext(LKFeatureContext) as FeatureContext<T>;\n  if (require === true) {\n    if (ctx) {\n      return ctx;\n    } else {\n      throw Error('tried to access feature context, but none is present');\n    }\n  }\n  return ctx;\n}\n","import { setupClearPinButton } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useLayoutContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport type { ClearPinButtonProps } from '../components';\n\n/**\n * The `useClearPinButton` hook provides props for the {@link ClearPinButton}\n * or your custom implementation of it component. It adds the `onClick` handler\n * to signal the `LayoutContext` that the tile in focus should be cleared.\n * @public\n */\nexport function useClearPinButton(props: ClearPinButtonProps) {\n  const { state, dispatch } = useLayoutContext().pin;\n\n  const buttonProps = React.useMemo(() => {\n    const { className } = setupClearPinButton();\n    const mergedProps = mergeProps(props, {\n      className,\n      disabled: !state?.length,\n      onClick: () => {\n        if (dispatch) dispatch({ msg: 'clear_pin' });\n      },\n    });\n    return mergedProps;\n  }, [props, dispatch, state]);\n\n  return { buttonProps };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\n\n/**\n * Calls all functions in the order they were chained with the same arguments.\n * @internal\n */\nexport function chain(...callbacks: any[]): (...args: any[]) => void {\n  return (...args: any[]) => {\n    for (const callback of callbacks) {\n      if (typeof callback === 'function') {\n        try {\n          callback(...args);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n  };\n}\n\ninterface Props {\n  [key: string]: any;\n}\n\n// taken from: https://stackoverflow.com/questions/51603250/typescript-3-parameter-list-intersection-type/51604379#51604379\ntype TupleTypes<T> = { [P in keyof T]: T[P] } extends { [key: number]: infer V } ? V : never;\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void\n  ? I\n  : never;\n\n/**\n * Merges multiple props objects together. Event handlers are chained,\n * classNames are combined, and ids are deduplicated - different ids\n * will trigger a side-effect and re-render components hooked up with `useId`.\n * For all other props, the last prop object overrides all previous ones.\n * @param args - Multiple sets of props to merge together.\n * @internal\n */\nexport function mergeProps<T extends Props[]>(...args: T): UnionToIntersection<TupleTypes<T>> {\n  // Start with a base clone of the first argument. This is a lot faster than starting\n  // with an empty object and adding properties as we go.\n  const result: Props = { ...args[0] };\n  for (let i = 1; i < args.length; i++) {\n    const props = args[i];\n    for (const key in props) {\n      const a = result[key];\n      const b = props[key];\n\n      // Chain events\n      if (\n        typeof a === 'function' &&\n        typeof b === 'function' &&\n        // This is a lot faster than a regex.\n        key[0] === 'o' &&\n        key[1] === 'n' &&\n        key.charCodeAt(2) >= /* 'A' */ 65 &&\n        key.charCodeAt(2) <= /* 'Z' */ 90\n      ) {\n        result[key] = chain(a, b);\n\n        // Merge classnames, sometimes classNames are empty string which eval to false, so we just need to do a type check\n      } else if (\n        (key === 'className' || key === 'UNSAFE_className') &&\n        typeof a === 'string' &&\n        typeof b === 'string'\n      ) {\n        result[key] = clsx(a, b);\n      } else {\n        result[key] = b !== undefined ? b : a;\n      }\n    }\n  }\n\n  return result as UnionToIntersection<TupleTypes<T>>;\n}\n","import { setupConnectionQualityIndicator } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport { ConnectionQuality } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../context';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport interface ConnectionQualityIndicatorOptions {\n  participant?: Participant;\n}\n\n/**\n * The `useConnectionQualityIndicator` hook provides props for the `ConnectionQualityIndicator` or your custom implementation of it component.\n * @example\n * ```tsx\n * const { quality } = useConnectionQualityIndicator();\n * // or\n * const { quality } = useConnectionQualityIndicator({ participant });\n * ```\n * @public\n */\nexport function useConnectionQualityIndicator(options: ConnectionQualityIndicatorOptions = {}) {\n  const p = useEnsureParticipant(options.participant);\n\n  const { className, connectionQualityObserver } = React.useMemo(\n    () => setupConnectionQualityIndicator(p),\n    [p],\n  );\n\n  const quality = useObservableState(connectionQualityObserver, ConnectionQuality.Unknown);\n\n  return { className, quality };\n}\n","import { connectionStateObserver } from '@livekit/components-core';\nimport type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useConnectionState` hook allows you to simply implement your own `ConnectionState` component.\n *\n * @example\n * ```tsx\n * const connectionState = useConnectionState(room);\n * ```\n * @public\n */\nexport function useConnectionState(room?: Room) {\n  // passed room takes precedence, if not supplied get current room context\n  const r = useEnsureRoom(room);\n  const observable = React.useMemo(() => connectionStateObserver(r), [r]);\n  const connectionState = useObservableState(observable, r.state);\n  return connectionState;\n}\n","import type { ReceivedDataMessage } from '@livekit/components-core';\nimport { setupDataMessageHandler } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { DataPublishOptions } from 'livekit-client';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\ntype UseDataChannelReturnType<T extends string | undefined = undefined> = {\n  isSending: boolean;\n  send: (payload: Uint8Array, options: DataPublishOptions) => void;\n  message: ReceivedDataMessage<T> | undefined;\n};\n\n/**\n * The `useDataChannel` hook returns the ability to send and receive messages.\n * By optionally passing a `topic`, you can narrow down which messages are returned in the messages array.\n * @remarks\n * There is only one data channel. Passing a `topic` does not open a new data channel.\n * It is only used to filter out messages with no or a different `topic`.\n *\n * @example\n * ```tsx\n * // Send messages to all participants via the 'chat' topic.\n * const { message: latestMessage, send } = useDataChannel('chat', (msg) => console.log(\"message received\", msg));\n * ```\n * @public\n */\nexport function useDataChannel<T extends string>(\n  topic: T,\n  onMessage?: (msg: ReceivedDataMessage<T>) => void,\n): UseDataChannelReturnType<T>;\n/**\n * The `useDataChannel` hook returns the ability to send and receive messages.\n * @remarks\n * There is only one data channel. Passing a `topic` does not open a new data channel.\n * It is only used to filter out messages with no or a different `topic`.\n *\n * @example\n * ```tsx\n * // Send messages to all participants\n * const { message: latestMessage, send } = useDataChannel('chat', (msg) => console.log(\"message received\", msg));\n * ```\n * @public\n */\nexport function useDataChannel(\n  onMessage?: (msg: ReceivedDataMessage) => void,\n): UseDataChannelReturnType;\n/**\n * @internal\n */\nexport function useDataChannel<T extends string>(\n  topicOrCallback?: T | ((msg: ReceivedDataMessage) => void),\n  callback?: (msg: ReceivedDataMessage<T>) => void,\n) {\n  const onMessage = typeof topicOrCallback === 'function' ? topicOrCallback : callback;\n\n  const topic = typeof topicOrCallback === 'string' ? topicOrCallback : undefined;\n  const room = useRoomContext();\n  const { send, messageObservable, isSendingObservable } = React.useMemo(\n    () => setupDataMessageHandler(room, topic, onMessage),\n    [room, topic, onMessage],\n  );\n\n  const message = useObservableState(messageObservable, undefined);\n  const isSending = useObservableState(isSendingObservable, false);\n\n  return {\n    message,\n    send,\n    isSending,\n  };\n}\n","import { setupDisconnectButton } from '@livekit/components-core';\nimport { ConnectionState } from 'livekit-client';\nimport * as React from 'react';\nimport type { DisconnectButtonProps } from '../components';\nimport { useRoomContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport { useConnectionState } from './useConnectionStatus';\n\n/**\n * The `useDisconnectButton` hook is used to implement the `DisconnectButton` or your\n * custom implementation of it. It adds onClick handler to the button to disconnect\n * from the room.\n *\n * @example\n * ```tsx\n * const { buttonProps } = useDisconnectButton(buttonProps);\n * return <button {...buttonProps}>Disconnect</button>;\n * ```\n * @public\n */\nexport function useDisconnectButton(props: DisconnectButtonProps) {\n  const room = useRoomContext();\n  const connectionState = useConnectionState(room);\n\n  const buttonProps = React.useMemo(() => {\n    const { className, disconnect } = setupDisconnectButton(room);\n    const mergedProps = mergeProps(props, {\n      className,\n      onClick: () => disconnect(props.stopTracks ?? true),\n      disabled: connectionState === ConnectionState.Disconnected,\n    });\n    return mergedProps;\n  }, [room, props, connectionState]);\n\n  return { buttonProps };\n}\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { LocalTrackPublication, facingModeFromLocalTrack } from 'livekit-client';\n\n/**\n * Try to determine the `facingMode` of a local participant video track.\n * @remarks\n * Works only on local video tracks.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode | MDN docs on facingMode}\n * @alpha\n */\nexport function useFacingMode(\n  trackReference: TrackReferenceOrPlaceholder,\n): 'user' | 'environment' | 'left' | 'right' | 'undefined' {\n  if (trackReference.publication instanceof LocalTrackPublication) {\n    const localTrack = trackReference.publication.track;\n    if (localTrack) {\n      const { facingMode } = facingModeFromLocalTrack(localTrack);\n      return facingMode;\n    }\n  }\n  return 'undefined';\n}\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { setupFocusToggle, isTrackReferencePinned } from '@livekit/components-core';\nimport { useEnsureTrackRef, useMaybeLayoutContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport * as React from 'react';\n\n/** @public */\nexport interface UseFocusToggleProps {\n  trackRef?: TrackReferenceOrPlaceholder;\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * The `useFocusToggle` hook is used to implement the `FocusToggle` or your custom implementation of it.\n * The `TrackReferenceOrPlaceholder` is used to register a onClick handler and to identify the track to focus on.\n *\n * @example\n * ```tsx\n * const { mergedProps, inFocus } = useFocusToggle({ trackRef, props: yourButtonProps });\n * return <button {...mergedProps}>{inFocus ? 'Unfocus' : 'Focus'}</button>;\n * ```\n * @public\n */\nexport function useFocusToggle({ trackRef, props }: UseFocusToggleProps) {\n  const trackReference = useEnsureTrackRef(trackRef);\n\n  const layoutContext = useMaybeLayoutContext();\n  const { className } = React.useMemo(() => setupFocusToggle(), []);\n\n  const inFocus: boolean = React.useMemo(() => {\n    return isTrackReferencePinned(trackReference, layoutContext?.pin.state);\n  }, [trackReference, layoutContext?.pin.state]);\n\n  const mergedProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n        onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n          // Call user defined on click callbacks.\n          props.onClick?.(event);\n\n          // Set or clear focus based on current focus state.\n          if (inFocus) {\n            layoutContext?.pin.dispatch?.({\n              msg: 'clear_pin',\n            });\n          } else {\n            layoutContext?.pin.dispatch?.({\n              msg: 'set_pin',\n              trackReference,\n            });\n          }\n        },\n      }),\n    [props, className, trackReference, inFocus, layoutContext?.pin],\n  );\n\n  return { mergedProps, inFocus };\n}\n","import { GRID_LAYOUTS, selectGridLayout } from '@livekit/components-core';\nimport type { GridLayoutDefinition } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useSize } from './internal';\n\n/**\n * The `useGridLayout` hook tries to select the best layout to fit all tiles.\n * If the available screen space is not enough, it will reduce the number of maximum visible\n * tiles and select a layout that still works visually within the given limitations.\n * As the order of tiles changes over time, the hook tries to keep visual updates to a minimum\n * while trying to display important tiles such as speaking participants or screen shares.\n *\n * @example\n * ```tsx\n * const { layout } = useGridLayout(gridElement, trackCount);\n * ```\n * @public\n */\nexport function useGridLayout(\n  /** HTML element that contains the grid. */\n  gridElement: React.RefObject<HTMLDivElement>,\n  /** Count of tracks that should get layed out */\n  trackCount: number,\n): { layout: GridLayoutDefinition } {\n  const { width, height } = useSize(gridElement);\n\n  const layout =\n    width > 0 && height > 0\n      ? selectGridLayout(GRID_LAYOUTS, trackCount, width, height)\n      : GRID_LAYOUTS[0];\n\n  React.useEffect(() => {\n    if (gridElement.current && layout) {\n      gridElement.current.style.setProperty('--lk-col-count', layout?.columns.toString());\n      gridElement.current.style.setProperty('--lk-row-count', layout?.rows.toString());\n    }\n  }, [gridElement, layout]);\n\n  return {\n    layout,\n  };\n}\n","import {\n  type TrackReferenceOrPlaceholder,\n  getTrackReferenceId,\n  mutedObserver,\n} from '@livekit/components-core';\nimport type { Participant, Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../context';\n\n/** @public */\nexport interface UseIsMutedOptions {\n  participant?: Participant;\n}\n\n/**\n * The `useIsMuted` hook is used to implement the `TrackMutedIndicator` or your custom implementation of it.\n * It returns a `boolean` that indicates if the track is muted or not.\n *\n * @example\n * ```tsx\n * const isMuted = useIsMuted(track);\n * ```\n * @public\n */\nexport function useIsMuted(trackRef: TrackReferenceOrPlaceholder): boolean;\nexport function useIsMuted(\n  sourceOrTrackRef: TrackReferenceOrPlaceholder | Track.Source,\n  options: UseIsMutedOptions = {},\n) {\n  const passedParticipant =\n    typeof sourceOrTrackRef === 'string' ? options.participant : sourceOrTrackRef.participant;\n  const p = useEnsureParticipant(passedParticipant);\n  const ref =\n    typeof sourceOrTrackRef === 'string'\n      ? { participant: p, source: sourceOrTrackRef }\n      : sourceOrTrackRef;\n  const [isMuted, setIsMuted] = React.useState(\n    !!(ref.publication?.isMuted || p.getTrackPublication(ref.source)?.isMuted),\n  );\n\n  React.useEffect(() => {\n    const listener = mutedObserver(ref).subscribe(setIsMuted);\n    return () => listener.unsubscribe();\n  }, [getTrackReferenceId(ref)]);\n\n  return isMuted;\n}\n","import { createIsSpeakingObserver } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useIsSpeaking` hook returns a `boolean` that indicates if the participant is speaking or not.\n * @example\n * ```tsx\n * const isSpeaking = useIsSpeaking(participant);\n * ```\n * @public\n */\nexport function useIsSpeaking(participant?: Participant) {\n  const p = useEnsureParticipant(participant);\n  const observable = React.useMemo(() => createIsSpeakingObserver(p), [p]);\n  const isSpeaking = useObservableState(observable, p.isSpeaking);\n\n  return isSpeaking;\n}\n","import { log, setupLiveKitRoom } from '@livekit/components-core';\nimport { Room, MediaDeviceFailure, RoomEvent, ConnectionState } from 'livekit-client';\nimport * as React from 'react';\nimport type { HTMLAttributes } from 'react';\n\nimport type { LiveKitRoomProps } from '../components';\nimport { mergeProps } from '../mergeProps';\n\nconst defaultRoomProps: Partial<LiveKitRoomProps> = {\n  connect: true,\n  audio: false,\n  video: false,\n};\n\n/**\n * The `useLiveKitRoom` hook is used to implement the `LiveKitRoom` or your custom implementation of it.\n * It returns a `Room` instance and HTML props that should be applied to the root element of the component.\n *\n * @example\n * ```tsx\n * const { room, htmlProps } = useLiveKitRoom();\n * return <div {...htmlProps}>...</div>;\n * ```\n * @public\n */\nexport function useLiveKitRoom<T extends HTMLElement>(\n  props: LiveKitRoomProps,\n): {\n  room: Room | undefined;\n  htmlProps: HTMLAttributes<T>;\n} {\n  const {\n    token,\n    serverUrl,\n    options,\n    room: passedRoom,\n    connectOptions,\n    connect,\n    audio,\n    video,\n    screen,\n    onConnected,\n    onDisconnected,\n    onError,\n    onMediaDeviceFailure,\n    onEncryptionError,\n    simulateParticipants,\n    ...rest\n  } = { ...defaultRoomProps, ...props };\n  if (options && passedRoom) {\n    log.warn(\n      'when using a manually created room, the options object will be ignored. set the desired options directly when creating the room instead.',\n    );\n  }\n\n  const [room, setRoom] = React.useState<Room | undefined>();\n\n  React.useEffect(() => {\n    setRoom(passedRoom ?? new Room(options));\n  }, [passedRoom]);\n\n  const htmlProps = React.useMemo(() => {\n    const { className } = setupLiveKitRoom();\n    return mergeProps(rest, { className }) as HTMLAttributes<T>;\n  }, [rest]);\n\n  React.useEffect(() => {\n    if (!room) return;\n    const onSignalConnected = () => {\n      const localP = room.localParticipant;\n\n      log.debug('trying to publish local tracks');\n      Promise.all([\n        localP.setMicrophoneEnabled(!!audio, typeof audio !== 'boolean' ? audio : undefined),\n        localP.setCameraEnabled(!!video, typeof video !== 'boolean' ? video : undefined),\n        localP.setScreenShareEnabled(!!screen, typeof screen !== 'boolean' ? screen : undefined),\n      ]).catch((e) => {\n        log.warn(e);\n        onError?.(e as Error);\n      });\n    };\n\n    const handleMediaDeviceError = (e: Error) => {\n      const mediaDeviceFailure = MediaDeviceFailure.getFailure(e);\n      onMediaDeviceFailure?.(mediaDeviceFailure);\n    };\n    const handleEncryptionError = (e: Error) => {\n      onEncryptionError?.(e);\n    };\n    room\n      .on(RoomEvent.SignalConnected, onSignalConnected)\n      .on(RoomEvent.MediaDevicesError, handleMediaDeviceError)\n      .on(RoomEvent.EncryptionError, handleEncryptionError);\n\n    return () => {\n      room\n        .off(RoomEvent.SignalConnected, onSignalConnected)\n        .off(RoomEvent.MediaDevicesError, handleMediaDeviceError)\n        .off(RoomEvent.EncryptionError, handleEncryptionError);\n    };\n  }, [room, audio, video, screen, onError, onEncryptionError, onMediaDeviceFailure]);\n\n  React.useEffect(() => {\n    if (!room) return;\n\n    if (simulateParticipants) {\n      room.simulateParticipants({\n        participants: {\n          count: simulateParticipants,\n        },\n        publish: {\n          audio: true,\n          useRealTracks: true,\n        },\n      });\n      return;\n    }\n    if (!token) {\n      log.debug('no token yet');\n      return;\n    }\n    if (!serverUrl) {\n      log.warn('no livekit url provided');\n      onError?.(Error('no livekit url provided'));\n      return;\n    }\n    if (connect) {\n      log.debug('connecting');\n      room.connect(serverUrl, token, connectOptions).catch((e) => {\n        log.warn(e);\n        onError?.(e as Error);\n      });\n    } else {\n      log.debug('disconnecting because connect is false');\n      room.disconnect();\n    }\n  }, [\n    connect,\n    token,\n    JSON.stringify(connectOptions),\n    room,\n    onError,\n    serverUrl,\n    simulateParticipants,\n  ]);\n\n  React.useEffect(() => {\n    if (!room) return;\n    const connectionStateChangeListener = (state: ConnectionState) => {\n      switch (state) {\n        case ConnectionState.Disconnected:\n          if (onDisconnected) onDisconnected();\n          break;\n        case ConnectionState.Connected:\n          if (onConnected) onConnected();\n          break;\n\n        default:\n          break;\n      }\n    };\n    room.on(RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    return () => {\n      room.off(RoomEvent.ConnectionStateChanged, connectionStateChangeListener);\n    };\n  }, [token, onConnected, onDisconnected, room]);\n\n  React.useEffect(() => {\n    if (!room) return;\n    return () => {\n      log.info('disconnecting on onmount');\n      room.disconnect();\n    };\n  }, [room]);\n\n  return { room, htmlProps };\n}\n","import type { ParticipantMedia } from '@livekit/components-core';\nimport { observeParticipantMedia } from '@livekit/components-core';\nimport type { TrackPublication, LocalParticipant, Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\n\n/** @public */\nexport interface UseLocalParticipantOptions {\n  /**\n   * The room to use. If not provided, the hook will use the room from the context.\n   */\n  room?: Room;\n}\n\n/**\n * The `useLocalParticipant` hook returns the local participant and the associated state\n * around the participant.\n *\n * @example\n * ```tsx\n * const { localParticipant } = useLocalParticipant();\n * ```\n * @public\n */\nexport function useLocalParticipant(options: UseLocalParticipantOptions = {}) {\n  const room = useEnsureRoom(options.room);\n  const [localParticipant, setLocalParticipant] = React.useState(room.localParticipant);\n  const [isMicrophoneEnabled, setIsMicrophoneEnabled] = React.useState(\n    localParticipant.isMicrophoneEnabled,\n  );\n  const [isCameraEnabled, setIsCameraEnabled] = React.useState(\n    localParticipant.isMicrophoneEnabled,\n  );\n  const [lastMicrophoneError, setLastMicrophoneError] = React.useState(\n    localParticipant.lastMicrophoneError,\n  );\n  const [lastCameraError, setLastCameraError] = React.useState(localParticipant.lastCameraError);\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = React.useState(\n    localParticipant.isMicrophoneEnabled,\n  );\n  const [microphoneTrack, setMicrophoneTrack] = React.useState<TrackPublication | undefined>(\n    undefined,\n  );\n  const [cameraTrack, setCameraTrack] = React.useState<TrackPublication | undefined>(undefined);\n\n  const handleUpdate = (media: ParticipantMedia<LocalParticipant>) => {\n    setIsCameraEnabled(media.isCameraEnabled);\n    setIsMicrophoneEnabled(media.isMicrophoneEnabled);\n    setIsScreenShareEnabled(media.isScreenShareEnabled);\n    setCameraTrack(media.cameraTrack);\n    setMicrophoneTrack(media.microphoneTrack);\n    setLastMicrophoneError(media.participant.lastMicrophoneError);\n    setLastCameraError(media.participant.lastCameraError);\n    setLocalParticipant(media.participant);\n  };\n  React.useEffect(() => {\n    const listener = observeParticipantMedia(room.localParticipant).subscribe(handleUpdate);\n    // TODO also listen to permission and metadata etc. events\n    return () => listener.unsubscribe();\n  }, [room]);\n\n  return {\n    isMicrophoneEnabled,\n    isScreenShareEnabled,\n    isCameraEnabled,\n    microphoneTrack,\n    cameraTrack,\n    lastMicrophoneError,\n    lastCameraError,\n    localParticipant,\n  };\n}\n","import { participantPermissionObserver } from '@livekit/components-core';\nimport type { ParticipantPermission } from '@livekit/protocol';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useLocalParticipantPermissions` hook returns the local participant's permissions.\n *\n * @example\n * ```tsx\n * const { canPublish, canPublishData } = useLocalParticipantPermissions();\n * ```\n * @public\n */\nexport function useLocalParticipantPermissions(): ParticipantPermission | undefined {\n  const room = useRoomContext();\n  const permissionObserver = React.useMemo(\n    () => participantPermissionObserver(room.localParticipant),\n    [room],\n  );\n  const permissions = useObservableState(permissionObserver, room.localParticipant.permissions);\n  return permissions;\n}\n","import { createMediaDeviceObserver, setupDeviceSelector, log } from '@livekit/components-core';\nimport type { LocalAudioTrack, LocalVideoTrack, Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useMaybeRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport interface UseMediaDeviceSelectProps {\n  kind: MediaDeviceKind;\n  room?: Room;\n  track?: LocalAudioTrack | LocalVideoTrack;\n  /**\n   * this will call getUserMedia if the permissions are not yet given to enumerate the devices with device labels.\n   * in some browsers multiple calls to getUserMedia result in multiple permission prompts.\n   * It's generally advised only flip this to true, once a (preview) track has been acquired successfully with the\n   * appropriate permissions.\n   *\n   * @see {@link MediaDeviceMenu}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices | MDN enumerateDevices}\n   */\n  requestPermissions?: boolean;\n  /**\n   * this callback gets called if an error is thrown when failing to select a device and also if a user\n   * denied permissions, eventhough the `requestPermissions` option is set to `true`.\n   * Most commonly this will emit a MediaDeviceError\n   */\n  onError?: (e: Error) => void;\n}\n\n/**\n * The `useMediaDeviceSelect` hook is used to implement the `MediaDeviceSelect` component and\n * returns o.a. the list of devices of a given kind (audioinput or videoinput), the currently active device\n * and a function to set the the active device.\n *\n * @example\n * ```tsx\n * const { devices, activeDeviceId, setActiveMediaDevice } = useMediaDeviceSelect({kind: 'audioinput'});\n * ```\n * @public\n */\nexport function useMediaDeviceSelect({\n  kind,\n  room,\n  track,\n  requestPermissions,\n  onError,\n}: UseMediaDeviceSelectProps) {\n  const roomContext = useMaybeRoomContext();\n  // List of all devices.\n  const deviceObserver = React.useMemo(\n    () => createMediaDeviceObserver(kind, onError, requestPermissions),\n    [kind, requestPermissions, onError],\n  );\n  const devices = useObservableState(deviceObserver, [] as MediaDeviceInfo[]);\n  // Active device management.\n  const [currentDeviceId, setCurrentDeviceId] = React.useState<string>('');\n  const { className, activeDeviceObservable, setActiveMediaDevice } = React.useMemo(\n    () => setupDeviceSelector(kind, room ?? roomContext, track),\n    [kind, room, roomContext, track],\n  );\n\n  React.useEffect(() => {\n    const listener = activeDeviceObservable.subscribe((deviceId) => {\n      log.info('setCurrentDeviceId', deviceId);\n      if (deviceId) setCurrentDeviceId(deviceId);\n    });\n    return () => {\n      listener?.unsubscribe();\n    };\n  }, [activeDeviceObservable]);\n\n  return { devices, className, activeDeviceId: currentDeviceId, setActiveMediaDevice };\n}\n","import * as React from 'react';\nimport { useObservableState } from './internal';\nimport { createMediaDeviceObserver } from '@livekit/components-core';\n\n/**\n * The `useMediaDevices` hook returns the list of media devices of a given kind.\n *\n * @example\n * ```tsx\n * const videoDevices = useMediaDevices({ kind: 'videoinput' });\n * const audioDevices = useMediaDevices({ kind: 'audioinput' });\n * ```\n * @public\n */\nexport function useMediaDevices({\n  kind,\n  onError,\n}: {\n  kind: MediaDeviceKind;\n  onError?: (e: Error) => void;\n}) {\n  const deviceObserver = React.useMemo(\n    () => createMediaDeviceObserver(kind, onError),\n    [kind, onError],\n  );\n  const devices = useObservableState(deviceObserver, [] as MediaDeviceInfo[]);\n  return devices;\n}\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useVisualStableUpdate } from './useVisualStableUpdate';\n\n/**\n * The `usePagination` hook implements simple pagination logic for use with arrays.\n * @example\n * ```tsx\n * const tracks = useTracks();\n * const pagination = usePagination(4, tracks);\n *\n * <TrackLoop tracks={pagination.tracks} />\n * ```\n * @alpha\n */\nexport function usePagination(itemPerPage: number, trackReferences: TrackReferenceOrPlaceholder[]) {\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const totalPageCount = Math.max(Math.ceil(trackReferences.length / itemPerPage), 1);\n  if (currentPage > totalPageCount) {\n    setCurrentPage(totalPageCount);\n  }\n  const lastItemIndex = currentPage * itemPerPage;\n  const firstItemIndex = lastItemIndex - itemPerPage;\n\n  const changePage = (direction: 'next' | 'previous') => {\n    setCurrentPage((state) => {\n      if (direction === 'next') {\n        if (state === totalPageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n\n  const goToPage = (num: number) => {\n    if (num > totalPageCount) {\n      setCurrentPage(totalPageCount);\n    } else if (num < 1) {\n      setCurrentPage(1);\n    } else {\n      setCurrentPage(num);\n    }\n  };\n\n  const updatedTrackReferences = useVisualStableUpdate(trackReferences, itemPerPage);\n\n  const tracksOnPage = updatedTrackReferences.slice(firstItemIndex, lastItemIndex);\n\n  return {\n    totalPageCount,\n    nextPage: () => changePage('next'),\n    prevPage: () => changePage('previous'),\n    setPage: goToPage,\n    firstItemIndex,\n    lastItemIndex,\n    tracks: tracksOnPage,\n    currentPage,\n  };\n}\n\nexport default usePagination;\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { log, sortTrackReferences, updatePages } from '@livekit/components-core';\nimport * as React from 'react';\n\n/** @public */\nexport interface UseVisualStableUpdateOptions {\n  /** Overwrites the default sort function. */\n  customSortFunction?: (\n    trackReferences: TrackReferenceOrPlaceholder[],\n  ) => TrackReferenceOrPlaceholder[];\n}\n\n/**\n * The `useVisualStableUpdate` hook is used to prevent visually jarring jumps and shifts of elements\n * in an array. The algorithm only starts to update when there are more items than visually fit\n * on a page. If this is the case, it will make sure that speaking participants move to the first\n * page and are always visible.\n * @remarks\n * Updating the array can occur because attendees leave or join a room, or because they mute/unmute\n * or start speaking.\n * The hook is used for the `GridLayout` and `CarouselLayout` components.\n *\n * @example\n * ```tsx\n * const trackRefs = useTracks();\n * const updatedTrackRefs = useVisualStableUpdate(trackRefs, itemPerPage);\n * ```\n * @public\n */\nexport function useVisualStableUpdate(\n  /** `TrackReference`s to display in the grid.  */\n  trackReferences: TrackReferenceOrPlaceholder[],\n  maxItemsOnPage: number,\n  options: UseVisualStableUpdateOptions = {},\n): TrackReferenceOrPlaceholder[] {\n  const lastTrackRefs = React.useRef<TrackReferenceOrPlaceholder[]>([]);\n  const lastMaxItemsOnPage = React.useRef<number>(-1);\n  const layoutChanged = maxItemsOnPage !== lastMaxItemsOnPage.current;\n\n  const sortedTrackRefs =\n    typeof options.customSortFunction === 'function'\n      ? options.customSortFunction(trackReferences)\n      : sortTrackReferences(trackReferences);\n\n  let updatedTrackRefs: TrackReferenceOrPlaceholder[] = [...sortedTrackRefs];\n  if (layoutChanged === false) {\n    try {\n      updatedTrackRefs = updatePages(lastTrackRefs.current, sortedTrackRefs, maxItemsOnPage);\n    } catch (error) {\n      log.error('Error while running updatePages(): ', error);\n    }\n  }\n\n  // Save info for to compare against in the next update cycle.\n  if (layoutChanged) {\n    lastTrackRefs.current = sortedTrackRefs;\n  } else {\n    lastTrackRefs.current = updatedTrackRefs;\n  }\n  lastMaxItemsOnPage.current = maxItemsOnPage;\n\n  return updatedTrackRefs;\n}\n","import { participantInfoObserver } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useParticipantInfo` hook returns the identity, name, and metadata of a given participant.\n * It requires a `Participant` object passed as property or via the `ParticipantContext`.\n *\n * @example\n * ```tsx\n * const { identity, name, metadata } = useParticipantInfo({ participant });\n * ```\n * @public\n */\nexport interface UseParticipantInfoOptions {\n  participant?: Participant;\n}\n\n/** @public */\nexport function useParticipantInfo(props: UseParticipantInfoOptions = {}) {\n  const p = useEnsureParticipant(props.participant);\n  const infoObserver = React.useMemo(() => participantInfoObserver(p), [p]);\n  const { identity, name, metadata } = useObservableState(infoObserver, {\n    name: p.name,\n    identity: p.identity,\n    metadata: p.metadata,\n  });\n\n  return { identity, name, metadata };\n}\n","import { participantPermissionObserver } from '@livekit/components-core';\nimport type { ParticipantPermission } from '@livekit/protocol';\nimport type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../context';\nimport { useObservableState } from './internal/useObservableState';\n\n/**\n * The `useParticipantPermissions` hook returns the permissions of a given participant.\n *\n * @example\n * ```tsx\n * const permissions = useParticipantPermissions({ participant });\n * ```\n * @public\n */\nexport interface UseParticipantPermissionsOptions {\n  participant?: Participant;\n}\n\n/** @public */\nexport function useParticipantPermissions(\n  options: UseParticipantPermissionsOptions = {},\n): ParticipantPermission | undefined {\n  const p = useEnsureParticipant(options.participant);\n  const permissionObserver = React.useMemo(() => participantPermissionObserver(p), [p]);\n  const permissions = useObservableState(permissionObserver, p.permissions);\n  return permissions;\n}\n","import type { ParticipantClickEvent, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { setupParticipantTile } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useEnsureTrackRef } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport { useFacingMode } from './useFacingMode';\nimport { useIsMuted } from './useIsMuted';\nimport { useIsSpeaking } from './useIsSpeaking';\nimport { Track } from 'livekit-client';\n\n/** @public */\nexport interface UseParticipantTileProps<T extends HTMLElement> extends React.HTMLAttributes<T> {\n  /** The track reference to display. */\n  trackRef?: TrackReferenceOrPlaceholder;\n  disableSpeakingIndicator?: boolean;\n  onParticipantClick?: (event: ParticipantClickEvent) => void;\n  htmlProps: React.HTMLAttributes<T>;\n}\n\n/**\n * The `useParticipantTile` hook is used to implement the `ParticipantTile` and returns the props needed to render the tile.\n * @remarks\n * The returned props include many data attributes that are useful for CSS styling purposes because they\n * indicate the state of the participant and the track.\n * For example: `data-lk-audio-muted`, `data-lk-video-muted`, `data-lk-speaking`, `data-lk-local-participant`, `data-lk-source`, `data-lk-facing-mode`.\n * @public\n */\nexport function useParticipantTile<T extends HTMLElement>({\n  trackRef,\n  onParticipantClick,\n  disableSpeakingIndicator,\n  htmlProps,\n}: UseParticipantTileProps<T>) {\n  const trackReference = useEnsureTrackRef(trackRef);\n\n  const mergedProps = React.useMemo(() => {\n    const { className } = setupParticipantTile();\n    return mergeProps(htmlProps, {\n      className,\n      onClick: (event: React.MouseEvent<T, MouseEvent>) => {\n        htmlProps.onClick?.(event);\n        if (typeof onParticipantClick === 'function') {\n          const track =\n            trackReference.publication ??\n            trackReference.participant.getTrackPublication(trackReference.source);\n          onParticipantClick({ participant: trackReference.participant, track });\n        }\n      },\n    });\n  }, [\n    htmlProps,\n    onParticipantClick,\n    trackReference.publication,\n    trackReference.source,\n    trackReference.participant,\n  ]);\n\n  const micTrack = trackReference.participant.getTrackPublication(Track.Source.Microphone);\n  const micRef = React.useMemo(() => {\n    return {\n      participant: trackReference.participant,\n      source: Track.Source.Microphone,\n      publication: micTrack,\n    };\n  }, [micTrack, trackReference.participant]);\n  const isVideoMuted = useIsMuted(trackReference);\n  const isAudioMuted = useIsMuted(micRef);\n  const isSpeaking = useIsSpeaking(trackReference.participant);\n  const facingMode = useFacingMode(trackReference);\n  return {\n    elementProps: {\n      'data-lk-audio-muted': isAudioMuted,\n      'data-lk-video-muted': isVideoMuted,\n      'data-lk-speaking': disableSpeakingIndicator === true ? false : isSpeaking,\n      'data-lk-local-participant': trackReference.participant.isLocal,\n      'data-lk-source': trackReference.source,\n      'data-lk-facing-mode': facingMode,\n      ...mergedProps,\n    } as React.HTMLAttributes<T>,\n  };\n}\n","import { connectedParticipantsObserver } from '@livekit/components-core';\nimport type { RoomEvent, RemoteParticipant, Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\n\n/** @public */\nexport interface UseRemoteParticipantsOptions {\n  /**\n   * To optimize performance, you can use the `updateOnlyOn` property to decide on what RoomEvents the hook updates.\n   * By default it updates on all relevant RoomEvents to keep the returned participants array up to date.\n   * The minimal set of non-overwriteable `RoomEvents` is: `[RoomEvent.ParticipantConnected, RoomEvent.ParticipantDisconnected, RoomEvent.ConnectionStateChanged]`\n   */\n  updateOnlyOn?: RoomEvent[];\n  /**\n   * The room to use. If not provided, the hook will use the room from the context.\n   */\n  room?: Room;\n}\n\n/**\n * The `useRemoteParticipants` hook returns all remote participants (without the local) of the current room.\n * @remarks\n * To optimize performance, you can use the `updateOnlyOn` property to decide on what `RoomEvents` the hook updates.\n *\n * @example\n * ```tsx\n * const participants = useRemoteParticipants();\n * <ParticipantLoop participants={participants}>\n *  <ParticipantName />\n * </ParticipantLoop>\n * ```\n * @public\n */\nexport function useRemoteParticipants(options: UseRemoteParticipantsOptions = {}) {\n  const room = useEnsureRoom(options.room);\n  const [participants, setParticipants] = React.useState<RemoteParticipant[]>([]);\n\n  React.useEffect(() => {\n    const listener = connectedParticipantsObserver(room, {\n      additionalRoomEvents: options.updateOnlyOn,\n    }).subscribe(setParticipants);\n    return () => listener.unsubscribe();\n  }, [room, JSON.stringify(options.updateOnlyOn)]);\n  return participants;\n}\n","import type { Room, RoomEvent } from 'livekit-client';\nimport { useLocalParticipant } from './useLocalParticipant';\nimport { useRemoteParticipants } from './useRemoteParticipants';\nimport * as React from 'react';\n\n/** @public */\nexport interface UseParticipantsOptions {\n  /**\n   * To optimize performance, you can use the `updateOnlyOn` property to decide on what RoomEvents the hook updates.\n   * By default it updates on all relevant RoomEvents to keep the returned participants array up to date.\n   * The minimal set of non-overwriteable `RoomEvents` is: `[RoomEvent.ParticipantConnected, RoomEvent.ParticipantDisconnected, RoomEvent.ConnectionStateChanged]`\n   */\n  updateOnlyOn?: RoomEvent[];\n  /**\n   * The room to use. If not provided, the hook will use the room from the context.\n   */\n  room?: Room;\n}\n\n/**\n * The `useParticipants` hook returns all participants (local and remote) of the current room.\n * @remarks\n * To optimize performance, you can use the `updateOnlyOn` property to decide on what `RoomEvents` the hook updates.\n *\n * @example\n * ```tsx\n * const participants = useParticipants();\n * <ParticipantLoop participants={participants}>\n *  <ParticipantName />\n * </ParticipantLoop>\n * ```\n * @public\n */\nexport function useParticipants(options: UseParticipantsOptions = {}) {\n  const remoteParticipants = useRemoteParticipants(options);\n  const { localParticipant } = useLocalParticipant(options);\n\n  return React.useMemo(\n    () => [localParticipant, ...remoteParticipants],\n    [localParticipant, remoteParticipants],\n  );\n}\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { LayoutContextType } from '../context';\nimport { useEnsureLayoutContext } from '../context';\n\n/**\n * The `usePinnedTracks` hook returns a array of the pinned tracks of the current room.\n * @remarks\n * To function properly, this hook must be called within a `LayoutContext`.\n * @example\n * ```tsx\n * const pinnedTracks = usePinnedTracks();\n * ```\n * @public\n */\nexport function usePinnedTracks(layoutContext?: LayoutContextType): TrackReferenceOrPlaceholder[] {\n  layoutContext = useEnsureLayoutContext(layoutContext);\n  return React.useMemo(() => {\n    if (layoutContext?.pin.state !== undefined && layoutContext.pin.state.length >= 1) {\n      return layoutContext.pin.state;\n    }\n    return [];\n  }, [layoutContext.pin.state]);\n}\n","import {\n  type ParticipantIdentifier,\n  connectedParticipantObserver,\n  participantByIdentifierObserver,\n} from '@livekit/components-core';\nimport type { ParticipantEvent, RemoteParticipant } from 'livekit-client';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\n\n/** @public */\nexport interface UseRemoteParticipantOptions {\n  /**\n   * To optimize performance, you can use the `updateOnlyOn` property to decide on what `ParticipantEvents` the hook updates.\n   * By default it updates on all relevant ParticipantEvents to keep the returned participant up to date.\n   */\n  updateOnlyOn?: ParticipantEvent[];\n}\n\n/**\n * The `useRemoteParticipant` hook returns the first RemoteParticipant by either identity and/or based on the participant kind.\n * @remarks\n * To optimize performance, you can use the `updateOnlyOn` property to decide on what `ParticipantEvents` the hook updates.\n *\n * @example\n * ```tsx\n * const participant = useRemoteParticipant({kind: ParticipantKind.Agent, identity: 'myAgent'});\n * ```\n * @public\n */\nexport function useRemoteParticipant(\n  identifier: ParticipantIdentifier,\n  options?: UseRemoteParticipantOptions,\n): RemoteParticipant | undefined;\n/**\n * The `useRemoteParticipant` hook returns the first RemoteParticipant by either identity or based on the participant kind.\n * @remarks\n * To optimize performance, you can use the `updateOnlyOn` property to decide on what `ParticipantEvents` the hook updates.\n *\n * @example\n * ```tsx\n * const participant = useRemoteParticipant('Russ');\n * ```\n * @public\n */\nexport function useRemoteParticipant(\n  identity: string,\n  options?: UseRemoteParticipantOptions,\n): RemoteParticipant | undefined;\nexport function useRemoteParticipant(\n  identityOrIdentifier: string | ParticipantIdentifier,\n  options: UseRemoteParticipantOptions = {},\n): RemoteParticipant | undefined {\n  const room = useRoomContext();\n  const [updateOnlyOn] = React.useState(options.updateOnlyOn);\n\n  const observable = React.useMemo(() => {\n    if (typeof identityOrIdentifier === 'string') {\n      return connectedParticipantObserver(room, identityOrIdentifier, {\n        additionalEvents: updateOnlyOn,\n      });\n    } else {\n      return participantByIdentifierObserver(room, identityOrIdentifier, {\n        additionalEvents: updateOnlyOn,\n      });\n    }\n  }, [room, JSON.stringify(identityOrIdentifier), updateOnlyOn]);\n\n  // Using `wrapperParticipant` to ensure a new object reference,\n  // triggering a re-render when the participant events fire.\n  const [participantWrapper, setParticipantWrapper] = React.useState({\n    p: undefined as RemoteParticipant | undefined,\n  });\n  React.useEffect(() => {\n    const listener = observable.subscribe((p) => setParticipantWrapper({ p }));\n    return () => listener.unsubscribe();\n  }, [observable]);\n\n  return participantWrapper.p;\n}\n","import { roomInfoObserver } from '@livekit/components-core';\nimport type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useRoomInfo` hook returns the name and metadata of the given `Room`.\n * @remarks\n * Needs to be called inside a `RoomContext` or by passing a `Room` instance.\n *\n * @example\n * ```tsx\n * const { name, metadata } = useRoomInfo();\n * ```\n * @public\n */\nexport interface UseRoomInfoOptions {\n  room?: Room;\n}\n\n/** @public */\nexport function useRoomInfo(options: UseRoomInfoOptions = {}) {\n  const room = useEnsureRoom(options.room);\n  const infoObserver = React.useMemo(() => roomInfoObserver(room), [room]);\n  const { name, metadata } = useObservableState(infoObserver, {\n    name: room.name,\n    metadata: room.metadata,\n  });\n\n  return { name, metadata };\n}\n","import { sortParticipants } from '@livekit/components-core';\nimport type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { useSpeakingParticipants } from './useSpeakingParticipants';\n\n/**\n * The `useSortedParticipants` hook returns the participants sorted by importance.\n * @public\n */\nexport function useSortedParticipants(participants: Array<Participant>) {\n  const [sortedParticipants, setSortedParticipants] = React.useState(\n    sortParticipants(participants),\n  );\n  const activeSpeakers = useSpeakingParticipants();\n\n  React.useEffect(() => {\n    setSortedParticipants(sortParticipants(participants));\n  }, [activeSpeakers, participants]);\n  return sortedParticipants;\n}\n","import { activeSpeakerObserver } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * The `useSpeakingParticipants` hook returns the only the active speakers of all participants.\n *\n * @example\n * ```tsx\n * const activeSpeakers = useSpeakingParticipants();\n * ```\n * @public\n */\nexport function useSpeakingParticipants() {\n  const room = useRoomContext();\n  const speakerObserver = React.useMemo(() => activeSpeakerObserver(room), [room]);\n  const activeSpeakers = useObservableState(speakerObserver, room.activeSpeakers);\n  return activeSpeakers;\n}\n","import { setupStartAudio } from '@livekit/components-core';\nimport type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport { useObservableState } from './internal';\n\n/** @alpha */\nexport interface UseStartAudioProps {\n  room?: Room;\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * In many browsers to start audio playback, the user must perform a user-initiated event such as clicking a button.\n * The `useStatAudio` hook returns an object with a boolean `canPlayAudio` flag\n * that indicates whether audio playback is allowed in the current context,\n * as well as a `startAudio` function that can be called in a button `onClick` callback to start audio playback in the current context.\n *\n * @see Autoplay policy on MDN web docs for more info: {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Best_practices#autoplay_policy}\n * @alpha\n */\nexport function useStartAudio({ room, props }: UseStartAudioProps) {\n  const roomEnsured = useEnsureRoom(room);\n  const { className, roomAudioPlaybackAllowedObservable, handleStartAudioPlayback } = React.useMemo(\n    () => setupStartAudio(),\n    [],\n  );\n  const observable = React.useMemo(\n    () => roomAudioPlaybackAllowedObservable(roomEnsured),\n    [roomEnsured, roomAudioPlaybackAllowedObservable],\n  );\n  const { canPlayAudio } = useObservableState(observable, {\n    canPlayAudio: roomEnsured.canPlaybackAudio,\n  });\n\n  const mergedProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n        onClick: () => {\n          handleStartAudioPlayback(roomEnsured);\n        },\n        style: { display: canPlayAudio ? 'none' : 'block' },\n      }),\n    [props, className, canPlayAudio, handleStartAudioPlayback, roomEnsured],\n  );\n\n  return { mergedProps, canPlayAudio };\n}\n","import { setupStartVideo } from '@livekit/components-core';\nimport type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport { useObservableState } from './internal';\n\n/** @alpha */\nexport interface UseStartVideoProps {\n  room?: Room;\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * In some browsers to start video playback in low power mode, the user must perform a user-initiated event such as clicking a button.\n * The `useStartVideo` hook returns an object with a boolean `canPlayVideo` flag\n * that indicates whether video playback is allowed in the current context,\n * as well as a `startVideo` function that can be called in a button `onClick` callback to start video playback in the current context.\n *\n * @alpha\n */\nexport function useStartVideo({ room, props }: UseStartVideoProps) {\n  const roomEnsured = useEnsureRoom(room);\n  const { className, roomVideoPlaybackAllowedObservable, handleStartVideoPlayback } = React.useMemo(\n    () => setupStartVideo(),\n    [],\n  );\n  const observable = React.useMemo(\n    () => roomVideoPlaybackAllowedObservable(roomEnsured),\n    [roomEnsured, roomVideoPlaybackAllowedObservable],\n  );\n  const { canPlayVideo } = useObservableState(observable, {\n    canPlayVideo: roomEnsured.canPlaybackVideo,\n  });\n\n  const mergedProps = React.useMemo(\n    () =>\n      mergeProps(props, {\n        className,\n        onClick: () => {\n          handleStartVideoPlayback(roomEnsured);\n        },\n        style: { display: canPlayVideo ? 'none' : 'block' },\n      }),\n    [props, className, canPlayVideo, handleStartVideoPlayback, roomEnsured],\n  );\n\n  return { mergedProps, canPlayVideo };\n}\n","import * as React from 'react';\n\n/**\n * @alpha\n */\nexport type UseSwipeOptions = {\n  minSwipeDistance?: number;\n  onLeftSwipe?: () => void;\n  onRightSwipe?: () => void;\n};\n\n/**\n * Simple implementation to detect horizontal swipe actions.\n * Accepts callbacks for on right and left swipes.\n * @example\n * ```tsx\n *  <div\n      onTouchStart={onTouchStart}\n      onTouchMove={onTouchMove}\n      onTouchEnd={onTouchEnd}\n    >\n * ```\n * @alpha\n */\nexport function useSwipe(element: React.RefObject<HTMLElement>, options: UseSwipeOptions = {}) {\n  const touchStart = React.useRef<number | null>(null);\n  const touchEnd = React.useRef<number | null>(null);\n\n  // The required distance between touchStart and touchEnd to be detected as a swipe.\n  const minSwipeDistance = options.minSwipeDistance ?? 50;\n\n  const onTouchStart = (event: TouchEvent) => {\n    touchEnd.current = null; // Otherwise the swipe is fired even with usual touch events.\n    touchStart.current = event.targetTouches[0].clientX;\n  };\n\n  const onTouchMove = (event: TouchEvent) => {\n    touchEnd.current = event.targetTouches[0].clientX;\n  };\n\n  const onTouchEnd = React.useCallback(() => {\n    if (!touchStart.current || !touchEnd.current) {\n      return;\n    }\n    const distance = touchStart.current - touchEnd.current;\n    const isLeftSwipe = distance > minSwipeDistance;\n    const isRightSwipe = distance < -minSwipeDistance;\n\n    if (isLeftSwipe && options.onLeftSwipe) options.onLeftSwipe();\n    if (isRightSwipe && options.onRightSwipe) options.onRightSwipe();\n  }, [minSwipeDistance, options]);\n\n  React.useEffect(() => {\n    const elementCopy = element.current;\n    if (elementCopy) {\n      elementCopy.addEventListener('touchstart', onTouchStart, { passive: true });\n      elementCopy.addEventListener('touchmove', onTouchMove, { passive: true });\n      elementCopy.addEventListener('touchend', onTouchEnd, { passive: true });\n    }\n    return () => {\n      if (elementCopy) {\n        elementCopy.removeEventListener('touchstart', onTouchStart);\n        elementCopy.removeEventListener('touchmove', onTouchMove);\n        elementCopy.removeEventListener('touchend', onTouchEnd);\n      }\n    };\n  }, [element, onTouchEnd]);\n}\n","import { setupChatToggle } from '@livekit/components-core';\nimport { useLayoutContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport * as React from 'react';\n\n/** @public */\nexport interface UseChatToggleProps {\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * The `useChatToggle` hook provides state and functions for toggling the chat window.\n * @remarks\n * Depends on the `LayoutContext` to work properly.\n * @see {@link ChatToggle}, {@link Chat}\n * @public\n */\nexport function useChatToggle({ props }: UseChatToggleProps) {\n  const { dispatch, state } = useLayoutContext().widget;\n  const { className } = React.useMemo(() => setupChatToggle(), []);\n\n  const mergedProps = React.useMemo(() => {\n    return mergeProps(props, {\n      className,\n      onClick: () => {\n        if (dispatch) dispatch({ msg: 'toggle_chat' });\n      },\n      'aria-pressed': state?.showChat ? 'true' : 'false',\n      'data-lk-unread-msgs': state\n        ? state.unreadMessages < 10\n          ? state.unreadMessages.toFixed(0)\n          : '9+'\n        : '0',\n    });\n  }, [props, className, dispatch, state]);\n\n  return { mergedProps };\n}\n","import { log } from '@livekit/components-core';\nimport * as React from 'react';\n\n/** @public */\nexport interface UserInfo {\n  identity?: string;\n  name?: string;\n  metadata?: string;\n}\n\n/** @public */\nexport interface UseTokenOptions {\n  userInfo?: UserInfo;\n}\n\n/**\n * The `useToken` hook fetches a token from the given token endpoint with the given user info.\n *\n * @example\n * ```tsx\n * const token = useToken(<token-endpoint>, roomName, { userInfo: { identity, name }});\n * ```\n * @public */\nexport function useToken(\n  tokenEndpoint: string | undefined,\n  roomName: string,\n  options: UseTokenOptions = {},\n) {\n  const [token, setToken] = React.useState<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    if (tokenEndpoint === undefined) {\n      throw Error('token endpoint needs to be defined');\n    }\n    if (options.userInfo?.identity === undefined) {\n      return;\n    }\n    const tokenFetcher = async () => {\n      log.debug('fetching token');\n      const params = new URLSearchParams({ ...options.userInfo, roomName });\n      const res = await fetch(`${tokenEndpoint}?${params.toString()}`);\n      if (!res.ok) {\n        log.error(\n          `Could not fetch token. Server responded with status ${res.status}: ${res.statusText}`,\n        );\n        return;\n      }\n      const { accessToken } = await res.json();\n      setToken(accessToken);\n    };\n    tokenFetcher();\n  }, [tokenEndpoint, roomName, JSON.stringify(options)]);\n  return token;\n}\n","import {\n  type TrackReferenceOrPlaceholder,\n  setupTrackMutedIndicator,\n  getTrackReferenceId,\n} from '@livekit/components-core';\nimport * as React from 'react';\nimport { useEnsureTrackRef } from '../context';\nimport { useObservableState } from './internal';\n\ninterface TrackMutedIndicatorReturnType {\n  isMuted: boolean;\n  className: string;\n}\n\n/**\n * The `useTrackMutedIndicator` hook is used to implement the `TrackMutedIndicator` component\n * and returns the muted state of the given track.\n *\n * @example\n * ```tsx\n * const { isMuted } = useTrackMutedIndicator(trackRef);\n * ```\n * @public\n */\nexport function useTrackMutedIndicator(\n  trackRef?: TrackReferenceOrPlaceholder,\n): TrackMutedIndicatorReturnType {\n  const trackReference = useEnsureTrackRef(trackRef);\n\n  const { className, mediaMutedObserver } = React.useMemo(\n    () => setupTrackMutedIndicator(trackReference),\n    [getTrackReferenceId(trackReference)],\n  );\n\n  const isMuted = useObservableState(\n    mediaMutedObserver,\n    !!(\n      trackReference.publication?.isMuted ||\n      trackReference.participant.getTrackPublication(trackReference.source)?.isMuted\n    ),\n  );\n\n  return { isMuted, className };\n}\n","import type { ToggleSource } from '@livekit/components-core';\nimport { setupMediaToggle, setupManualToggle, log } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { TrackToggleProps } from '../components';\nimport { useMaybeRoomContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport { useObservableState } from './internal';\n\n/** @public */\nexport interface UseTrackToggleProps<T extends ToggleSource>\n  extends Omit<TrackToggleProps<T>, 'showIcon'> {}\n\n/**\n * The `useTrackToggle` hook is used to implement the `TrackToggle` component and returns state\n * and functionality of the given track.\n *\n * @example\n * ```tsx\n * const { buttonProps, enabled } = useTrackToggle(trackRef);\n * return <button {...buttonProps}>{enabled ? 'disable' : 'enable'}</button>;\n * ```\n * @public\n */\nexport function useTrackToggle<T extends ToggleSource>({\n  source,\n  onChange,\n  initialState,\n  captureOptions,\n  publishOptions,\n  onDeviceError,\n  ...rest\n}: UseTrackToggleProps<T>) {\n  const room = useMaybeRoomContext();\n  const track = room?.localParticipant?.getTrackPublication(source);\n  /** `true` if a user interaction such as a click on the TrackToggle button has occurred. */\n  const userInteractionRef = React.useRef(false);\n\n  const { toggle, className, pendingObserver, enabledObserver } = React.useMemo(\n    () =>\n      room\n        ? setupMediaToggle<T>(source, room, captureOptions, publishOptions, onDeviceError)\n        : setupManualToggle(),\n    [room, source, JSON.stringify(captureOptions), publishOptions],\n  );\n\n  const pending = useObservableState(pendingObserver, false);\n  const enabled = useObservableState(enabledObserver, initialState ?? !!track?.isEnabled);\n\n  React.useEffect(() => {\n    onChange?.(enabled, userInteractionRef.current);\n    userInteractionRef.current = false;\n  }, [enabled, onChange]);\n\n  React.useEffect(() => {\n    if (initialState !== undefined) {\n      log.debug('forcing initial toggle state', source, initialState);\n      toggle(initialState);\n    }\n    // only execute once at the beginning\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const newProps = React.useMemo(() => mergeProps(rest, { className }), [rest, className]);\n\n  const clickHandler: React.MouseEventHandler<HTMLButtonElement> = React.useCallback(\n    (evt) => {\n      userInteractionRef.current = true;\n      toggle().finally(() => (userInteractionRef.current = false));\n      rest.onClick?.(evt);\n    },\n    [rest, toggle],\n  );\n\n  return {\n    toggle,\n    enabled,\n    pending,\n    track,\n    buttonProps: {\n      ...newProps,\n      'aria-pressed': enabled,\n      'data-lk-source': source,\n      'data-lk-enabled': enabled,\n      disabled: pending,\n      onClick: clickHandler,\n    } as React.ButtonHTMLAttributes<HTMLButtonElement>,\n  };\n}\n","import type {\n  SourcesArray,\n  TrackReference,\n  TrackReferenceOrPlaceholder,\n  TrackSourceWithOptions,\n  TrackReferencePlaceholder,\n} from '@livekit/components-core';\nimport {\n  isSourcesWithOptions,\n  isSourceWitOptions,\n  log,\n  trackReferencesObservable,\n} from '@livekit/components-core';\nimport type { Participant, Room, RoomEvent } from 'livekit-client';\nimport { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useEnsureRoom } from '../context';\n\n/** @public */\nexport type UseTracksOptions = {\n  updateOnlyOn?: RoomEvent[];\n  onlySubscribed?: boolean;\n  room?: Room;\n};\n\n/** @public */\nexport type UseTracksHookReturnType<T> = T extends Track.Source[]\n  ? TrackReference[]\n  : T extends TrackSourceWithOptions[]\n    ? TrackReferenceOrPlaceholder[]\n    : never;\n\n/**\n * The `useTracks` hook returns an array of `TrackReference` or `TrackReferenceOrPlaceholder` depending on the provided `sources` property.\n * If only subscribed tracks are desired, set the `onlySubscribed` property to `true`.\n * @example\n * ```ts\n * // Return all camera track publications.\n * const trackReferences: TrackReference[] = useTracks([Track.Source.Camera])\n * ```\n * @example\n * ```ts\n * // Return all subscribed camera tracks as well as placeholders for\n * // participants without a camera subscription.\n * const trackReferencesWithPlaceholders: TrackReferenceOrPlaceholder[] = useTracks([{source: Track.Source.Camera, withPlaceholder: true}])\n * ```\n * @public\n */\nexport function useTracks<T extends SourcesArray = Track.Source[]>(\n  sources: T = [\n    Track.Source.Camera,\n    Track.Source.Microphone,\n    Track.Source.ScreenShare,\n    Track.Source.ScreenShareAudio,\n    Track.Source.Unknown,\n  ] as T,\n  options: UseTracksOptions = {},\n): UseTracksHookReturnType<T> {\n  const room = useEnsureRoom(options.room);\n  const [trackReferences, setTrackReferences] = React.useState<TrackReference[]>([]);\n  const [participants, setParticipants] = React.useState<Participant[]>([]);\n\n  const sources_ = React.useMemo(() => {\n    return sources.map((s) => (isSourceWitOptions(s) ? s.source : s));\n  }, [JSON.stringify(sources)]);\n\n  React.useEffect(() => {\n    const subscription = trackReferencesObservable(room, sources_, {\n      additionalRoomEvents: options.updateOnlyOn,\n      onlySubscribed: options.onlySubscribed,\n    }).subscribe(({ trackReferences, participants }) => {\n      log.debug('setting track bundles', trackReferences, participants);\n      setTrackReferences(trackReferences);\n      setParticipants(participants);\n    });\n    return () => subscription.unsubscribe();\n  }, [\n    room,\n    JSON.stringify(options.onlySubscribed),\n    JSON.stringify(options.updateOnlyOn),\n    JSON.stringify(sources),\n  ]);\n\n  const maybeTrackReferences = React.useMemo(() => {\n    if (isSourcesWithOptions(sources)) {\n      const requirePlaceholder = requiredPlaceholders(sources, participants);\n      const trackReferencesWithPlaceholders: TrackReferenceOrPlaceholder[] =\n        Array.from(trackReferences);\n      participants.forEach((participant) => {\n        if (requirePlaceholder.has(participant.identity)) {\n          const sourcesToAddPlaceholder = requirePlaceholder.get(participant.identity) ?? [];\n          sourcesToAddPlaceholder.forEach((placeholderSource) => {\n            if (\n              trackReferences.find(\n                ({ participant: p, publication }) =>\n                  participant.identity === p.identity && publication.source === placeholderSource,\n              )\n            ) {\n              return;\n            }\n            log.debug(\n              `Add ${placeholderSource} placeholder for participant ${participant.identity}.`,\n            );\n            const placeholder: TrackReferencePlaceholder = {\n              participant,\n              source: placeholderSource,\n            };\n            trackReferencesWithPlaceholders.push(placeholder);\n          });\n        }\n      });\n      return trackReferencesWithPlaceholders;\n    } else {\n      return trackReferences;\n    }\n  }, [trackReferences, participants, sources]);\n\n  return maybeTrackReferences as UseTracksHookReturnType<T>;\n}\n\nfunction difference<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n  const _difference = new Set(setA);\n  for (const elem of setB) {\n    _difference.delete(elem);\n  }\n  return _difference;\n}\n\nexport function requiredPlaceholders<T extends SourcesArray>(\n  sources: T,\n  participants: Participant[],\n): Map<Participant['identity'], Track.Source[]> {\n  const placeholderMap = new Map<Participant['identity'], Track.Source[]>();\n  if (isSourcesWithOptions(sources)) {\n    const sourcesThatNeedPlaceholder = sources\n      .filter((sourceWithOption) => sourceWithOption.withPlaceholder)\n      .map((sourceWithOption) => sourceWithOption.source);\n\n    participants.forEach((participant) => {\n      const sourcesOfSubscribedTracks = participant\n        .getTrackPublications()\n        .map((pub) => pub.track?.source)\n        .filter((trackSource): trackSource is Track.Source => trackSource !== undefined);\n      const placeholderNeededForThisParticipant = Array.from(\n        difference(new Set(sourcesThatNeedPlaceholder), new Set(sourcesOfSubscribedTracks)),\n      );\n      // If the participant needs placeholder add it to the placeholder map.\n      if (placeholderNeededForThisParticipant.length > 0) {\n        placeholderMap.set(participant.identity, placeholderNeededForThisParticipant);\n      }\n    });\n  }\n  return placeholderMap;\n}\n","import type { TrackReferenceOrPlaceholder, TrackSource } from '@livekit/components-core';\nimport { setupMediaTrack, getTrackByIdentifier } from '@livekit/components-core';\nimport * as React from 'react';\nimport { Track } from 'livekit-client';\n\n/**\n * @internal\n */\nexport function useTrackRefBySourceOrName(\n  source: TrackSource<Track.Source>,\n): TrackReferenceOrPlaceholder {\n  const [publication, setPublication] = React.useState(getTrackByIdentifier(source));\n\n  const { trackObserver } = React.useMemo(() => {\n    return setupMediaTrack(source);\n  }, [source.participant.sid ?? source.participant.identity, source.source]);\n\n  React.useEffect(() => {\n    const subscription = trackObserver.subscribe((publication) => {\n      setPublication(publication);\n    });\n    return () => subscription?.unsubscribe();\n  }, [trackObserver]);\n\n  return {\n    participant: source.participant,\n    source: source.source ?? Track.Source.Unknown,\n    publication,\n  };\n}\n","import type { Participant } from 'livekit-client';\nimport { useEnsureParticipant } from '../context';\nimport { useTrackRefBySourceOrName } from './useTrackRefBySourceOrName';\n\n/**\n * This function `useTrackByName` allows you to access a track by referencing its track name.\n * Inside the function, it ensures that the a valid `participant` reference is available by checking\n * for both a passed participant argument and, if not available, a valid participant context.\n *\n * @public\n */\nexport function useTrackByName(name: string, participant?: Participant) {\n  const p = useEnsureParticipant(participant);\n  return useTrackRefBySourceOrName({ name, participant: p });\n}\n","import * as React from 'react';\nimport type { ChatOptions, ReceivedChatMessage } from '@livekit/components-core';\nimport { setupChat } from '@livekit/components-core';\nimport { ConnectionState } from 'livekit-client';\nimport { useRoomContext } from '../context';\nimport { useObservableState } from './internal/useObservableState';\nimport { useConnectionState } from './useConnectionStatus';\n\n/**\n * The `useChat` hook provides chat functionality for a LiveKit room.\n * It returns a simple `send` function to send chat messages and an array of `chatMessages` to hold received messages.\n * It also returns a `update` function that allows you to implement message-edit functionality.\n * @remarks\n * It is possible to pass configurations for custom message encoding and decoding and non-default topics on which to send the messages.\n * @public\n */\nexport function useChat(options?: ChatOptions) {\n  const room = useRoomContext();\n  const connectionState = useConnectionState(room);\n  const isDisconnected = React.useMemo(\n    () => connectionState === ConnectionState.Disconnected,\n    [connectionState],\n  ); // used to reset the messages on room disconnect\n  const setup = React.useMemo<ReturnType<typeof setupChat>>(\n    () => setupChat(room, options),\n    [room, options, isDisconnected],\n  );\n  const isSending = useObservableState(setup.isSendingObservable, false);\n  const chatMessages = useObservableState<ReceivedChatMessage[]>(setup.messageObservable, []);\n\n  return { send: setup.send, update: setup.update, chatMessages, isSending };\n}\n","import type { LocalUserChoices } from '@livekit/components-core';\nimport { loadUserChoices, saveUserChoices } from '@livekit/components-core';\nimport * as React from 'react';\n\n/**\n * Options for the `usePersistentDeviceSettings` hook.\n * @alpha\n */\nexport interface UsePersistentUserChoicesOptions {\n  /**\n   * The default value to use if reading from local storage returns no results or fails.\n   */\n  defaults?: Partial<LocalUserChoices>;\n  /**\n   * Whether to prevent saving to persistent storage.\n   * @defaultValue false\n   */\n  preventSave?: boolean;\n  /**\n   * Whether to prevent loading user choices from persistent storage and use `defaults` instead.\n   * @defaultValue false\n   */\n  preventLoad?: boolean;\n}\n\n/**\n * A hook that provides access to user choices stored in local storage, such as\n * selected media devices and their current state (on or off), as well as the user name.\n * @alpha\n */\nexport function usePersistentUserChoices(options: UsePersistentUserChoicesOptions = {}) {\n  const [userChoices, setSettings] = React.useState<LocalUserChoices>(\n    loadUserChoices(options.defaults, options.preventLoad ?? false),\n  );\n\n  const saveAudioInputEnabled = React.useCallback((isEnabled: boolean) => {\n    setSettings((prev) => ({ ...prev, audioEnabled: isEnabled }));\n  }, []);\n  const saveVideoInputEnabled = React.useCallback((isEnabled: boolean) => {\n    setSettings((prev) => ({ ...prev, videoEnabled: isEnabled }));\n  }, []);\n  const saveAudioInputDeviceId = React.useCallback((deviceId: string) => {\n    setSettings((prev) => ({ ...prev, audioDeviceId: deviceId }));\n  }, []);\n  const saveVideoInputDeviceId = React.useCallback((deviceId: string) => {\n    setSettings((prev) => ({ ...prev, videoDeviceId: deviceId }));\n  }, []);\n  const saveUsername = React.useCallback((username: string) => {\n    setSettings((prev) => ({ ...prev, username: username }));\n  }, []);\n\n  React.useEffect(() => {\n    saveUserChoices(userChoices, options.preventSave ?? false);\n  }, [userChoices, options.preventSave]);\n\n  return {\n    userChoices,\n    saveAudioInputEnabled,\n    saveVideoInputEnabled,\n    saveAudioInputDeviceId,\n    saveVideoInputDeviceId,\n    saveUsername,\n  };\n}\n","import * as React from 'react';\nimport { LocalParticipant, Participant, Room } from 'livekit-client';\nimport { encryptionStatusObservable } from '@livekit/components-core';\nimport { useEnsureParticipant, useEnsureRoom } from '../context';\nimport { useObservableState } from './internal';\n\n/**\n * @alpha\n */\nexport interface UseIsEncryptedOptions {\n  room?: Room;\n}\n\n/**\n * @alpha\n */\nexport function useIsEncrypted(participant?: Participant, options: UseIsEncryptedOptions = {}) {\n  const p = useEnsureParticipant(participant);\n  const room = useEnsureRoom(options.room);\n\n  const observer = React.useMemo(() => encryptionStatusObservable(room, p), [room, p]);\n  const isEncrypted = useObservableState(\n    observer,\n    p instanceof LocalParticipant ? p.isE2EEEnabled : p.isEncrypted,\n  );\n  return isEncrypted;\n}\n","import * as React from 'react';\nimport type { LocalAudioTrack, RemoteAudioTrack, AudioAnalyserOptions } from 'livekit-client';\nimport { Track, createAudioAnalyser } from 'livekit-client';\nimport {\n  type TrackReference,\n  isTrackReference,\n  type TrackReferenceOrPlaceholder,\n} from '@livekit/components-core';\n\n/**\n * @alpha\n * Hook for tracking the volume of an audio track using the Web Audio API.\n */\nexport function useTrackVolume(\n  trackOrTrackReference?: LocalAudioTrack | RemoteAudioTrack | TrackReference,\n  options: AudioAnalyserOptions = { fftSize: 32, smoothingTimeConstant: 0 },\n) {\n  const track = isTrackReference(trackOrTrackReference)\n    ? <LocalAudioTrack | RemoteAudioTrack | undefined>trackOrTrackReference.publication.track\n    : trackOrTrackReference;\n  const [volume, setVolume] = React.useState(0);\n  React.useEffect(() => {\n    if (!track || !track.mediaStream) {\n      return;\n    }\n\n    const { cleanup, analyser } = createAudioAnalyser(track, options);\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const updateVolume = () => {\n      analyser.getByteFrequencyData(dataArray);\n      let sum = 0;\n      for (let i = 0; i < dataArray.length; i++) {\n        const a = dataArray[i];\n        sum += a * a;\n      }\n      setVolume(Math.sqrt(sum / dataArray.length) / 255);\n    };\n\n    const interval = setInterval(updateVolume, 1000 / 30);\n\n    return () => {\n      cleanup();\n      clearInterval(interval);\n    };\n  }, [track, track?.mediaStream, JSON.stringify(options)]);\n\n  return volume;\n}\n\nconst normalizeFrequencies = (frequencies: Float32Array) => {\n  const normalizeDb = (value: number) => {\n    const minDb = -100;\n    const maxDb = -10;\n    let db = 1 - (Math.max(minDb, Math.min(maxDb, value)) * -1) / 100;\n    db = Math.sqrt(db);\n\n    return db;\n  };\n\n  // Normalize all frequency values\n  return frequencies.map((value) => {\n    if (value === -Infinity) {\n      return 0;\n    }\n    return normalizeDb(value);\n  });\n};\n\n/**\n * Interface for configuring options for the useMultibandTrackVolume hook.\n * @alpha\n */\nexport interface MultiBandTrackVolumeOptions {\n  bands?: number;\n  /**\n   * cut off of frequency bins on the lower end\n   * Note: this is not a frequency measure, but in relation to analyserOptions.fftSize,\n   */\n  loPass?: number;\n  /**\n   * cut off of frequency bins on the higher end\n   * Note: this is not a frequency measure, but in relation to analyserOptions.fftSize,\n   */\n  hiPass?: number;\n  /**\n   * update should run every x ms\n   */\n  updateInterval?: number;\n  analyserOptions?: AnalyserOptions;\n}\n\nconst multibandDefaults = {\n  bands: 5,\n  loPass: 100,\n  hiPass: 600,\n  updateInterval: 10,\n  analyserOptions: { fftSize: 2048 },\n} as const satisfies MultiBandTrackVolumeOptions;\n\n/**\n * Hook for tracking the volume of an audio track across multiple frequency bands using the Web Audio API.\n * @alpha\n */\nexport function useMultibandTrackVolume(\n  trackOrTrackReference?: LocalAudioTrack | RemoteAudioTrack | TrackReferenceOrPlaceholder,\n  options: MultiBandTrackVolumeOptions = {},\n) {\n  const track =\n    trackOrTrackReference instanceof Track\n      ? trackOrTrackReference\n      : <LocalAudioTrack | RemoteAudioTrack | undefined>trackOrTrackReference?.publication?.track;\n  const [frequencyBands, setFrequencyBands] = React.useState<Array<number>>([]);\n  const opts = { ...multibandDefaults, ...options };\n  React.useEffect(() => {\n    if (!track || !track?.mediaStream) {\n      return;\n    }\n    const { analyser, cleanup } = createAudioAnalyser(track, opts.analyserOptions);\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n\n    const updateVolume = () => {\n      analyser.getFloatFrequencyData(dataArray);\n      let frequencies: Float32Array = new Float32Array(dataArray.length);\n      for (let i = 0; i < dataArray.length; i++) {\n        frequencies[i] = dataArray[i];\n      }\n      frequencies = frequencies.slice(options.loPass, options.hiPass);\n\n      const normalizedFrequencies = normalizeFrequencies(frequencies);\n      const chunkSize = Math.ceil(normalizedFrequencies.length / opts.bands);\n      const chunks: Array<number> = [];\n      for (let i = 0; i < opts.bands; i++) {\n        const summedVolumes = normalizedFrequencies\n          .slice(i * chunkSize, (i + 1) * chunkSize)\n          .reduce((acc, val) => (acc += val), 0);\n        chunks.push(summedVolumes / chunkSize);\n      }\n\n      setFrequencyBands(chunks);\n    };\n\n    const interval = setInterval(updateVolume, opts.updateInterval);\n\n    return () => {\n      cleanup();\n      clearInterval(interval);\n    };\n  }, [track, track?.mediaStream, JSON.stringify(options)]);\n\n  return frequencyBands;\n}\n","import * as React from 'react';\nimport type { TrackReference } from '@livekit/components-core';\nimport { participantTracksObservable } from '@livekit/components-core';\nimport { useObservableState } from './internal';\nimport type { Track } from 'livekit-client';\nimport { useMaybeParticipantContext, useRoomContext } from '../context';\n\n/**\n * `useParticipantTracks` is a custom React that allows you to get tracks of a specific participant only, by specifiying the participant's identity.\n * If the participant identity is not passed the hook will try to get the participant from a participant context.\n * @public\n */\nexport function useParticipantTracks(\n  sources: Track.Source[],\n  participantIdentity?: string,\n): TrackReference[] {\n  const room = useRoomContext();\n  const participantContext = useMaybeParticipantContext();\n  const p = participantIdentity\n    ? room.getParticipantByIdentity(participantIdentity)\n    : participantContext;\n  const observable = React.useMemo(\n    () => (p ? participantTracksObservable(p, { sources }) : undefined),\n    [p?.sid, p?.identity, JSON.stringify(sources)],\n  );\n\n  const trackRefs = useObservableState(observable, [] as TrackReference[]);\n\n  return trackRefs;\n}\n","import {\n  type ReceivedTranscriptionSegment,\n  addMediaTimestampToTranscription as addTimestampsToTranscription,\n  dedupeSegments,\n  // getActiveTranscriptionSegments,\n  getTrackReferenceId,\n  trackTranscriptionObserver,\n  type TrackReferenceOrPlaceholder,\n  // didActiveSegmentsChange,\n} from '@livekit/components-core';\nimport type { TranscriptionSegment } from 'livekit-client';\nimport * as React from 'react';\nimport { useTrackSyncTime } from './useTrackSyncTime';\n\n/**\n * @alpha\n */\nexport interface TrackTranscriptionOptions {\n  /**\n   * how many transcription segments should be buffered in state\n   * @defaultValue 100\n   */\n  bufferSize?: number;\n  /** amount of time (in ms) that the segment is considered `active` past its original segment duration, defaults to 2_000 */\n  // maxAge?: number;\n}\n\nconst TRACK_TRANSCRIPTION_DEFAULTS = {\n  bufferSize: 100,\n  // maxAge: 2_000,\n} as const satisfies TrackTranscriptionOptions;\n\n/**\n * @returns An object consisting of `segments` with maximum length of opts.windowLength and `activeSegments` that are valid for the current track timestamp\n * @alpha\n */\nexport function useTrackTranscription(\n  trackRef: TrackReferenceOrPlaceholder,\n  options?: TrackTranscriptionOptions,\n) {\n  const opts = { ...TRACK_TRANSCRIPTION_DEFAULTS, ...options };\n  const [segments, setSegments] = React.useState<Array<ReceivedTranscriptionSegment>>([]);\n  // const [activeSegments, setActiveSegments] = React.useState<Array<ReceivedTranscriptionSegment>>(\n  //   [],\n  // );\n  // const prevActiveSegments = React.useRef<ReceivedTranscriptionSegment[]>([]);\n  const syncTimestamps = useTrackSyncTime(trackRef);\n  const handleSegmentMessage = (newSegments: TranscriptionSegment[]) => {\n    setSegments((prevSegments) =>\n      dedupeSegments(\n        prevSegments,\n        // when first receiving a segment, add the current media timestamp to it\n        newSegments.map((s) => addTimestampsToTranscription(s, syncTimestamps)),\n        opts.bufferSize,\n      ),\n    );\n  };\n  React.useEffect(() => {\n    if (!trackRef.publication) {\n      return;\n    }\n    const subscription = trackTranscriptionObserver(trackRef.publication).subscribe((evt) => {\n      handleSegmentMessage(...evt);\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [getTrackReferenceId(trackRef), handleSegmentMessage]);\n\n  // React.useEffect(() => {\n  //   if (syncTimestamps) {\n  //     const newActiveSegments = getActiveTranscriptionSegments(\n  //       segments,\n  //       syncTimestamps,\n  //       opts.maxAge,\n  //     );\n  //     // only update active segment array if content actually changed\n  //     if (didActiveSegmentsChange(prevActiveSegments.current, newActiveSegments)) {\n  //       setActiveSegments(newActiveSegments);\n  //       prevActiveSegments.current = newActiveSegments;\n  //     }\n  //   }\n  // }, [syncTimestamps, segments, opts.maxAge]);\n\n  return { segments };\n}\n","import * as React from 'react';\nimport { type TrackReferenceOrPlaceholder, trackSyncTimeObserver } from '@livekit/components-core';\nimport { useObservableState } from './internal';\n\n/**\n * @internal\n */\nexport function useTrackSyncTime({ publication }: TrackReferenceOrPlaceholder) {\n  const observable = React.useMemo(\n    () => (publication?.track ? trackSyncTimeObserver(publication.track) : undefined),\n    [publication?.track],\n  );\n  return useObservableState(observable, {\n    timestamp: Date.now(),\n    rtpTimestamp: publication?.track?.rtpTimestamp,\n  });\n}\n","import type { Room } from 'livekit-client';\nimport * as React from 'react';\nimport { useConnectionState } from '../hooks';\n\n/** @public */\nexport interface ConnectionStatusProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The room from which the connection status should be displayed.\n   */\n  room?: Room;\n}\n\n/**\n * The `ConnectionState` component displays the connection status of the room as strings\n * (`\"connected\" | \"connecting\" | \"disconnected\" | \"reconnecting\"`).\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ConnectionState />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport const ConnectionState: (\n  props: ConnectionStatusProps & React.RefAttributes<HTMLDivElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLDivElement, ConnectionStatusProps>(\n  function ConnectionState({ room, ...props }: ConnectionStatusProps, ref) {\n    const connectionState = useConnectionState(room);\n    return (\n      <div ref={ref} {...props}>\n        {connectionState}\n      </div>\n    );\n  },\n);\n","import * as React from 'react';\nimport { useChatToggle } from '../../hooks';\n\n/** @public */\nexport interface ChatToggleProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\n/**\n * The `ChatToggle` component is a button that toggles the visibility of the `Chat` component.\n * @remarks\n * For the component to have any effect it has to live inside a `LayoutContext` context.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ToggleChat />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport const ChatToggle: (\n  props: ChatToggleProps & React.RefAttributes<HTMLButtonElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLButtonElement, ChatToggleProps>(\n  function ChatToggle(props: ChatToggleProps, ref) {\n    const { mergedProps } = useChatToggle({ props });\n\n    return (\n      <button ref={ref} {...mergedProps}>\n        {props.children}\n      </button>\n    );\n  },\n);\n","import * as React from 'react';\nimport { useDisconnectButton } from '../../hooks';\n\n/** @public */\nexport interface DisconnectButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  stopTracks?: boolean;\n}\n\n/**\n * The `DisconnectButton` is a basic html button with the added ability to disconnect from a LiveKit room.\n * Normally this is the big red button that allows end users to leave the video or audio call.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <DisconnectButton>Leave room</DisconnectButton>\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport const DisconnectButton: (\n  props: DisconnectButtonProps & React.RefAttributes<HTMLButtonElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLButtonElement, DisconnectButtonProps>(\n  function DisconnectButton(props: DisconnectButtonProps, ref) {\n    const { buttonProps } = useDisconnectButton(props);\n    return (\n      <button ref={ref} {...buttonProps}>\n        {props.children}\n      </button>\n    );\n  },\n);\n","import * as React from 'react';\nimport { LayoutContext, useMaybeTrackRefContext } from '../../context';\nimport { FocusToggleIcon, UnfocusToggleIcon } from '../../assets/icons';\nimport { useFocusToggle } from '../../hooks';\nimport type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\n\n/** @public */\nexport interface FocusToggleProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  trackRef?: TrackReferenceOrPlaceholder;\n}\n\n/**\n * The `FocusToggle` puts the `ParticipantTile` in focus or removes it from focus.\n * @remarks\n * This component needs to live inside `LayoutContext` to work properly.\n *\n * @example\n * ```tsx\n * <ParticipantTile>\n *   <FocusToggle />\n * </ParticipantTile>\n * ```\n * @public\n */\nexport const FocusToggle: (\n  props: FocusToggleProps & React.RefAttributes<HTMLButtonElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLButtonElement, FocusToggleProps>(\n  function FocusToggle({ trackRef, ...props }: FocusToggleProps, ref) {\n    const trackRefFromContext = useMaybeTrackRefContext();\n\n    const { mergedProps, inFocus } = useFocusToggle({\n      trackRef: trackRef ?? trackRefFromContext,\n      props,\n    });\n\n    return (\n      <LayoutContext.Consumer>\n        {(layoutContext) =>\n          layoutContext !== undefined && (\n            <button ref={ref} {...mergedProps}>\n              {props.children ? (\n                props.children\n              ) : inFocus ? (\n                <UnfocusToggleIcon />\n              ) : (\n                <FocusToggleIcon />\n              )}\n            </button>\n          )\n        }\n      </LayoutContext.Consumer>\n    );\n  },\n);\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgCameraDisabledIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentColor\" {...props}>\n    <path d=\"M1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708L11 10.293V4.5A1.5 1.5 0 0 0 9.5 3H3.707zM0 4.5a1.5 1.5 0 0 1 .943-1.393l9.532 9.533c-.262.224-.603.36-.975.36h-8A1.5 1.5 0 0 1 0 11.5z\" />\n    <path d=\"m15.2 3.6-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\" />\n  </svg>\n);\nexport default SvgCameraDisabledIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgCameraIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentColor\" {...props}>\n    <path d=\"M0 4.5A1.5 1.5 0 0 1 1.5 3h8A1.5 1.5 0 0 1 11 4.5v7A1.5 1.5 0 0 1 9.5 13h-8A1.5 1.5 0 0 1 0 11.5zM15.2 3.6l-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\" />\n  </svg>\n);\nexport default SvgCameraIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgChatCloseIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} viewBox=\"0 0 24 24\" {...props}>\n    <path\n      fill=\"#FFF\"\n      d=\"M4.99 3.99a1 1 0 0 0-.697 1.717L10.586 12l-6.293 6.293a1 1 0 1 0 1.414 1.414L12 13.414l6.293 6.293a1 1 0 1 0 1.414-1.414L13.414 12l6.293-6.293a1 1 0 0 0-.727-1.717 1 1 0 0 0-.687.303L12 10.586 5.707 4.293a1 1 0 0 0-.717-.303z\"\n    />\n  </svg>\n);\nexport default SvgChatCloseIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgChatIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={18} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M0 2.75A2.75 2.75 0 0 1 2.75 0h10.5A2.75 2.75 0 0 1 16 2.75v13.594a.75.75 0 0 1-1.234.572l-3.691-3.12a1.25 1.25 0 0 0-.807-.296H2.75A2.75 2.75 0 0 1 0 10.75v-8ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v8c0 .69.56 1.25 1.25 1.25h7.518c.65 0 1.279.23 1.775.65l2.457 2.077V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M3 4.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgChatIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgChevron = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentcolor\"\n      fillRule=\"evenodd\"\n      d=\"M5.293 2.293a1 1 0 0 1 1.414 0l4.823 4.823a1.25 1.25 0 0 1 0 1.768l-4.823 4.823a1 1 0 0 1-1.414-1.414L9.586 8 5.293 3.707a1 1 0 0 1 0-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgChevron;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgFocusToggleIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <g stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5}>\n      <path d=\"M10 1.75h4.25m0 0V6m0-4.25L9 7M6 14.25H1.75m0 0V10m0 4.25L7 9\" />\n    </g>\n  </svg>\n);\nexport default SvgFocusToggleIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgGearIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentcolor\"\n      fillRule=\"evenodd\"\n      d=\"M8.961.894C8.875-.298 7.125-.298 7.04.894c-.066.912-1.246 1.228-1.76.472-.67-.99-2.186-.115-1.664.96.399.824-.465 1.688-1.288 1.289-1.076-.522-1.95.994-.961 1.665.756.513.44 1.693-.472 1.759-1.192.086-1.192 1.836 0 1.922.912.066 1.228 1.246.472 1.76-.99.67-.115 2.186.96 1.664.824-.399 1.688.465 1.289 1.288-.522 1.076.994 1.95 1.665.961.513-.756 1.693-.44 1.759.472.086 1.192 1.836 1.192 1.922 0 .066-.912 1.246-1.228 1.76-.472.67.99 2.186.115 1.664-.96-.399-.824.465-1.688 1.288-1.289 1.076.522 1.95-.994.961-1.665-.756-.513-.44-1.693.472-1.759 1.192-.086 1.192-1.836 0-1.922-.912-.066-1.228-1.246-.472-1.76.99-.67.115-2.186-.96-1.664-.824.399-1.688-.465-1.289-1.288.522-1.076-.994-1.95-1.665-.961-.513.756-1.693.44-1.759-.472ZM8 13A5 5 0 1 0 8 3a5 5 0 0 0 0 10Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgGearIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgLeaveIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M2 2.75A2.75 2.75 0 0 1 4.75 0h6.5A2.75 2.75 0 0 1 14 2.75v10.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-.5a.75.75 0 0 1 1.5 0v.5c0 .69.56 1.25 1.25 1.25h6.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25h-6.5c-.69 0-1.25.56-1.25 1.25v.5a.75.75 0 0 1-1.5 0v-.5Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M8.78 7.47a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 1 1-1.06-1.06l.97-.97H1.75a.75.75 0 0 1 0-1.5h4.69l-.97-.97a.75.75 0 0 1 1.06-1.06l2.25 2.25Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgLeaveIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgLockLockedIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentcolor\"\n      fillRule=\"evenodd\"\n      d=\"M4 6.104V4a4 4 0 1 1 8 0v2.104c1.154.326 2 1.387 2 2.646v4.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-4.5c0-1.259.846-2.32 2-2.646ZM5.5 4a2.5 2.5 0 0 1 5 0v2h-5V4Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgLockLockedIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgMicDisabledIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentColor\" {...props}>\n    <path d=\"M12.227 11.52a5.477 5.477 0 0 0 1.246-2.97.5.5 0 0 0-.995-.1 4.478 4.478 0 0 1-.962 2.359l-1.07-1.07C10.794 9.247 11 8.647 11 8V3a3 3 0 0 0-6 0v1.293L1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708zM8 12.5c.683 0 1.33-.152 1.911-.425l.743.743c-.649.359-1.378.59-2.154.66V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .995-.098A4.5 4.5 0 0 0 8 12.5z\" />\n    <path d=\"M8.743 10.907 5 7.164V8a3 3 0 0 0 3.743 2.907z\" />\n  </svg>\n);\nexport default SvgMicDisabledIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgMicIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentColor\" {...props}>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M2.975 8.002a.5.5 0 0 1 .547.449 4.5 4.5 0 0 0 8.956 0 .5.5 0 1 1 .995.098A5.502 5.502 0 0 1 8.5 13.478V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .448-.547z\"\n      clipRule=\"evenodd\"\n    />\n    <path d=\"M5 3a3 3 0 1 1 6 0v5a3 3 0 0 1-6 0z\" />\n  </svg>\n);\nexport default SvgMicIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgQualityExcellentIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentcolor\" {...props}>\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n  </svg>\n);\nexport default SvgQualityExcellentIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgQualityGoodIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentcolor\" {...props}>\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <g opacity={0.25}>\n      <path d=\"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n      <path d=\"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    </g>\n  </svg>\n);\nexport default SvgQualityGoodIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgQualityPoorIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentcolor\" {...props}>\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    <g opacity={0.25}>\n      <path d=\"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n      <path d=\"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n      <path d=\"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\" />\n    </g>\n  </svg>\n);\nexport default SvgQualityPoorIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgQualityUnknownIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"currentColor\" {...props}>\n    <g opacity={0.25}>\n      <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\" />\n      <path d=\"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\" />\n    </g>\n  </svg>\n);\nexport default SvgQualityUnknownIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgScreenShareIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={20} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M0 2.75A2.75 2.75 0 0 1 2.75 0h14.5A2.75 2.75 0 0 1 20 2.75v10.5A2.75 2.75 0 0 1 17.25 16H2.75A2.75 2.75 0 0 1 0 13.25V2.75ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v10.5c0 .69.56 1.25 1.25 1.25h14.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M9.47 4.22a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1-1.06 1.06l-.97-.97v4.69a.75.75 0 0 1-1.5 0V6.56l-.97.97a.75.75 0 0 1-1.06-1.06l2.25-2.25Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgScreenShareIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgScreenShareStopIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={20} height={16} fill=\"none\" {...props}>\n    <g fill=\"currentColor\">\n      <path d=\"M7.28 4.22a.75.75 0 0 0-1.06 1.06L8.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L10 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L11.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L10 6.94z\" />\n      <path\n        fillRule=\"evenodd\"\n        d=\"M2.75 0A2.75 2.75 0 0 0 0 2.75v10.5A2.75 2.75 0 0 0 2.75 16h14.5A2.75 2.75 0 0 0 20 13.25V2.75A2.75 2.75 0 0 0 17.25 0zM1.5 2.75c0-.69.56-1.25 1.25-1.25h14.5c.69 0 1.25.56 1.25 1.25v10.5c0 .69-.56 1.25-1.25 1.25H2.75c-.69 0-1.25-.56-1.25-1.25z\"\n        clipRule=\"evenodd\"\n      />\n    </g>\n  </svg>\n);\nexport default SvgScreenShareStopIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgSpinnerIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M8 0a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0V.75A.75.75 0 0 1 8 0Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M8 12a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0v-2.5A.75.75 0 0 1 8 12Z\"\n      clipRule=\"evenodd\"\n      opacity={0.7}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M12 1.072a.75.75 0 0 1 .274 1.024l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 12 1.072Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6 11.464a.75.75 0 0 1 .274 1.025l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 6 11.464Z\"\n      clipRule=\"evenodd\"\n      opacity={0.6}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M14.928 4a.75.75 0 0 1-.274 1.025l-2.165 1.25a.75.75 0 1 1-.75-1.3l2.165-1.25A.75.75 0 0 1 14.928 4Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M4.536 10a.75.75 0 0 1-.275 1.024l-2.165 1.25a.75.75 0 0 1-.75-1.298l2.165-1.25A.75.75 0 0 1 4.536 10Z\"\n      clipRule=\"evenodd\"\n      opacity={0.5}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M16 8a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 16 8Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M4 8a.75.75 0 0 1-.75.75H.75a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 4 8Z\"\n      clipRule=\"evenodd\"\n      opacity={0.4}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M14.928 12a.75.75 0 0 1-1.024.274l-2.165-1.25a.75.75 0 0 1 .75-1.299l2.165 1.25A.75.75 0 0 1 14.928 12Z\"\n      clipRule=\"evenodd\"\n      opacity={0.9}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M4.536 6a.75.75 0 0 1-1.025.275l-2.165-1.25a.75.75 0 1 1 .75-1.3l2.165 1.25A.75.75 0 0 1 4.536 6Z\"\n      clipRule=\"evenodd\"\n      opacity={0.3}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M12 14.928a.75.75 0 0 1-1.024-.274l-1.25-2.165a.75.75 0 0 1 1.298-.75l1.25 2.165A.75.75 0 0 1 12 14.928Z\"\n      clipRule=\"evenodd\"\n      opacity={0.8}\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6 4.536a.75.75 0 0 1-1.024-.275l-1.25-2.165a.75.75 0 1 1 1.299-.75l1.25 2.165A.75.75 0 0 1 6 4.536Z\"\n      clipRule=\"evenodd\"\n      opacity={0.2}\n    />\n  </svg>\n);\nexport default SvgSpinnerIcon;\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgUnfocusToggleIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n    <g stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5}>\n      <path d=\"M13.25 7H9m0 0V2.75M9 7l5.25-5.25M2.75 9H7m0 0v4.25M7 9l-5.25 5.25\" />\n    </g>\n  </svg>\n);\nexport default SvgUnfocusToggleIcon;\n","import * as React from 'react';\nimport { useMaybeRoomContext } from '../../context';\nimport { mergeProps } from '../../utils';\nimport { RoomEvent, type LocalAudioTrack, type LocalVideoTrack } from 'livekit-client';\nimport { useMediaDeviceSelect } from '../../hooks';\n\n/** @public */\nexport interface MediaDeviceSelectProps\n  extends Omit<React.HTMLAttributes<HTMLUListElement>, 'onError'> {\n  kind: MediaDeviceKind;\n  onActiveDeviceChange?: (deviceId: string) => void;\n  onDeviceListChange?: (devices: MediaDeviceInfo[]) => void;\n  onDeviceSelectError?: (e: Error) => void;\n  initialSelection?: string;\n  /** will force the browser to only return the specified device\n   * will call `onDeviceSelectError` with the error in case this fails\n   */\n  exactMatch?: boolean;\n  track?: LocalAudioTrack | LocalVideoTrack;\n  /**\n   * this will call getUserMedia if the permissions are not yet given to enumerate the devices with device labels.\n   * in some browsers multiple calls to getUserMedia result in multiple permission prompts.\n   * It's generally advised only flip this to true, once a (preview) track has been acquired successfully with the\n   * appropriate permissions.\n   *\n   * @see {@link MediaDeviceMenu}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices | MDN enumerateDevices}\n   */\n  requestPermissions?: boolean;\n  onError?: (e: Error) => void;\n}\n\n/**\n * The `MediaDeviceSelect` list all media devices of one kind.\n * Clicking on one of the listed devices make it the active media device.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <MediaDeviceSelect kind='audioinput' />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport const MediaDeviceSelect: (\n  props: MediaDeviceSelectProps & React.RefAttributes<HTMLUListElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLUListElement, MediaDeviceSelectProps>(\n  function MediaDeviceSelect(\n    {\n      kind,\n      initialSelection,\n      onActiveDeviceChange,\n      onDeviceListChange,\n      onDeviceSelectError,\n      exactMatch,\n      track,\n      requestPermissions,\n      onError,\n      ...props\n    }: MediaDeviceSelectProps,\n    ref,\n  ) {\n    const room = useMaybeRoomContext();\n    const handleError = React.useCallback(\n      (e: Error) => {\n        if (room) {\n          // awkwardly emit the event from outside of the room, as we don't have other means to raise a MediaDeviceError\n          room.emit(RoomEvent.MediaDevicesError, e);\n        }\n        onError?.(e);\n      },\n      [room, onError],\n    );\n    const { devices, activeDeviceId, setActiveMediaDevice, className } = useMediaDeviceSelect({\n      kind,\n      room,\n      track,\n      requestPermissions,\n      onError: handleError,\n    });\n    React.useEffect(() => {\n      if (initialSelection !== undefined) {\n        setActiveMediaDevice(initialSelection);\n      }\n    }, [setActiveMediaDevice]);\n\n    React.useEffect(() => {\n      if (typeof onDeviceListChange === 'function') {\n        onDeviceListChange(devices);\n      }\n    }, [onDeviceListChange, devices]);\n\n    React.useEffect(() => {\n      if (activeDeviceId && activeDeviceId !== '') {\n        onActiveDeviceChange?.(activeDeviceId);\n      }\n    }, [activeDeviceId]);\n\n    const handleActiveDeviceChange = async (deviceId: string) => {\n      try {\n        await setActiveMediaDevice(deviceId, { exact: exactMatch });\n      } catch (e) {\n        if (e instanceof Error) {\n          onDeviceSelectError?.(e);\n        } else {\n          throw e;\n        }\n      }\n    };\n    // Merge Props\n    const mergedProps = React.useMemo(\n      () => mergeProps(props, { className }, { className: 'lk-list' }),\n      [className, props],\n    );\n\n    function isActive(deviceId: string, activeDeviceId: string, index: number) {\n      return deviceId === activeDeviceId || (index === 0 && activeDeviceId === 'default');\n    }\n\n    return (\n      <ul ref={ref} {...mergedProps}>\n        {devices.map((device, index) => (\n          <li\n            key={device.deviceId}\n            id={device.deviceId}\n            data-lk-active={isActive(device.deviceId, activeDeviceId, index)}\n            aria-selected={isActive(device.deviceId, activeDeviceId, index)}\n            role=\"option\"\n          >\n            <button className=\"lk-button\" onClick={() => handleActiveDeviceChange(device.deviceId)}>\n              {device.label}\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  },\n);\n","import * as React from 'react';\nimport { mergeProps as mergePropsReactAria } from './mergeProps';\nimport { log } from '@livekit/components-core';\n\n/** @internal */\nexport function isProp<U extends HTMLElement, T extends React.HTMLAttributes<U>>(\n  prop: T | undefined,\n): prop is T {\n  return prop !== undefined;\n}\n\n/** @internal */\nexport function mergeProps<\n  U extends HTMLElement,\n  T extends Array<React.HTMLAttributes<U> | undefined>,\n>(...props: T) {\n  return mergePropsReactAria(...props.filter(isProp));\n}\n\n/** @internal */\nexport function cloneSingleChild(\n  children: React.ReactNode | React.ReactNode[],\n  props?: Record<string, any>,\n  key?: any,\n) {\n  return React.Children.map(children, (child) => {\n    // Checking isValidElement is the safe way and avoids a typescript\n    // error too.\n    if (React.isValidElement(child) && React.Children.only(children)) {\n      return React.cloneElement(child, { ...props, key });\n    }\n    return child;\n  });\n}\n\n/**\n * @internal\n */\nexport function warnAboutMissingStyles(el?: HTMLElement) {\n  if (\n    typeof window !== 'undefined' &&\n    typeof process !== 'undefined' &&\n    // eslint-disable-next-line turbo/no-undeclared-env-vars\n    (process?.env?.NODE_ENV === 'dev' ||\n      // eslint-disable-next-line turbo/no-undeclared-env-vars\n      process?.env?.NODE_ENV === 'development')\n  ) {\n    const target = el ?? document.querySelector('.lk-room-container');\n    if (target && !getComputedStyle(target).getPropertyValue('--lk-has-imported-styles')) {\n      log.warn(\n        \"It looks like you're not using the `@livekit/components-styles package`. To render the UI with the default styling, please import it in your layout or page.\",\n      );\n    }\n  }\n}\n","import * as React from 'react';\nimport { useRoomContext } from '../../context';\nimport { useStartAudio } from '../../hooks';\n\n/** @public */\nexport interface AllowAudioPlaybackProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  label: string;\n}\n\n/**\n * The `StartAudio` component is only visible when the browser blocks audio playback. This is due to some browser implemented autoplay policies.\n * To start audio playback, the user must perform a user-initiated event such as clicking this button.\n * As soon as audio playback starts, the button hides itself again.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <StartAudio label=\"Click to allow audio playback\" />\n * </LiveKitRoom>\n * ```\n *\n * @see Autoplay policy on MDN web docs: {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Best_practices#autoplay_policy}\n * @public\n */\nexport const StartAudio: (\n  props: AllowAudioPlaybackProps & React.RefAttributes<HTMLButtonElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLButtonElement, AllowAudioPlaybackProps>(\n  function StartAudio({ label = 'Allow Audio', ...props }: AllowAudioPlaybackProps, ref) {\n    const room = useRoomContext();\n    const { mergedProps } = useStartAudio({ room, props });\n\n    return (\n      <button ref={ref} {...mergedProps}>\n        {label}\n      </button>\n    );\n  },\n);\n","import type { CaptureOptionsBySource, ToggleSource } from '@livekit/components-core';\nimport * as React from 'react';\nimport { getSourceIcon } from '../../assets/icons/util';\nimport { useTrackToggle } from '../../hooks';\nimport { TrackPublishOptions } from 'livekit-client';\n\n/** @public */\nexport interface TrackToggleProps<T extends ToggleSource>\n  extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'onChange'> {\n  source: T;\n  showIcon?: boolean;\n  initialState?: boolean;\n  /**\n   * Function that is called when the enabled state of the toggle changes.\n   * The second function argument `isUserInitiated` is `true` if the change was initiated by a user interaction, such as a click.\n   */\n  onChange?: (enabled: boolean, isUserInitiated: boolean) => void;\n  captureOptions?: CaptureOptionsBySource<T>;\n  publishOptions?: TrackPublishOptions;\n  onDeviceError?: (error: Error) => void;\n}\n\n/**\n * With the `TrackToggle` component it is possible to mute and unmute your camera and microphone.\n * The component uses an html button element under the hood so you can treat it like a button.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <TrackToggle source={Track.Source.Microphone} />\n *   <TrackToggle source={Track.Source.Camera} />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport const TrackToggle: <T extends ToggleSource>(\n  props: TrackToggleProps<T> & React.RefAttributes<HTMLButtonElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef(function TrackToggle<\n  T extends ToggleSource,\n>({ showIcon, ...props }: TrackToggleProps<T>, ref: React.ForwardedRef<HTMLButtonElement>) {\n  const { buttonProps, enabled } = useTrackToggle(props);\n  return (\n    <button ref={ref} {...buttonProps}>\n      {(showIcon ?? true) && getSourceIcon(props.source, enabled)}\n      {props.children}\n    </button>\n  );\n});\n","import * as React from 'react';\nimport { ConnectionQuality, Track } from 'livekit-client';\n\nimport {\n  MicIcon,\n  MicDisabledIcon,\n  CameraIcon,\n  CameraDisabledIcon,\n  QualityUnknownIcon,\n  QualityExcellentIcon,\n  QualityGoodIcon,\n  QualityPoorIcon,\n  ScreenShareIcon,\n  ScreenShareStopIcon,\n} from './index';\n\n/**\n * @internal\n */\nexport function getSourceIcon(source: Track.Source, enabled: boolean) {\n  switch (source) {\n    case Track.Source.Microphone:\n      return enabled ? <MicIcon /> : <MicDisabledIcon />;\n    case Track.Source.Camera:\n      return enabled ? <CameraIcon /> : <CameraDisabledIcon />;\n    case Track.Source.ScreenShare:\n      return enabled ? <ScreenShareStopIcon /> : <ScreenShareIcon />;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * @internal\n */\nexport function getConnectionQualityIcon(quality: ConnectionQuality) {\n  switch (quality) {\n    case ConnectionQuality.Excellent:\n      return <QualityExcellentIcon />;\n    case ConnectionQuality.Good:\n      return <QualityGoodIcon />;\n    case ConnectionQuality.Poor:\n      return <QualityPoorIcon />;\n    default:\n      return <QualityUnknownIcon />;\n  }\n}\n","import * as React from 'react';\nimport { mergeProps } from '../../utils';\nimport type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { ParticipantTile } from '../participant/ParticipantTile';\nimport type { ParticipantClickEvent } from '@livekit/components-core';\n\n/** @public */\nexport interface FocusLayoutContainerProps extends React.HTMLAttributes<HTMLDivElement> {}\n\n/**\n * The `FocusLayoutContainer` is a layout component that expects two children:\n * A small side component: In a video conference, this is usually a carousel of participants\n * who are not in focus. And a larger main component to display the focused participant.\n * For example, with the `FocusLayout` component.\n *  @public\n */\nexport function FocusLayoutContainer(props: FocusLayoutContainerProps) {\n  const elementProps = mergeProps(props, { className: 'lk-focus-layout' });\n\n  return <div {...elementProps}>{props.children}</div>;\n}\n\n/** @public */\nexport interface FocusLayoutProps extends React.HTMLAttributes<HTMLElement> {\n  /** The track to display in the focus layout. */\n  trackRef?: TrackReferenceOrPlaceholder;\n\n  onParticipantClick?: (evt: ParticipantClickEvent) => void;\n}\n\n/**\n * The `FocusLayout` component is just a light wrapper around the `ParticipantTile` to display a single participant.\n * @public\n */\nexport function FocusLayout({ trackRef, ...htmlProps }: FocusLayoutProps) {\n  return <ParticipantTile trackRef={trackRef} {...htmlProps} />;\n}\n","import * as React from 'react';\nimport type { Participant } from 'livekit-client';\nimport { Track } from 'livekit-client';\nimport type { ParticipantClickEvent, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { isTrackReference, isTrackReferencePinned } from '@livekit/components-core';\nimport { ConnectionQualityIndicator } from './ConnectionQualityIndicator';\nimport { ParticipantName } from './ParticipantName';\nimport { TrackMutedIndicator } from './TrackMutedIndicator';\nimport {\n  ParticipantContext,\n  TrackRefContext,\n  useEnsureTrackRef,\n  useFeatureContext,\n  useMaybeLayoutContext,\n  useMaybeParticipantContext,\n  useMaybeTrackRefContext,\n} from '../../context';\nimport { FocusToggle } from '../controls/FocusToggle';\nimport { ParticipantPlaceholder } from '../../assets/images';\nimport { LockLockedIcon, ScreenShareIcon } from '../../assets/icons';\nimport { VideoTrack } from './VideoTrack';\nimport { AudioTrack } from './AudioTrack';\nimport { useParticipantTile } from '../../hooks';\nimport { useIsEncrypted } from '../../hooks/useIsEncrypted';\n\n/**\n * The `ParticipantContextIfNeeded` component only creates a `ParticipantContext`\n * if there is no `ParticipantContext` already.\n * @example\n * ```tsx\n * <ParticipantContextIfNeeded participant={trackReference.participant}>\n *  ...\n * </ParticipantContextIfNeeded>\n * ```\n * @public\n */\nexport function ParticipantContextIfNeeded(\n  props: React.PropsWithChildren<{\n    participant?: Participant;\n  }>,\n) {\n  const hasContext = !!useMaybeParticipantContext();\n  return props.participant && !hasContext ? (\n    <ParticipantContext.Provider value={props.participant}>\n      {props.children}\n    </ParticipantContext.Provider>\n  ) : (\n    <>{props.children}</>\n  );\n}\n\n/**\n * Only create a `TrackRefContext` if there is no `TrackRefContext` already.\n */\nfunction TrackRefContextIfNeeded(\n  props: React.PropsWithChildren<{\n    trackRef?: TrackReferenceOrPlaceholder;\n  }>,\n) {\n  const hasContext = !!useMaybeTrackRefContext();\n  return props.trackRef && !hasContext ? (\n    <TrackRefContext.Provider value={props.trackRef}>{props.children}</TrackRefContext.Provider>\n  ) : (\n    <>{props.children}</>\n  );\n}\n\n/** @public */\nexport interface ParticipantTileProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** The track reference to display. */\n  trackRef?: TrackReferenceOrPlaceholder;\n  disableSpeakingIndicator?: boolean;\n\n  onParticipantClick?: (event: ParticipantClickEvent) => void;\n}\n\n/**\n * The `ParticipantTile` component is the base utility wrapper for displaying a visual representation of a participant.\n * This component can be used as a child of the `TrackLoop` component or by passing a track reference as property.\n *\n * @example Using the `ParticipantTile` component with a track reference:\n * ```tsx\n * <ParticipantTile trackRef={trackRef} />\n * ```\n * @example Using the `ParticipantTile` component as a child of the `TrackLoop` component:\n * ```tsx\n * <TrackLoop>\n *  <ParticipantTile />\n * </TrackLoop>\n * ```\n * @public\n */\nexport const ParticipantTile: (\n  props: ParticipantTileProps & React.RefAttributes<HTMLDivElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLDivElement, ParticipantTileProps>(\n  function ParticipantTile(\n    {\n      trackRef,\n      children,\n      onParticipantClick,\n      disableSpeakingIndicator,\n      ...htmlProps\n    }: ParticipantTileProps,\n    ref,\n  ) {\n    const trackReference = useEnsureTrackRef(trackRef);\n\n    const { elementProps } = useParticipantTile<HTMLDivElement>({\n      htmlProps,\n      disableSpeakingIndicator,\n      onParticipantClick,\n      trackRef: trackReference,\n    });\n    const isEncrypted = useIsEncrypted(trackReference.participant);\n    const layoutContext = useMaybeLayoutContext();\n\n    const autoManageSubscription = useFeatureContext()?.autoSubscription;\n\n    const handleSubscribe = React.useCallback(\n      (subscribed: boolean) => {\n        if (\n          trackReference.source &&\n          !subscribed &&\n          layoutContext &&\n          layoutContext.pin.dispatch &&\n          isTrackReferencePinned(trackReference, layoutContext.pin.state)\n        ) {\n          layoutContext.pin.dispatch({ msg: 'clear_pin' });\n        }\n      },\n      [trackReference, layoutContext],\n    );\n\n    return (\n      <div ref={ref} style={{ position: 'relative' }} {...elementProps}>\n        <TrackRefContextIfNeeded trackRef={trackReference}>\n          <ParticipantContextIfNeeded participant={trackReference.participant}>\n            {children ?? (\n              <>\n                {isTrackReference(trackReference) &&\n                (trackReference.publication?.kind === 'video' ||\n                  trackReference.source === Track.Source.Camera ||\n                  trackReference.source === Track.Source.ScreenShare) ? (\n                  <VideoTrack\n                    trackRef={trackReference}\n                    onSubscriptionStatusChanged={handleSubscribe}\n                    manageSubscription={autoManageSubscription}\n                  />\n                ) : (\n                  isTrackReference(trackReference) && (\n                    <AudioTrack\n                      trackRef={trackReference}\n                      onSubscriptionStatusChanged={handleSubscribe}\n                    />\n                  )\n                )}\n                <div className=\"lk-participant-placeholder\">\n                  <ParticipantPlaceholder />\n                </div>\n                <div className=\"lk-participant-metadata\">\n                  <div className=\"lk-participant-metadata-item\">\n                    {trackReference.source === Track.Source.Camera ? (\n                      <>\n                        {isEncrypted && <LockLockedIcon style={{ marginRight: '0.25rem' }} />}\n                        <TrackMutedIndicator\n                          trackRef={{\n                            participant: trackReference.participant,\n                            source: Track.Source.Microphone,\n                          }}\n                          show={'muted'}\n                        ></TrackMutedIndicator>\n                        <ParticipantName />\n                      </>\n                    ) : (\n                      <>\n                        <ScreenShareIcon style={{ marginRight: '0.25rem' }} />\n                        <ParticipantName>&apos;s screen</ParticipantName>\n                      </>\n                    )}\n                  </div>\n                  <ConnectionQualityIndicator className=\"lk-participant-metadata-item\" />\n                </div>\n              </>\n            )}\n            <FocusToggle trackRef={trackReference} />\n          </ParticipantContextIfNeeded>\n        </TrackRefContextIfNeeded>\n      </div>\n    );\n  },\n);\n","import * as React from 'react';\nimport { mergeProps } from '../../utils';\nimport { getConnectionQualityIcon } from '../../assets/icons/util';\nimport type { ConnectionQualityIndicatorOptions } from '../../hooks';\nimport { useConnectionQualityIndicator } from '../../hooks';\n\n/** @public */\nexport interface ConnectionQualityIndicatorProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    ConnectionQualityIndicatorOptions {}\n\n/**\n * The `ConnectionQualityIndicator` shows the individual connection quality of a participant.\n *\n * @example\n * ```tsx\n * <ConnectionQualityIndicator />\n * ```\n * @public\n */\nexport const ConnectionQualityIndicator: (\n  props: ConnectionQualityIndicatorProps & React.RefAttributes<HTMLDivElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<\n  HTMLDivElement,\n  ConnectionQualityIndicatorProps\n>(function ConnectionQualityIndicator(props: ConnectionQualityIndicatorProps, ref) {\n  const { className, quality } = useConnectionQualityIndicator(props);\n  const elementProps = React.useMemo(() => {\n    return { ...mergeProps(props, { className: className as string }), 'data-lk-quality': quality };\n  }, [quality, props, className]);\n  return (\n    <div ref={ref} {...elementProps}>\n      {props.children ?? getConnectionQualityIcon(quality)}\n    </div>\n  );\n});\n","import { setupParticipantName } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useEnsureParticipant } from '../../context';\nimport { useObservableState } from '../../hooks/internal/useObservableState';\nimport { mergeProps } from '../../utils';\nimport type { UseParticipantInfoOptions } from '../../hooks';\n\n/** @public */\nexport interface ParticipantNameProps\n  extends React.HTMLAttributes<HTMLSpanElement>,\n    UseParticipantInfoOptions {}\n\n/**\n * The `ParticipantName` component displays the name of the participant as a string within an HTML span element.\n * If no participant name is undefined the participant identity string is displayed.\n *\n * @example\n * ```tsx\n * <ParticipantName />\n * ```\n * @public\n */\nexport const ParticipantName: (\n  props: ParticipantNameProps & React.RefAttributes<HTMLSpanElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLSpanElement, ParticipantNameProps>(\n  function ParticipantName({ participant, ...props }: ParticipantNameProps, ref) {\n    const p = useEnsureParticipant(participant);\n\n    const { className, infoObserver } = React.useMemo(() => {\n      return setupParticipantName(p);\n    }, [p]);\n\n    const { identity, name } = useObservableState(infoObserver, {\n      name: p.name,\n      identity: p.identity,\n      metadata: p.metadata,\n    });\n\n    const mergedProps = React.useMemo(() => {\n      return mergeProps(props, { className, 'data-lk-participant-name': name });\n    }, [props, className, name]);\n\n    return (\n      <span ref={ref} {...mergedProps}>\n        {name !== '' ? name : identity}\n        {props.children}\n      </span>\n    );\n  },\n);\n","import * as React from 'react';\nimport { mergeProps } from '../../utils';\nimport { getSourceIcon } from '../../assets/icons/util';\nimport { useTrackMutedIndicator } from '../../hooks';\nimport type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\n\n/** @public */\nexport interface TrackMutedIndicatorProps extends React.HTMLAttributes<HTMLDivElement> {\n  trackRef: TrackReferenceOrPlaceholder;\n  show?: 'always' | 'muted' | 'unmuted';\n}\n\n/**\n * The `TrackMutedIndicator` shows whether the participant's camera or microphone is muted or not.\n * By default, a muted/unmuted icon is displayed for a camera, microphone, and screen sharing track.\n *\n * @example\n * ```tsx\n * <TrackMutedIndicator trackRef={trackRef} />\n * ```\n * @public\n */\nexport const TrackMutedIndicator: (\n  props: TrackMutedIndicatorProps & React.RefAttributes<HTMLDivElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLDivElement, TrackMutedIndicatorProps>(\n  function TrackMutedIndicator(\n    { trackRef, show = 'always', ...props }: TrackMutedIndicatorProps,\n    ref,\n  ) {\n    const { className, isMuted } = useTrackMutedIndicator(trackRef);\n\n    const showIndicator =\n      show === 'always' || (show === 'muted' && isMuted) || (show === 'unmuted' && !isMuted);\n\n    const htmlProps = React.useMemo(\n      () =>\n        mergeProps(props, {\n          className,\n        }),\n      [className, props],\n    );\n\n    if (!showIndicator) {\n      return null;\n    }\n\n    return (\n      <div ref={ref} {...htmlProps} data-lk-muted={isMuted}>\n        {props.children ?? getSourceIcon(trackRef.source, !isMuted)}\n      </div>\n    );\n  },\n);\n","/**\n * WARNING: This file was auto-generated by svgr. Do not edit.\n */\nimport * as React from 'react';\nimport type { SVGProps } from 'react';\n/**\n * @internal\n */\nconst SvgParticipantPlaceholder = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    width={320}\n    height={320}\n    viewBox=\"0 0 320 320\"\n    preserveAspectRatio=\"xMidYMid meet\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M160 180C204.182 180 240 144.183 240 100C240 55.8172 204.182 20 160 20C115.817 20 79.9997 55.8172 79.9997 100C79.9997 144.183 115.817 180 160 180Z\"\n      fill=\"white\"\n      fillOpacity={0.25}\n    />\n    <path\n      d=\"M97.6542 194.614C103.267 191.818 109.841 192.481 115.519 195.141C129.025 201.466 144.1 205 159.999 205C175.899 205 190.973 201.466 204.48 195.141C210.158 192.481 216.732 191.818 222.345 194.614C262.703 214.719 291.985 253.736 298.591 300.062C300.15 310.997 291.045 320 280 320H39.9997C28.954 320 19.8495 310.997 21.4087 300.062C28.014 253.736 57.2966 214.72 97.6542 194.614Z\"\n      fill=\"white\"\n      fillOpacity={0.25}\n    />\n  </svg>\n);\nexport default SvgParticipantPlaceholder;\n","import { RemoteTrackPublication } from 'livekit-client';\nimport * as React from 'react';\nimport { useMediaTrackBySourceOrName } from '../../hooks/useMediaTrackBySourceOrName';\nimport type { ParticipantClickEvent, TrackReference } from '@livekit/components-core';\nimport { useEnsureTrackRef } from '../../context';\nimport * as useHooks from 'usehooks-ts';\n\n/** @public */\nexport interface VideoTrackProps extends React.VideoHTMLAttributes<HTMLVideoElement> {\n  /** The track reference of the track to render. */\n  trackRef?: TrackReference;\n  onTrackClick?: (evt: ParticipantClickEvent) => void;\n  onSubscriptionStatusChanged?: (subscribed: boolean) => void;\n  manageSubscription?: boolean;\n}\n\n/**\n * The `VideoTrack` component is responsible for rendering participant video tracks like `camera` and `screen_share`.\n * This component must have access to the participant's context, or alternatively pass it a `Participant` as a property.\n *\n * @example\n * ```tsx\n * <VideoTrack trackRef={trackRef} />\n * ```\n * @see {@link @livekit/components-react#ParticipantTile | ParticipantTile}\n * @public\n */\nexport const VideoTrack: (\n  props: VideoTrackProps & React.RefAttributes<HTMLVideoElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLVideoElement, VideoTrackProps>(\n  function VideoTrack(\n    {\n      onTrackClick,\n      onClick,\n      onSubscriptionStatusChanged,\n      trackRef,\n      manageSubscription,\n      ...props\n    }: VideoTrackProps,\n    ref,\n  ) {\n    const trackReference = useEnsureTrackRef(trackRef);\n\n    const mediaEl = React.useRef<HTMLVideoElement>(null);\n    React.useImperativeHandle(ref, () => mediaEl.current as HTMLVideoElement);\n\n    const intersectionEntry = useHooks.useIntersectionObserver({ root: mediaEl.current });\n\n    const [debouncedIntersectionEntry] = useHooks.useDebounceValue(intersectionEntry, 3000);\n\n    React.useEffect(() => {\n      if (\n        manageSubscription &&\n        trackReference.publication instanceof RemoteTrackPublication &&\n        debouncedIntersectionEntry?.isIntersecting === false &&\n        intersectionEntry?.isIntersecting === false\n      ) {\n        trackReference.publication.setSubscribed(false);\n      }\n    }, [debouncedIntersectionEntry, trackReference, manageSubscription]);\n\n    React.useEffect(() => {\n      if (\n        manageSubscription &&\n        trackReference.publication instanceof RemoteTrackPublication &&\n        intersectionEntry?.isIntersecting === true\n      ) {\n        trackReference.publication.setSubscribed(true);\n      }\n    }, [intersectionEntry, trackReference, manageSubscription]);\n\n    const {\n      elementProps,\n      publication: pub,\n      isSubscribed,\n    } = useMediaTrackBySourceOrName(trackReference, {\n      element: mediaEl,\n      props,\n    });\n\n    React.useEffect(() => {\n      onSubscriptionStatusChanged?.(!!isSubscribed);\n    }, [isSubscribed, onSubscriptionStatusChanged]);\n\n    const clickHandler = (evt: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n      onClick?.(evt);\n      onTrackClick?.({ participant: trackReference?.participant, track: pub });\n    };\n\n    return <video ref={mediaEl} {...elementProps} muted={true} onClick={clickHandler}></video>;\n  },\n);\n","import type { TrackIdentifier } from '@livekit/components-core';\nimport { isTrackReference } from '@livekit/components-core';\nimport { setupMediaTrack, log, isLocal, getTrackByIdentifier } from '@livekit/components-core';\nimport * as React from 'react';\nimport { mergeProps } from '../utils';\n\n/** @public */\nexport interface UseMediaTrackOptions {\n  element?: React.RefObject<HTMLMediaElement> | null;\n  props?: React.HTMLAttributes<HTMLVideoElement | HTMLAudioElement>;\n}\n\n/**\n * @internal\n */\nexport function useMediaTrackBySourceOrName(\n  observerOptions: TrackIdentifier,\n  options: UseMediaTrackOptions = {},\n) {\n  const [publication, setPublication] = React.useState(getTrackByIdentifier(observerOptions));\n\n  const [isMuted, setMuted] = React.useState(publication?.isMuted);\n  const [isSubscribed, setSubscribed] = React.useState(publication?.isSubscribed);\n\n  const [track, setTrack] = React.useState(publication?.track);\n  const [orientation, setOrientation] = React.useState<'landscape' | 'portrait'>('landscape');\n  const previousElement = React.useRef<HTMLMediaElement | undefined | null>();\n\n  const { className, trackObserver } = React.useMemo(() => {\n    return setupMediaTrack(observerOptions);\n  }, [\n    observerOptions.participant.sid ?? observerOptions.participant.identity,\n    observerOptions.source,\n    isTrackReference(observerOptions) && observerOptions.publication.trackSid,\n  ]);\n\n  React.useEffect(() => {\n    const subscription = trackObserver.subscribe((publication) => {\n      log.debug('update track', publication);\n      setPublication(publication);\n      setMuted(publication?.isMuted);\n      setSubscribed(publication?.isSubscribed);\n      setTrack(publication?.track);\n    });\n    return () => subscription?.unsubscribe();\n  }, [trackObserver]);\n\n  React.useEffect(() => {\n    if (track) {\n      if (previousElement.current) {\n        track.detach(previousElement.current);\n      }\n      if (\n        options.element?.current &&\n        !(isLocal(observerOptions.participant) && track?.kind === 'audio')\n      ) {\n        track.attach(options.element.current);\n      }\n    }\n    previousElement.current = options.element?.current;\n    return () => {\n      if (previousElement.current) {\n        track?.detach(previousElement.current);\n      }\n    };\n  }, [track, options.element]);\n\n  React.useEffect(() => {\n    // Set the orientation of the video track.\n    // TODO: This does not handle changes in orientation after a track got published (e.g when rotating a phone camera from portrait to landscape).\n    if (\n      typeof publication?.dimensions?.width === 'number' &&\n      typeof publication?.dimensions?.height === 'number'\n    ) {\n      const orientation_ =\n        publication.dimensions.width > publication.dimensions.height ? 'landscape' : 'portrait';\n      setOrientation(orientation_);\n    }\n  }, [publication]);\n\n  return {\n    publication,\n    isMuted,\n    isSubscribed,\n    track,\n    elementProps: mergeProps(options.props, {\n      className,\n      'data-lk-local-participant': observerOptions.participant.isLocal,\n      'data-lk-source': publication?.source,\n      ...(publication?.kind === 'video' && { 'data-lk-orientation': orientation }),\n    }),\n  };\n}\n","import * as React from 'react';\nimport { useMediaTrackBySourceOrName } from '../../hooks/useMediaTrackBySourceOrName';\nimport type { TrackReference } from '@livekit/components-core';\nimport { log } from '@livekit/components-core';\nimport { RemoteAudioTrack, RemoteTrackPublication } from 'livekit-client';\nimport { useEnsureTrackRef } from '../../context';\n\n/** @public */\nexport interface AudioTrackProps extends React.AudioHTMLAttributes<HTMLAudioElement> {\n  /** The track reference of the track from which the audio is to be rendered. */\n  trackRef?: TrackReference;\n\n  onSubscriptionStatusChanged?: (subscribed: boolean) => void;\n  /** Sets the volume of the audio track. By default, the range is between `0.0` and `1.0`. */\n  volume?: number;\n  /**\n   * Mutes the audio track if set to `true`.\n   * @remarks\n   * If set to `true`, the server will stop sending audio track data to the client.\n   * @alpha\n   */\n  muted?: boolean;\n}\n\n/**\n * The AudioTrack component is responsible for rendering participant audio tracks.\n * This component must have access to the participant's context, or alternatively pass it a `Participant` as a property.\n *\n * @example\n * ```tsx\n *   <ParticipantTile>\n *     <AudioTrack trackRef={trackRef} />\n *   </ParticipantTile>\n * ```\n *\n * @see `ParticipantTile` component\n * @public\n */\nexport const AudioTrack: (\n  props: AudioTrackProps & React.RefAttributes<HTMLAudioElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLAudioElement, AudioTrackProps>(\n  function AudioTrack(\n    { trackRef, onSubscriptionStatusChanged, volume, muted, ...props }: AudioTrackProps,\n    ref,\n  ) {\n    const trackReference = useEnsureTrackRef(trackRef);\n\n    const mediaEl = React.useRef<HTMLAudioElement>(null);\n    React.useImperativeHandle(ref, () => mediaEl.current as HTMLAudioElement);\n\n    const {\n      elementProps,\n      isSubscribed,\n      track,\n      publication: pub,\n    } = useMediaTrackBySourceOrName(trackReference, {\n      element: mediaEl,\n      props,\n    });\n\n    React.useEffect(() => {\n      onSubscriptionStatusChanged?.(!!isSubscribed);\n    }, [isSubscribed, onSubscriptionStatusChanged]);\n\n    React.useEffect(() => {\n      if (track === undefined || volume === undefined) {\n        return;\n      }\n      if (track instanceof RemoteAudioTrack) {\n        track.setVolume(volume);\n      } else {\n        log.warn('Volume can only be set on remote audio tracks.');\n      }\n    }, [volume, track]);\n\n    React.useEffect(() => {\n      if (pub === undefined || muted === undefined) {\n        return;\n      }\n      if (pub instanceof RemoteTrackPublication) {\n        pub.setEnabled(!muted);\n      } else {\n        log.warn('Can only call setEnabled on remote track publications.');\n      }\n    }, [muted, pub, track]);\n\n    return <audio ref={mediaEl} {...elementProps} />;\n  },\n);\n","import * as React from 'react';\nimport type { UseParticipantsOptions } from '../../hooks';\nimport { useGridLayout, usePagination, useSwipe } from '../../hooks';\nimport { mergeProps } from '../../utils';\nimport type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { TrackLoop } from '../TrackLoop';\nimport { PaginationControl } from '../controls/PaginationControl';\nimport { PaginationIndicator } from '../controls/PaginationIndicator';\n\n/** @public */\nexport interface GridLayoutProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    Pick<UseParticipantsOptions, 'updateOnlyOn'> {\n  children: React.ReactNode;\n  tracks: TrackReferenceOrPlaceholder[];\n}\n\n/**\n * The `GridLayout` component displays the nested participants in a grid where every participants has the same size.\n * It also supports pagination if there are more participants than the grid can display.\n * @remarks\n * To ensure visual stability when tiles are reordered due to track updates,\n * the component uses the `useVisualStableUpdate` hook.\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <GridLayout tracks={tracks}>\n *     <ParticipantTile />\n *   </GridLayout>\n * <LiveKitRoom>\n * ```\n * @public\n */\nexport function GridLayout({ tracks, ...props }: GridLayoutProps) {\n  const gridEl = React.createRef<HTMLDivElement>();\n\n  const elementProps = React.useMemo(\n    () => mergeProps(props, { className: 'lk-grid-layout' }),\n    [props],\n  );\n  const { layout } = useGridLayout(gridEl, tracks.length);\n  const pagination = usePagination(layout.maxTiles, tracks);\n\n  useSwipe(gridEl, {\n    onLeftSwipe: pagination.nextPage,\n    onRightSwipe: pagination.prevPage,\n  });\n\n  return (\n    <div ref={gridEl} data-lk-pagination={pagination.totalPageCount > 1} {...elementProps}>\n      <TrackLoop tracks={pagination.tracks}>{props.children}</TrackLoop>\n      {tracks.length > layout.maxTiles && (\n        <>\n          <PaginationIndicator\n            totalPageCount={pagination.totalPageCount}\n            currentPage={pagination.currentPage}\n          />\n          <PaginationControl pagesContainer={gridEl} {...pagination} />\n        </>\n      )}\n    </div>\n  );\n}\n","import type { TrackReference, TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport * as React from 'react';\nimport { TrackRefContext } from '../context/track-reference-context';\nimport { cloneSingleChild } from '../utils';\nimport { getTrackReferenceId } from '@livekit/components-core';\n\n/** @public */\nexport interface TrackLoopProps {\n  /** Track references to loop over. You can the use `useTracks()` hook to get TrackReferences. */\n  tracks: TrackReference[] | TrackReferenceOrPlaceholder[];\n  /** The template component to be used in the loop. */\n  children: React.ReactNode;\n}\n\n/**\n * The `TrackLoop` component loops over tracks. It is for example a easy way to loop over all participant camera and screen share tracks.\n * `TrackLoop` creates a `TrackRefContext` for each track that you can use to e.g. render the track.\n *\n * @example\n * ```tsx\n * const trackRefs = useTracks([Track.Source.Camera]);\n * <TrackLoop tracks={trackRefs} >\n *  <TrackRefContext.Consumer>\n *    {(trackRef) => trackRef && <VideoTrack trackRef={trackRef}/>}\n *  </TrackRefContext.Consumer>\n * <TrackLoop />\n * ```\n * @public\n */\nexport function TrackLoop({ tracks, ...props }: TrackLoopProps) {\n  return (\n    <>\n      {tracks.map((trackReference) => {\n        return (\n          <TrackRefContext.Provider\n            value={trackReference}\n            key={getTrackReferenceId(trackReference)}\n          >\n            {cloneSingleChild(props.children)}\n          </TrackRefContext.Provider>\n        );\n      })}\n    </>\n  );\n}\n","import * as React from 'react';\nimport SvgChevron from '../../assets/icons/Chevron';\nimport type { usePagination } from '../../hooks';\nimport { createInteractingObservable } from '@livekit/components-core';\n\nexport interface PaginationControlProps\n  extends Pick<\n    ReturnType<typeof usePagination>,\n    'totalPageCount' | 'nextPage' | 'prevPage' | 'currentPage'\n  > {\n  /** Reference to an HTML element that holds the pages, while interacting (`mouseover`)\n   *  with it, the pagination controls will appear for a while. */\n  pagesContainer?: React.RefObject<HTMLElement>;\n}\n\nexport function PaginationControl({\n  totalPageCount,\n  nextPage,\n  prevPage,\n  currentPage,\n  pagesContainer: connectedElement,\n}: PaginationControlProps) {\n  const [interactive, setInteractive] = React.useState(false);\n  React.useEffect(() => {\n    let subscription:\n      | ReturnType<ReturnType<typeof createInteractingObservable>['subscribe']>\n      | undefined;\n    if (connectedElement) {\n      subscription = createInteractingObservable(connectedElement.current, 2000).subscribe(\n        setInteractive,\n      );\n    }\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [connectedElement]);\n\n  return (\n    <div className=\"lk-pagination-control\" data-lk-user-interaction={interactive}>\n      <button className=\"lk-button\" onClick={prevPage}>\n        <SvgChevron />\n      </button>\n      <span className=\"lk-pagination-count\">{`${currentPage} of ${totalPageCount}`}</span>\n      <button className=\"lk-button\" onClick={nextPage}>\n        <SvgChevron />\n      </button>\n    </div>\n  );\n}\n","import * as React from 'react';\n\nexport interface PaginationIndicatorProps {\n  totalPageCount: number;\n  currentPage: number;\n}\n\nexport const PaginationIndicator: (\n  props: PaginationIndicatorProps & React.RefAttributes<HTMLDivElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLDivElement, PaginationIndicatorProps>(\n  function PaginationIndicator({ totalPageCount, currentPage }: PaginationIndicatorProps, ref) {\n    const bubbles = new Array(totalPageCount).fill('').map((_, index) => {\n      if (index + 1 === currentPage) {\n        return <span data-lk-active key={index} />;\n      } else {\n        return <span key={index} />;\n      }\n    });\n\n    return (\n      <div ref={ref} className=\"lk-pagination-indicator\">\n        {bubbles}\n      </div>\n    );\n  },\n);\n","import type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\nimport { getScrollBarWidth } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useSize } from '../../hooks/internal';\nimport { useVisualStableUpdate } from '../../hooks';\nimport { TrackLoop } from '../TrackLoop';\n\nconst MIN_HEIGHT = 130;\nconst MIN_WIDTH = 140;\nconst MIN_VISIBLE_TILES = 1;\nconst ASPECT_RATIO = 16 / 10;\nconst ASPECT_RATIO_INVERT = (1 - ASPECT_RATIO) * -1;\n\n/** @public */\nexport interface CarouselLayoutProps extends React.HTMLAttributes<HTMLMediaElement> {\n  tracks: TrackReferenceOrPlaceholder[];\n  children: React.ReactNode;\n  /** Place the tiles vertically or horizontally next to each other.\n   * If undefined orientation is guessed by the dimensions of the container. */\n  orientation?: 'vertical' | 'horizontal';\n}\n\n/**\n * The `CarouselLayout` component displays a list of tracks in a scroll container.\n * It will display as many tiles as possible and overflow the rest.\n * @remarks\n * To ensure visual stability when tiles are reordered due to track updates,\n * the component uses the `useVisualStableUpdate` hook.\n * @example\n * ```tsx\n * const tracks = useTracks([Track.Source.Camera]);\n * <CarouselLayout tracks={tracks}>\n *   <ParticipantTile />\n * </CarouselLayout>\n * ```\n * @public\n */\nexport function CarouselLayout({ tracks, orientation, ...props }: CarouselLayoutProps) {\n  const asideEl = React.useRef<HTMLDivElement>(null);\n  const [prevTiles, setPrevTiles] = React.useState(0);\n  const { width, height } = useSize(asideEl);\n  const carouselOrientation = orientation\n    ? orientation\n    : height >= width\n      ? 'vertical'\n      : 'horizontal';\n\n  const tileSpan =\n    carouselOrientation === 'vertical'\n      ? Math.max(width * ASPECT_RATIO_INVERT, MIN_HEIGHT)\n      : Math.max(height * ASPECT_RATIO, MIN_WIDTH);\n  const scrollBarWidth = getScrollBarWidth();\n\n  const tilesThatFit =\n    carouselOrientation === 'vertical'\n      ? Math.max((height - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES)\n      : Math.max((width - scrollBarWidth) / tileSpan, MIN_VISIBLE_TILES);\n\n  let maxVisibleTiles = Math.round(tilesThatFit);\n  if (Math.abs(tilesThatFit - prevTiles) < 0.5) {\n    maxVisibleTiles = Math.round(prevTiles);\n  } else if (prevTiles !== tilesThatFit) {\n    setPrevTiles(tilesThatFit);\n  }\n\n  const sortedTiles = useVisualStableUpdate(tracks, maxVisibleTiles);\n\n  React.useLayoutEffect(() => {\n    if (asideEl.current) {\n      asideEl.current.dataset.lkOrientation = carouselOrientation;\n      asideEl.current.style.setProperty('--lk-max-visible-tiles', maxVisibleTiles.toString());\n    }\n  }, [maxVisibleTiles, carouselOrientation]);\n\n  return (\n    <aside key={carouselOrientation} className=\"lk-carousel\" ref={asideEl} {...props}>\n      <TrackLoop tracks={sortedTiles}>{props.children}</TrackLoop>\n    </aside>\n  );\n}\n","import type { PinState, WidgetState } from '@livekit/components-core';\nimport { log } from '@livekit/components-core';\nimport * as React from 'react';\nimport type { LayoutContextType } from '../../context';\nimport { LayoutContext, useEnsureCreateLayoutContext } from '../../context';\n\n/** @alpha */\nexport interface LayoutContextProviderProps {\n  value?: LayoutContextType;\n  onPinChange?: (state: PinState) => void;\n  onWidgetChange?: (state: WidgetState) => void;\n}\n\n/** @alpha */\nexport function LayoutContextProvider({\n  value,\n  onPinChange,\n  onWidgetChange,\n  children,\n}: React.PropsWithChildren<LayoutContextProviderProps>) {\n  const layoutContextValue = useEnsureCreateLayoutContext(value);\n\n  React.useEffect(() => {\n    log.debug('PinState Updated', { state: layoutContextValue.pin.state });\n    if (onPinChange && layoutContextValue.pin.state) onPinChange(layoutContextValue.pin.state);\n  }, [layoutContextValue.pin.state, onPinChange]);\n\n  React.useEffect(() => {\n    log.debug('Widget Updated', { widgetState: layoutContextValue.widget.state });\n    if (onWidgetChange && layoutContextValue.widget.state) {\n      onWidgetChange(layoutContextValue.widget.state);\n    }\n  }, [onWidgetChange, layoutContextValue.widget.state]);\n\n  return <LayoutContext.Provider value={layoutContextValue}>{children}</LayoutContext.Provider>;\n}\n","import type {\n  AudioCaptureOptions,\n  RoomConnectOptions,\n  RoomOptions,\n  ScreenShareCaptureOptions,\n  VideoCaptureOptions,\n} from 'livekit-client';\nimport type { MediaDeviceFailure, Room } from 'livekit-client';\nimport * as React from 'react';\nimport { type FeatureFlags, LKFeatureContext, RoomContext } from '../context';\nimport { useLiveKitRoom } from '../hooks';\n\n/** @public */\nexport interface LiveKitRoomProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onError'> {\n  /**\n   * URL to the LiveKit server.\n   * For example: `wss://<domain>.livekit.cloud`\n   * To simplify the implementation, `undefined` is also accepted as an intermediate value, but only with a valid string url can the connection be established.\n   */\n  serverUrl: string | undefined;\n  /**\n   * A user specific access token for a client to authenticate to the room.\n   * This token is necessary to establish a connection to the room.\n   * To simplify the implementation, `undefined` is also accepted as an intermediate value, but only with a valid string token can the connection be established.\n   *\n   * @see https://docs.livekit.io/cloud/project-management/keys-and-tokens/#generating-access-tokens\n   */\n  token: string | undefined;\n  /**\n   * Publish audio immediately after connecting to your LiveKit room.\n   * @defaultValue `false`\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/AudioCaptureOptions.html\n   */\n  audio?: AudioCaptureOptions | boolean;\n  /**\n   * Publish video immediately after connecting to your LiveKit room.\n   * @defaultValue `false`\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/VideoCaptureOptions.html\n   */\n  video?: VideoCaptureOptions | boolean;\n  /**\n   * Publish screen share immediately after connecting to your LiveKit room.\n   * @defaultValue `false`\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/ScreenShareCaptureOptions.html\n   */\n  screen?: ScreenShareCaptureOptions | boolean;\n  /**\n   * If set to true a connection to LiveKit room is initiated.\n   * @defaultValue `true`\n   */\n  connect?: boolean;\n  /**\n   * Options for when creating a new room.\n   * When you pass your own room instance to this component, these options have no effect.\n   * Instead, set the options directly in the room instance.\n   *\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/RoomOptions.html\n   */\n  options?: RoomOptions;\n  /**\n   * Define options how to connect to the LiveKit server.\n   *\n   * @see https://docs.livekit.io/client-sdk-js/interfaces/RoomConnectOptions.html\n   */\n  connectOptions?: RoomConnectOptions;\n  onConnected?: () => void;\n  onDisconnected?: () => void;\n  onError?: (error: Error) => void;\n  onMediaDeviceFailure?: (failure?: MediaDeviceFailure) => void;\n  onEncryptionError?: (error: Error) => void;\n  /**\n   * Optional room instance.\n   * By passing your own room instance you overwrite the `options` parameter,\n   * make sure to set the options directly on the room instance itself.\n   */\n  room?: Room;\n\n  simulateParticipants?: number | undefined;\n\n  /**\n   * @internal\n   */\n  featureFlags?: FeatureFlags;\n}\n\n/**\n * The `LiveKitRoom` component provides the room context to all its child components.\n * It is generally the starting point of your LiveKit app and the root of the LiveKit component tree.\n * It provides the room state as a React context to all child components, so you don't have to pass it yourself.\n *\n * @example\n * ```tsx\n * <LiveKitRoom\n *  token='<livekit-token>'\n *  serverUrl='<url-to-livekit-server>'\n *  connect={true}\n * >\n *     ...\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport const LiveKitRoom: (\n  props: React.PropsWithChildren<LiveKitRoomProps> & React.RefAttributes<HTMLDivElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<LiveKitRoomProps>\n>(function LiveKitRoom(props: React.PropsWithChildren<LiveKitRoomProps>, ref) {\n  const { room, htmlProps } = useLiveKitRoom(props);\n  return (\n    <div ref={ref} {...htmlProps}>\n      {room && (\n        <RoomContext.Provider value={room}>\n          <LKFeatureContext.Provider value={props.featureFlags}>\n            {props.children}\n          </LKFeatureContext.Provider>\n        </RoomContext.Provider>\n      )}\n    </div>\n  );\n});\n","import * as React from 'react';\nimport { type TrackReference } from '@livekit/components-core';\nimport { useEnsureTrackRef } from '../../context';\nimport { useMultibandTrackVolume } from '../../hooks';\n\n/** @public */\nexport interface AudioVisualizerProps extends React.HTMLAttributes<SVGElement> {\n  trackRef?: TrackReference;\n}\n\n/**\n * The AudioVisualizer component is used to visualize the audio volume of a given audio track.\n * @remarks\n * Requires a `TrackReferenceOrPlaceholder` to be provided either as a property or via the `TrackRefContext`.\n * @example\n * ```tsx\n * <AudioVisualizer />\n * ```\n * @public\n */\nexport const AudioVisualizer: (\n  props: AudioVisualizerProps & React.RefAttributes<SVGSVGElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<SVGSVGElement, AudioVisualizerProps>(\n  function AudioVisualizer({ trackRef, ...props }: AudioVisualizerProps, ref) {\n    const svgWidth = 200;\n    const svgHeight = 90;\n    const barWidth = 6;\n    const barSpacing = 4;\n    const volMultiplier = 50;\n    const barCount = 7;\n    const trackReference = useEnsureTrackRef(trackRef);\n\n    const volumes = useMultibandTrackVolume(trackReference, { bands: 7, loPass: 300 });\n\n    return (\n      <svg\n        ref={ref}\n        width=\"100%\"\n        height=\"100%\"\n        viewBox={`0 0 ${svgWidth} ${svgHeight}`}\n        {...props}\n        className=\"lk-audio-visualizer\"\n      >\n        <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n        <g\n          style={{\n            transform: `translate(${(svgWidth - barCount * (barWidth + barSpacing)) / 2}px, 0)`,\n          }}\n        >\n          {volumes.map((vol, idx) => (\n            <rect\n              key={idx}\n              x={idx * (barWidth + barSpacing)}\n              y={svgHeight / 2 - (vol * volMultiplier) / 2}\n              width={barWidth}\n              height={vol * volMultiplier}\n            ></rect>\n          ))}\n        </g>\n      </svg>\n    );\n  },\n);\n","import type { Participant } from 'livekit-client';\nimport * as React from 'react';\nimport { ParticipantContext } from '../context';\nimport { cloneSingleChild } from '../utils';\n\n/** @public */\nexport interface ParticipantLoopProps {\n  /** The participants to loop over. Use `useParticipants()` hook to get participants. */\n  participants: Participant[];\n  /** The template component to be used in the loop. */\n  children: React.ReactNode;\n}\n\n/**\n * The `ParticipantLoop` component loops over an array of participants to create a context for every participant.\n * This component takes exactly one child component as a template.\n * By providing your own template as a child you have full control over the look and feel of your participant representations.\n *\n * @remarks\n * If you want to loop over individual tracks instead of participants, you can use the `TrackLoop` component.\n *\n * @example\n * ```tsx\n * const participants = useParticipants();\n * <ParticipantLoop participants={participants}>\n *   <ParticipantName />\n * <ParticipantLoop />\n * ```\n * @public\n */\nexport function ParticipantLoop({ participants, ...props }: ParticipantLoopProps) {\n  return (\n    <>\n      {participants.map((participant) => (\n        <ParticipantContext.Provider value={participant} key={participant.identity}>\n          {cloneSingleChild(props.children)}\n        </ParticipantContext.Provider>\n      ))}\n    </>\n  );\n}\n","import { getTrackReferenceId, isLocal } from '@livekit/components-core';\nimport { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { useTracks } from '../hooks';\nimport { AudioTrack } from './participant/AudioTrack';\n\n/** @public */\nexport interface RoomAudioRendererProps {\n  /** Sets the volume for all audio tracks rendered by this component. By default, the range is between `0.0` and `1.0`. */\n  volume?: number;\n  /**\n   * If set to `true`, mutes all audio tracks rendered by the component.\n   * @remarks\n   * If set to `true`, the server will stop sending audio track data to the client.\n   * @alpha\n   */\n  muted?: boolean;\n}\n\n/**\n * The `RoomAudioRenderer` component is a drop-in solution for adding audio to your LiveKit app.\n * It takes care of handling remote participants’ audio tracks and makes sure that microphones and screen share are audible.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <RoomAudioRenderer />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function RoomAudioRenderer({ volume, muted }: RoomAudioRendererProps) {\n  const tracks = useTracks(\n    [Track.Source.Microphone, Track.Source.ScreenShareAudio, Track.Source.Unknown],\n    {\n      updateOnlyOn: [],\n      onlySubscribed: true,\n    },\n  ).filter((ref) => !isLocal(ref.participant) && ref.publication.kind === Track.Kind.Audio);\n\n  return (\n    <div style={{ display: 'none' }}>\n      {tracks.map((trackRef) => (\n        <AudioTrack\n          key={getTrackReferenceId(trackRef)}\n          trackRef={trackRef}\n          volume={volume}\n          muted={muted}\n        />\n      ))}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useRoomInfo } from '../hooks';\n\n/** @public */\nexport interface RoomNameProps extends React.HTMLAttributes<HTMLSpanElement> {\n  childrenPosition?: 'before' | 'after';\n}\n\n/**\n * The `RoomName` component renders the name of the connected LiveKit room inside a span tag.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <RoomName />\n * </LiveKitRoom>\n * ```\n * @public\n *\n * @param props - RoomNameProps\n */\nexport const RoomName: (\n  props: RoomNameProps & React.RefAttributes<HTMLSpanElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLSpanElement, RoomNameProps>(\n  function RoomName(\n    { childrenPosition = 'before', children, ...htmlAttributes }: RoomNameProps,\n    ref,\n  ) {\n    const { name } = useRoomInfo();\n\n    return (\n      <span ref={ref} {...htmlAttributes}>\n        {childrenPosition === 'before' && children}\n        {name}\n        {childrenPosition === 'after' && children}\n      </span>\n    );\n  },\n);\n","import * as React from 'react';\nimport { mergeProps } from '../utils';\n\n/**\n * The `Toast` component is a rudimentary way to display a message to the user.\n * This message should be short lived and not require user interaction.\n * For example, displaying the current connection state like `ConnectionStateToast` does.\n *\n * @example\n * ```tsx\n * <Toast>Connecting...</Toast>\n * ```\n * @public\n */\nexport function Toast(props: React.HTMLAttributes<HTMLDivElement>) {\n  const htmlProps = React.useMemo(() => mergeProps(props, { className: 'lk-toast' }), [props]);\n  return <div {...htmlProps}>{props.children}</div>;\n}\n","import * as React from 'react';\n\nimport { ConnectionQualityIndicator } from './ConnectionQualityIndicator';\nimport { ParticipantName } from './ParticipantName';\nimport { TrackMutedIndicator } from './TrackMutedIndicator';\nimport { TrackRefContext, useEnsureTrackRef } from '../../context';\n\nimport { AudioVisualizer } from './AudioVisualizer';\nimport type { ParticipantTileProps } from './ParticipantTile';\nimport { AudioTrack } from './AudioTrack';\nimport { useParticipantTile } from '../../hooks';\nimport { isTrackReference } from '@livekit/components-core';\n\n/**\n * The `ParticipantAudioTile` component is the base utility wrapper for displaying a visual representation of a participant.\n * This component can be used as a child of the `TileLoop` or independently if a participant is passed as a property.\n *\n * @example\n * ```tsx\n * <ParticipantAudioTile />\n * ```\n * @public\n */\nexport const ParticipantAudioTile: (\n  props: ParticipantTileProps & React.RefAttributes<HTMLDivElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLDivElement, ParticipantTileProps>(\n  function ParticipantAudioTile(\n    {\n      children,\n      disableSpeakingIndicator,\n      onParticipantClick,\n      trackRef,\n      ...htmlProps\n    }: ParticipantTileProps,\n    ref,\n  ) {\n    const trackReference = useEnsureTrackRef(trackRef);\n    const { elementProps } = useParticipantTile({\n      trackRef: trackReference,\n      htmlProps,\n      disableSpeakingIndicator,\n      onParticipantClick,\n    });\n\n    return (\n      <div ref={ref} style={{ position: 'relative' }} {...elementProps}>\n        <TrackRefContext.Provider value={trackReference}>\n          {children ?? (\n            <>\n              {isTrackReference(trackReference) && (\n                <AudioTrack trackRef={trackReference}></AudioTrack>\n              )}\n              <AudioVisualizer />\n              <div className=\"lk-participant-metadata\">\n                <div className=\"lk-participant-metadata-item\">\n                  <TrackMutedIndicator trackRef={trackReference}></TrackMutedIndicator>\n                  <ParticipantName />\n                </div>\n                <ConnectionQualityIndicator className=\"lk-participant-metadata-item\" />\n              </div>\n            </>\n          )}\n        </TrackRefContext.Provider>\n      </div>\n    );\n  },\n);\n","import type { Room } from 'livekit-client';\nimport { ConnectionState } from 'livekit-client';\nimport * as React from 'react';\nimport { SpinnerIcon } from '../assets/icons';\nimport { useConnectionState } from '../hooks';\nimport { Toast } from './Toast';\n\n/** @public */\nexport interface ConnectionStateToastProps extends React.HTMLAttributes<HTMLDivElement> {\n  room?: Room;\n}\n\n/**\n * The `ConnectionStateToast` component displays a toast\n * notification indicating the current connection state of the room.\n * @public\n */\nexport function ConnectionStateToast(props: ConnectionStateToastProps) {\n  const [notification, setNotification] = React.useState<React.ReactElement | undefined>(undefined);\n  const state = useConnectionState(props.room);\n\n  React.useEffect(() => {\n    switch (state) {\n      case ConnectionState.Reconnecting:\n        setNotification(\n          <>\n            <SpinnerIcon className=\"lk-spinner\" /> Reconnecting\n          </>,\n        );\n        break;\n      case ConnectionState.Connecting:\n        setNotification(\n          <>\n            <SpinnerIcon className=\"lk-spinner\" /> Connecting\n          </>,\n        );\n        break;\n      case ConnectionState.Disconnected:\n        setNotification(<>Disconnected</>);\n        break;\n      default:\n        setNotification(undefined);\n        break;\n    }\n  }, [state]);\n  return notification ? <Toast className=\"lk-toast-connection-state\">{notification}</Toast> : <></>;\n}\n","import type { ReceivedChatMessage } from '@livekit/components-core';\nimport { tokenize, createDefaultGrammar } from '@livekit/components-core';\nimport * as React from 'react';\n\n/** @public */\nexport type MessageFormatter = (message: string) => React.ReactNode;\n\n/**\n * ChatEntry composes the HTML div element under the hood, so you can pass all its props.\n * These are the props specific to the ChatEntry component:\n * @public\n */\nexport interface ChatEntryProps extends React.HTMLAttributes<HTMLLIElement> {\n  /** The chat massage object to display. */\n  entry: ReceivedChatMessage;\n  /** Hide sender name. Useful when displaying multiple consecutive chat messages from the same person. */\n  hideName?: boolean;\n  /** Hide message timestamp. */\n  hideTimestamp?: boolean;\n  /** An optional formatter for the message body. */\n  messageFormatter?: MessageFormatter;\n}\n\n/**\n * The `ChatEntry` component holds and displays one chat message.\n *\n * @example\n * ```tsx\n * <Chat>\n *   <ChatEntry />\n * </Chat>\n * ```\n * @see `Chat`\n * @public\n */\nexport const ChatEntry: (\n  props: ChatEntryProps & React.RefAttributes<HTMLLIElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLLIElement, ChatEntryProps>(\n  function ChatEntry(\n    { entry, hideName = false, hideTimestamp = false, messageFormatter, ...props }: ChatEntryProps,\n    ref,\n  ) {\n    const formattedMessage = React.useMemo(() => {\n      return messageFormatter ? messageFormatter(entry.message) : entry.message;\n    }, [entry.message, messageFormatter]);\n    const hasBeenEdited = !!entry.editTimestamp;\n    const time = new Date(entry.timestamp);\n    const locale = navigator ? navigator.language : 'en-US';\n\n    return (\n      <li\n        ref={ref}\n        className=\"lk-chat-entry\"\n        title={time.toLocaleTimeString(locale, { timeStyle: 'full' })}\n        data-lk-message-origin={entry.from?.isLocal ? 'local' : 'remote'}\n        {...props}\n      >\n        {(!hideTimestamp || !hideName || hasBeenEdited) && (\n          <span className=\"lk-meta-data\">\n            {!hideName && (\n              <strong className=\"lk-participant-name\">\n                {entry.from?.name ?? entry.from?.identity}\n              </strong>\n            )}\n\n            {(!hideTimestamp || hasBeenEdited) && (\n              <span className=\"lk-timestamp\">\n                {hasBeenEdited && 'edited '}\n                {time.toLocaleTimeString(locale, { timeStyle: 'short' })}\n              </span>\n            )}\n          </span>\n        )}\n\n        <span className=\"lk-message-body\">{formattedMessage}</span>\n      </li>\n    );\n  },\n);\n\n/** @public */\nexport function formatChatMessageLinks(message: string): React.ReactNode {\n  return tokenize(message, createDefaultGrammar()).map((tok, i) => {\n    if (typeof tok === `string`) {\n      return tok;\n    } else {\n      const content = tok.content.toString();\n      const href =\n        tok.type === `url`\n          ? /^http(s?):\\/\\//.test(content)\n            ? content\n            : `https://${content}`\n          : `mailto:${content}`;\n      return (\n        <a className=\"lk-chat-link\" key={i} href={href} target=\"_blank\" rel=\"noreferrer\">\n          {content}\n        </a>\n      );\n    }\n  });\n}\n","import type { ChatMessage, ChatOptions } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useMaybeLayoutContext } from '../context';\nimport { cloneSingleChild } from '../utils';\nimport type { MessageFormatter } from '../components/ChatEntry';\nimport { ChatEntry } from '../components/ChatEntry';\nimport { useChat } from '../hooks/useChat';\nimport { ChatToggle } from '../components';\nimport { ChatCloseIcon } from '../assets/icons';\n\n/** @public */\nexport interface ChatProps extends React.HTMLAttributes<HTMLDivElement>, ChatOptions {\n  messageFormatter?: MessageFormatter;\n}\n\n/**\n * The Chat component adds a basis chat functionality to the LiveKit room. The messages are distributed to all participants\n * in the room. Only users who are in the room at the time of dispatch will receive the message.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <Chat />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function Chat({\n  messageFormatter,\n  messageDecoder,\n  messageEncoder,\n  channelTopic,\n  ...props\n}: ChatProps) {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const ulRef = React.useRef<HTMLUListElement>(null);\n\n  const chatOptions: ChatOptions = React.useMemo(() => {\n    return { messageDecoder, messageEncoder, channelTopic };\n  }, [messageDecoder, messageEncoder, channelTopic]);\n\n  const { send, chatMessages, isSending } = useChat(chatOptions);\n\n  const layoutContext = useMaybeLayoutContext();\n  const lastReadMsgAt = React.useRef<ChatMessage['timestamp']>(0);\n\n  async function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (inputRef.current && inputRef.current.value.trim() !== '') {\n      if (send) {\n        await send(inputRef.current.value);\n        inputRef.current.value = '';\n        inputRef.current.focus();\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    if (ulRef) {\n      ulRef.current?.scrollTo({ top: ulRef.current.scrollHeight });\n    }\n  }, [ulRef, chatMessages]);\n\n  React.useEffect(() => {\n    if (!layoutContext || chatMessages.length === 0) {\n      return;\n    }\n\n    if (\n      layoutContext.widget.state?.showChat &&\n      chatMessages.length > 0 &&\n      lastReadMsgAt.current !== chatMessages[chatMessages.length - 1]?.timestamp\n    ) {\n      lastReadMsgAt.current = chatMessages[chatMessages.length - 1]?.timestamp;\n      return;\n    }\n\n    const unreadMessageCount = chatMessages.filter(\n      (msg) => !lastReadMsgAt.current || msg.timestamp > lastReadMsgAt.current,\n    ).length;\n\n    const { widget } = layoutContext;\n    if (unreadMessageCount > 0 && widget.state?.unreadMessages !== unreadMessageCount) {\n      widget.dispatch?.({ msg: 'unread_msg', count: unreadMessageCount });\n    }\n  }, [chatMessages, layoutContext?.widget]);\n\n  return (\n    <div {...props} className=\"lk-chat\">\n      <div className=\"lk-chat-header\">\n        Messages\n        <ChatToggle className=\"lk-close-button\">\n          <ChatCloseIcon />\n        </ChatToggle>\n      </div>\n\n      <ul className=\"lk-list lk-chat-messages\" ref={ulRef}>\n        {props.children\n          ? chatMessages.map((msg, idx) =>\n              cloneSingleChild(props.children, {\n                entry: msg,\n                key: msg.id ?? idx,\n                messageFormatter,\n              }),\n            )\n          : chatMessages.map((msg, idx, allMsg) => {\n              const hideName = idx >= 1 && allMsg[idx - 1].from === msg.from;\n              // If the time delta between two messages is bigger than 60s show timestamp.\n              const hideTimestamp = idx >= 1 && msg.timestamp - allMsg[idx - 1].timestamp < 60_000;\n\n              return (\n                <ChatEntry\n                  key={msg.id ?? idx}\n                  hideName={hideName}\n                  hideTimestamp={hideName === false ? false : hideTimestamp} // If we show the name always show the timestamp as well.\n                  entry={msg}\n                  messageFormatter={messageFormatter}\n                />\n              );\n            })}\n      </ul>\n      <form className=\"lk-chat-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"lk-form-control lk-chat-form-input\"\n          disabled={isSending}\n          ref={inputRef}\n          type=\"text\"\n          placeholder=\"Enter a message...\"\n          onInput={(ev) => ev.stopPropagation()}\n          onKeyDown={(ev) => ev.stopPropagation()}\n          onKeyUp={(ev) => ev.stopPropagation()}\n        />\n        <button type=\"submit\" className=\"lk-button lk-chat-form-button\" disabled={isSending}>\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n","import type {\n  CreateLocalTracksOptions,\n  LocalAudioTrack,\n  LocalTrack,\n  LocalVideoTrack,\n} from 'livekit-client';\nimport {\n  createLocalAudioTrack,\n  createLocalTracks,\n  createLocalVideoTrack,\n  facingModeFromLocalTrack,\n  Track,\n  VideoPresets,\n  Mutex,\n} from 'livekit-client';\nimport * as React from 'react';\nimport { MediaDeviceMenu } from './MediaDeviceMenu';\nimport { TrackToggle } from '../components/controls/TrackToggle';\nimport type { LocalUserChoices } from '@livekit/components-core';\nimport { log } from '@livekit/components-core';\nimport { ParticipantPlaceholder } from '../assets/images';\nimport { useMediaDevices, usePersistentUserChoices } from '../hooks';\nimport { useWarnAboutMissingStyles } from '../hooks/useWarnAboutMissingStyles';\nimport { defaultUserChoices } from '@livekit/components-core';\n\n/**\n * Props for the PreJoin component.\n * @public\n */\nexport interface PreJoinProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onSubmit' | 'onError'> {\n  /** This function is called with the `LocalUserChoices` if validation is passed. */\n  onSubmit?: (values: LocalUserChoices) => void;\n  /**\n   * Provide your custom validation function. Only if validation is successful the user choices are past to the onSubmit callback.\n   */\n  onValidate?: (values: LocalUserChoices) => boolean;\n  onError?: (error: Error) => void;\n  /** Prefill the input form with initial values. */\n  defaults?: Partial<LocalUserChoices>;\n  /** Display a debug window for your convenience. */\n  debug?: boolean;\n  joinLabel?: string;\n  micLabel?: string;\n  camLabel?: string;\n  userLabel?: string;\n  /**\n   * If true, user choices are persisted across sessions.\n   * @defaultValue true\n   * @alpha\n   */\n  persistUserChoices?: boolean;\n}\n\n/** @alpha */\nexport function usePreviewTracks(\n  options: CreateLocalTracksOptions,\n  onError?: (err: Error) => void,\n) {\n  const [tracks, setTracks] = React.useState<LocalTrack[]>();\n\n  const trackLock = React.useMemo(() => new Mutex(), []);\n\n  React.useEffect(() => {\n    let needsCleanup = false;\n    let localTracks: Array<LocalTrack> = [];\n    trackLock.lock().then(async (unlock) => {\n      try {\n        if (options.audio || options.video) {\n          localTracks = await createLocalTracks(options);\n\n          if (needsCleanup) {\n            localTracks.forEach((tr) => tr.stop());\n          } else {\n            setTracks(localTracks);\n          }\n        }\n      } catch (e: unknown) {\n        if (onError && e instanceof Error) {\n          onError(e);\n        } else {\n          log.error(e);\n        }\n      } finally {\n        unlock();\n      }\n    });\n\n    return () => {\n      needsCleanup = true;\n      localTracks.forEach((track) => {\n        track.stop();\n      });\n    };\n  }, [JSON.stringify(options), onError, trackLock]);\n\n  return tracks;\n}\n\n/** @public */\nexport function usePreviewDevice<T extends LocalVideoTrack | LocalAudioTrack>(\n  enabled: boolean,\n  deviceId: string,\n  kind: 'videoinput' | 'audioinput',\n) {\n  const [deviceError, setDeviceError] = React.useState<Error | null>(null);\n  const [isCreatingTrack, setIsCreatingTrack] = React.useState<boolean>(false);\n\n  const devices = useMediaDevices({ kind });\n  const [selectedDevice, setSelectedDevice] = React.useState<MediaDeviceInfo | undefined>(\n    undefined,\n  );\n\n  const [localTrack, setLocalTrack] = React.useState<T>();\n  const [localDeviceId, setLocalDeviceId] = React.useState<string>(deviceId);\n\n  React.useEffect(() => {\n    setLocalDeviceId(deviceId);\n  }, [deviceId]);\n\n  const createTrack = async (deviceId: string, kind: 'videoinput' | 'audioinput') => {\n    try {\n      const track =\n        kind === 'videoinput'\n          ? await createLocalVideoTrack({\n              deviceId: deviceId,\n              resolution: VideoPresets.h720.resolution,\n            })\n          : await createLocalAudioTrack({ deviceId });\n\n      const newDeviceId = await track.getDeviceId();\n      if (newDeviceId && deviceId !== newDeviceId) {\n        prevDeviceId.current = newDeviceId;\n        setLocalDeviceId(newDeviceId);\n      }\n      setLocalTrack(track as T);\n    } catch (e) {\n      if (e instanceof Error) {\n        setDeviceError(e);\n      }\n    }\n  };\n\n  const switchDevice = async (track: LocalVideoTrack | LocalAudioTrack, id: string) => {\n    await track.setDeviceId(id);\n    prevDeviceId.current = id;\n  };\n\n  const prevDeviceId = React.useRef(localDeviceId);\n\n  React.useEffect(() => {\n    if (enabled && !localTrack && !deviceError && !isCreatingTrack) {\n      log.debug('creating track', kind);\n      setIsCreatingTrack(true);\n      createTrack(localDeviceId, kind).finally(() => {\n        setIsCreatingTrack(false);\n      });\n    }\n  }, [enabled, localTrack, deviceError, isCreatingTrack]);\n\n  // switch camera device\n  React.useEffect(() => {\n    if (!localTrack) {\n      return;\n    }\n    if (!enabled) {\n      log.debug(`muting ${kind} track`);\n      localTrack.mute().then(() => log.debug(localTrack.mediaStreamTrack));\n    } else if (selectedDevice?.deviceId && prevDeviceId.current !== selectedDevice?.deviceId) {\n      log.debug(`switching ${kind} device from`, prevDeviceId.current, selectedDevice.deviceId);\n      switchDevice(localTrack, selectedDevice.deviceId);\n    } else {\n      log.debug(`unmuting local ${kind} track`);\n      localTrack.unmute();\n    }\n  }, [localTrack, selectedDevice, enabled, kind]);\n\n  React.useEffect(() => {\n    return () => {\n      if (localTrack) {\n        log.debug(`stopping local ${kind} track`);\n        localTrack.stop();\n        localTrack.mute();\n      }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    setSelectedDevice(devices?.find((dev) => dev.deviceId === localDeviceId));\n  }, [localDeviceId, devices]);\n\n  return {\n    selectedDevice,\n    localTrack,\n    deviceError,\n  };\n}\n\n/**\n * The `PreJoin` prefab component is normally presented to the user before he enters a room.\n * This component allows the user to check and select the preferred media device (camera und microphone).\n * On submit the user decisions are returned, which can then be passed on to the `LiveKitRoom` so that the user enters the room with the correct media devices.\n *\n * @remarks\n * This component is independent of the `LiveKitRoom` component and should not be nested within it.\n * Because it only access the local media tracks this component is self contained and works without connection to the LiveKit server.\n *\n * @example\n * ```tsx\n * <PreJoin />\n * ```\n * @public\n */\nexport function PreJoin({\n  defaults = {},\n  onValidate,\n  onSubmit,\n  onError,\n  debug,\n  joinLabel = 'Join Room',\n  micLabel = 'Microphone',\n  camLabel = 'Camera',\n  userLabel = 'Username',\n  persistUserChoices = true,\n  ...htmlProps\n}: PreJoinProps) {\n  const [userChoices, setUserChoices] = React.useState(defaultUserChoices);\n\n  // TODO: Remove and pipe `defaults` object directly into `usePersistentUserChoices` once we fully switch from type `LocalUserChoices` to `UserChoices`.\n  const partialDefaults: Partial<LocalUserChoices> = {\n    ...(defaults.audioDeviceId !== undefined && { audioDeviceId: defaults.audioDeviceId }),\n    ...(defaults.videoDeviceId !== undefined && { videoDeviceId: defaults.videoDeviceId }),\n    ...(defaults.audioEnabled !== undefined && { audioEnabled: defaults.audioEnabled }),\n    ...(defaults.videoEnabled !== undefined && { videoEnabled: defaults.videoEnabled }),\n    ...(defaults.username !== undefined && { username: defaults.username }),\n  };\n\n  const {\n    userChoices: initialUserChoices,\n    saveAudioInputDeviceId,\n    saveAudioInputEnabled,\n    saveVideoInputDeviceId,\n    saveVideoInputEnabled,\n    saveUsername,\n  } = usePersistentUserChoices({\n    defaults: partialDefaults,\n    preventSave: !persistUserChoices,\n    preventLoad: !persistUserChoices,\n  });\n\n  // Initialize device settings\n  const [audioEnabled, setAudioEnabled] = React.useState<boolean>(initialUserChoices.audioEnabled);\n  const [videoEnabled, setVideoEnabled] = React.useState<boolean>(initialUserChoices.videoEnabled);\n  const [audioDeviceId, setAudioDeviceId] = React.useState<string>(\n    initialUserChoices.audioDeviceId,\n  );\n  const [videoDeviceId, setVideoDeviceId] = React.useState<string>(\n    initialUserChoices.videoDeviceId,\n  );\n  const [username, setUsername] = React.useState(initialUserChoices.username);\n\n  // Save user choices to persistent storage.\n  React.useEffect(() => {\n    saveAudioInputEnabled(audioEnabled);\n  }, [audioEnabled, saveAudioInputEnabled]);\n  React.useEffect(() => {\n    saveVideoInputEnabled(videoEnabled);\n  }, [videoEnabled, saveVideoInputEnabled]);\n  React.useEffect(() => {\n    saveAudioInputDeviceId(audioDeviceId);\n  }, [audioDeviceId, saveAudioInputDeviceId]);\n  React.useEffect(() => {\n    saveVideoInputDeviceId(videoDeviceId);\n  }, [videoDeviceId, saveVideoInputDeviceId]);\n  React.useEffect(() => {\n    saveUsername(username);\n  }, [username, saveUsername]);\n\n  const tracks = usePreviewTracks(\n    {\n      audio: audioEnabled ? { deviceId: initialUserChoices.audioDeviceId } : false,\n      video: videoEnabled ? { deviceId: initialUserChoices.videoDeviceId } : false,\n    },\n    onError,\n  );\n\n  const videoEl = React.useRef(null);\n\n  const videoTrack = React.useMemo(\n    () => tracks?.filter((track) => track.kind === Track.Kind.Video)[0] as LocalVideoTrack,\n    [tracks],\n  );\n\n  const facingMode = React.useMemo(() => {\n    if (videoTrack) {\n      const { facingMode } = facingModeFromLocalTrack(videoTrack);\n      return facingMode;\n    } else {\n      return 'undefined';\n    }\n  }, [videoTrack]);\n\n  const audioTrack = React.useMemo(\n    () => tracks?.filter((track) => track.kind === Track.Kind.Audio)[0] as LocalAudioTrack,\n    [tracks],\n  );\n\n  React.useEffect(() => {\n    if (videoEl.current && videoTrack) {\n      videoTrack.unmute();\n      videoTrack.attach(videoEl.current);\n    }\n\n    return () => {\n      videoTrack?.detach();\n    };\n  }, [videoTrack]);\n\n  const [isValid, setIsValid] = React.useState<boolean>();\n\n  const handleValidation = React.useCallback(\n    (values: LocalUserChoices) => {\n      if (typeof onValidate === 'function') {\n        return onValidate(values);\n      } else {\n        return values.username !== '';\n      }\n    },\n    [onValidate],\n  );\n\n  React.useEffect(() => {\n    const newUserChoices = {\n      username,\n      videoEnabled,\n      videoDeviceId,\n      audioEnabled,\n      audioDeviceId,\n    };\n    setUserChoices(newUserChoices);\n    setIsValid(handleValidation(newUserChoices));\n  }, [username, videoEnabled, handleValidation, audioEnabled, audioDeviceId, videoDeviceId]);\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (handleValidation(userChoices)) {\n      if (typeof onSubmit === 'function') {\n        onSubmit(userChoices);\n      }\n    } else {\n      log.warn('Validation failed with: ', userChoices);\n    }\n  }\n\n  useWarnAboutMissingStyles();\n\n  return (\n    <div className=\"lk-prejoin\" {...htmlProps}>\n      <div className=\"lk-video-container\">\n        {videoTrack && (\n          <video ref={videoEl} width=\"1280\" height=\"720\" data-lk-facing-mode={facingMode} />\n        )}\n        {(!videoTrack || !videoEnabled) && (\n          <div className=\"lk-camera-off-note\">\n            <ParticipantPlaceholder />\n          </div>\n        )}\n      </div>\n      <div className=\"lk-button-group-container\">\n        <div className=\"lk-button-group audio\">\n          <TrackToggle\n            initialState={audioEnabled}\n            source={Track.Source.Microphone}\n            onChange={(enabled) => setAudioEnabled(enabled)}\n          >\n            {micLabel}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              initialSelection={audioDeviceId}\n              kind=\"audioinput\"\n              disabled={!audioTrack}\n              tracks={{ audioinput: audioTrack }}\n              onActiveDeviceChange={(_, id) => setAudioDeviceId(id)}\n            />\n          </div>\n        </div>\n        <div className=\"lk-button-group video\">\n          <TrackToggle\n            initialState={videoEnabled}\n            source={Track.Source.Camera}\n            onChange={(enabled) => setVideoEnabled(enabled)}\n          >\n            {camLabel}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              initialSelection={videoDeviceId}\n              kind=\"videoinput\"\n              disabled={!videoTrack}\n              tracks={{ videoinput: videoTrack }}\n              onActiveDeviceChange={(_, id) => setVideoDeviceId(id)}\n            />\n          </div>\n        </div>\n      </div>\n\n      <form className=\"lk-username-container\">\n        <input\n          className=\"lk-form-control\"\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          defaultValue={username}\n          placeholder={userLabel}\n          onChange={(inputEl) => setUsername(inputEl.target.value)}\n          autoComplete=\"off\"\n        />\n        <button\n          className=\"lk-button lk-join-button\"\n          type=\"submit\"\n          onClick={handleSubmit}\n          disabled={!isValid}\n        >\n          {joinLabel}\n        </button>\n      </form>\n\n      {debug && (\n        <>\n          <strong>User Choices:</strong>\n          <ul className=\"lk-list\" style={{ overflow: 'hidden', maxWidth: '15rem' }}>\n            <li>Username: {`${userChoices.username}`}</li>\n            <li>Video Enabled: {`${userChoices.videoEnabled}`}</li>\n            <li>Audio Enabled: {`${userChoices.audioEnabled}`}</li>\n            <li>Video Device: {`${userChoices.videoDeviceId}`}</li>\n            <li>Audio Device: {`${userChoices.audioDeviceId}`}</li>\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n","import { computeMenuPosition, wasClickOutside } from '@livekit/components-core';\nimport * as React from 'react';\nimport { MediaDeviceSelect } from '../components/controls/MediaDeviceSelect';\nimport { log } from '@livekit/components-core';\nimport type { LocalAudioTrack, LocalVideoTrack } from 'livekit-client';\n\n/** @public */\nexport interface MediaDeviceMenuProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  kind?: MediaDeviceKind;\n  initialSelection?: string;\n  onActiveDeviceChange?: (kind: MediaDeviceKind, deviceId: string) => void;\n  tracks?: Partial<Record<MediaDeviceKind, LocalAudioTrack | LocalVideoTrack | undefined>>;\n  /**\n   * this will call getUserMedia if the permissions are not yet given to enumerate the devices with device labels.\n   * in some browsers multiple calls to getUserMedia result in multiple permission prompts.\n   * It's generally advised only flip this to true, once a (preview) track has been acquired successfully with the\n   * appropriate permissions.\n   *\n   * @see {@link PreJoin}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices | MDN enumerateDevices}\n   */\n  requestPermissions?: boolean;\n}\n\n/**\n * The `MediaDeviceMenu` component is a button that opens a menu that lists\n * all media devices and allows the user to select them.\n *\n * @remarks\n * This component is implemented with the `MediaDeviceSelect` LiveKit components.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <MediaDeviceMenu />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function MediaDeviceMenu({\n  kind,\n  initialSelection,\n  onActiveDeviceChange,\n  tracks,\n  requestPermissions = false,\n  ...props\n}: MediaDeviceMenuProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [devices, setDevices] = React.useState<MediaDeviceInfo[]>([]);\n  const [updateRequired, setUpdateRequired] = React.useState<boolean>(true);\n  const [needPermissions, setNeedPermissions] = React.useState(requestPermissions);\n\n  const handleActiveDeviceChange = (kind: MediaDeviceKind, deviceId: string) => {\n    log.debug('handle device change');\n    setIsOpen(false);\n    onActiveDeviceChange?.(kind, deviceId);\n  };\n\n  const button = React.useRef<HTMLButtonElement>(null);\n  const tooltip = React.useRef<HTMLDivElement>(null);\n\n  React.useLayoutEffect(() => {\n    if (isOpen) {\n      setNeedPermissions(true);\n    }\n  }, [isOpen]);\n\n  React.useLayoutEffect(() => {\n    if (button.current && tooltip.current && (devices || updateRequired)) {\n      computeMenuPosition(button.current, tooltip.current).then(({ x, y }) => {\n        if (tooltip.current) {\n          Object.assign(tooltip.current.style, { left: `${x}px`, top: `${y}px` });\n        }\n      });\n    }\n    setUpdateRequired(false);\n  }, [button, tooltip, devices, updateRequired]);\n\n  const handleClickOutside = React.useCallback(\n    (event: MouseEvent) => {\n      if (!tooltip.current) {\n        return;\n      }\n      if (event.target === button.current) {\n        return;\n      }\n      if (isOpen && wasClickOutside(tooltip.current, event)) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen, tooltip, button],\n  );\n\n  React.useEffect(() => {\n    document.addEventListener<'click'>('click', handleClickOutside);\n    window.addEventListener<'resize'>('resize', () => setUpdateRequired(true));\n    return () => {\n      document.removeEventListener<'click'>('click', handleClickOutside);\n      window.removeEventListener<'resize'>('resize', () => setUpdateRequired(true));\n    };\n  }, [handleClickOutside, setUpdateRequired]);\n\n  return (\n    <>\n      <button\n        className=\"lk-button lk-button-menu\"\n        aria-pressed={isOpen}\n        {...props}\n        onClick={() => setIsOpen(!isOpen)}\n        ref={button}\n      >\n        {props.children}\n      </button>\n      {/** only render when enabled in order to make sure that the permissions are requested only if the menu is enabled */}\n      {!props.disabled && (\n        <div\n          className=\"lk-device-menu\"\n          ref={tooltip}\n          style={{ visibility: isOpen ? 'visible' : 'hidden' }}\n        >\n          {kind ? (\n            <MediaDeviceSelect\n              initialSelection={initialSelection}\n              onActiveDeviceChange={(deviceId) => handleActiveDeviceChange(kind, deviceId)}\n              onDeviceListChange={setDevices}\n              kind={kind}\n              track={tracks?.[kind]}\n              requestPermissions={needPermissions}\n            />\n          ) : (\n            <>\n              <div className=\"lk-device-menu-heading\">Audio inputs</div>\n              <MediaDeviceSelect\n                kind=\"audioinput\"\n                onActiveDeviceChange={(deviceId) =>\n                  handleActiveDeviceChange('audioinput', deviceId)\n                }\n                onDeviceListChange={setDevices}\n                track={tracks?.audioinput}\n                requestPermissions={needPermissions}\n              />\n              <div className=\"lk-device-menu-heading\">Video inputs</div>\n              <MediaDeviceSelect\n                kind=\"videoinput\"\n                onActiveDeviceChange={(deviceId) =>\n                  handleActiveDeviceChange('videoinput', deviceId)\n                }\n                onDeviceListChange={setDevices}\n                track={tracks?.videoinput}\n                requestPermissions={needPermissions}\n              />\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { warnAboutMissingStyles } from '../utils';\n\n/**\n * @internal\n */\nexport function useWarnAboutMissingStyles() {\n  React.useEffect(() => {\n    warnAboutMissingStyles();\n  }, []);\n}\n","import type {\n  MessageDecoder,\n  MessageEncoder,\n  TrackReferenceOrPlaceholder,\n  WidgetState,\n} from '@livekit/components-core';\nimport { isEqualTrackRef, isTrackReference, isWeb, log } from '@livekit/components-core';\nimport { RoomEvent, Track } from 'livekit-client';\nimport * as React from 'react';\nimport type { MessageFormatter } from '../components';\nimport {\n  CarouselLayout,\n  ConnectionStateToast,\n  FocusLayout,\n  FocusLayoutContainer,\n  GridLayout,\n  LayoutContextProvider,\n  ParticipantTile,\n  RoomAudioRenderer,\n} from '../components';\nimport { useCreateLayoutContext } from '../context';\nimport { usePinnedTracks, useTracks } from '../hooks';\nimport { Chat } from './Chat';\nimport { ControlBar } from './ControlBar';\nimport { useWarnAboutMissingStyles } from '../hooks/useWarnAboutMissingStyles';\n\n/**\n * @public\n */\nexport interface VideoConferenceProps extends React.HTMLAttributes<HTMLDivElement> {\n  chatMessageFormatter?: MessageFormatter;\n  chatMessageEncoder?: MessageEncoder;\n  chatMessageDecoder?: MessageDecoder;\n  /** @alpha */\n  SettingsComponent?: React.ComponentType;\n}\n\n/**\n * The `VideoConference` ready-made component is your drop-in solution for a classic video conferencing application.\n * It provides functionality such as focusing on one participant, grid view with pagination to handle large numbers\n * of participants, basic non-persistent chat, screen sharing, and more.\n *\n * @remarks\n * The component is implemented with other LiveKit components like `FocusContextProvider`,\n * `GridLayout`, `ControlBar`, `FocusLayoutContainer` and `FocusLayout`.\n * You can use this components as a starting point for your own custom video conferencing application.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <VideoConference />\n * <LiveKitRoom>\n * ```\n * @public\n */\nexport function VideoConference({\n  chatMessageFormatter,\n  chatMessageDecoder,\n  chatMessageEncoder,\n  SettingsComponent,\n  ...props\n}: VideoConferenceProps) {\n  const [widgetState, setWidgetState] = React.useState<WidgetState>({\n    showChat: false,\n    unreadMessages: 0,\n    showSettings: false,\n  });\n  const lastAutoFocusedScreenShareTrack = React.useRef<TrackReferenceOrPlaceholder | null>(null);\n\n  const tracks = useTracks(\n    [\n      { source: Track.Source.Camera, withPlaceholder: true },\n      { source: Track.Source.ScreenShare, withPlaceholder: false },\n    ],\n    { updateOnlyOn: [RoomEvent.ActiveSpeakersChanged], onlySubscribed: false },\n  );\n\n  const widgetUpdate = (state: WidgetState) => {\n    log.debug('updating widget state', state);\n    setWidgetState(state);\n  };\n\n  const layoutContext = useCreateLayoutContext();\n\n  const screenShareTracks = tracks\n    .filter(isTrackReference)\n    .filter((track) => track.publication.source === Track.Source.ScreenShare);\n\n  const focusTrack = usePinnedTracks(layoutContext)?.[0];\n  const carouselTracks = tracks.filter((track) => !isEqualTrackRef(track, focusTrack));\n\n  React.useEffect(() => {\n    // If screen share tracks are published, and no pin is set explicitly, auto set the screen share.\n    if (\n      screenShareTracks.some((track) => track.publication.isSubscribed) &&\n      lastAutoFocusedScreenShareTrack.current === null\n    ) {\n      log.debug('Auto set screen share focus:', { newScreenShareTrack: screenShareTracks[0] });\n      layoutContext.pin.dispatch?.({ msg: 'set_pin', trackReference: screenShareTracks[0] });\n      lastAutoFocusedScreenShareTrack.current = screenShareTracks[0];\n    } else if (\n      lastAutoFocusedScreenShareTrack.current &&\n      !screenShareTracks.some(\n        (track) =>\n          track.publication.trackSid ===\n          lastAutoFocusedScreenShareTrack.current?.publication?.trackSid,\n      )\n    ) {\n      log.debug('Auto clearing screen share focus.');\n      layoutContext.pin.dispatch?.({ msg: 'clear_pin' });\n      lastAutoFocusedScreenShareTrack.current = null;\n    }\n    if (focusTrack && !isTrackReference(focusTrack)) {\n      const updatedFocusTrack = tracks.find(\n        (tr) =>\n          tr.participant.identity === focusTrack.participant.identity &&\n          tr.source === focusTrack.source,\n      );\n      if (updatedFocusTrack !== focusTrack && isTrackReference(updatedFocusTrack)) {\n        layoutContext.pin.dispatch?.({ msg: 'set_pin', trackReference: updatedFocusTrack });\n      }\n    }\n  }, [\n    screenShareTracks\n      .map((ref) => `${ref.publication.trackSid}_${ref.publication.isSubscribed}`)\n      .join(),\n    focusTrack?.publication?.trackSid,\n    tracks,\n  ]);\n\n  useWarnAboutMissingStyles();\n\n  return (\n    <div className=\"lk-video-conference\" {...props}>\n      {isWeb() && (\n        <LayoutContextProvider\n          value={layoutContext}\n          // onPinChange={handleFocusStateChange}\n          onWidgetChange={widgetUpdate}\n        >\n          <div className=\"lk-video-conference-inner\">\n            {!focusTrack ? (\n              <div className=\"lk-grid-layout-wrapper\">\n                <GridLayout tracks={tracks}>\n                  <ParticipantTile />\n                </GridLayout>\n              </div>\n            ) : (\n              <div className=\"lk-focus-layout-wrapper\">\n                <FocusLayoutContainer>\n                  <CarouselLayout tracks={carouselTracks}>\n                    <ParticipantTile />\n                  </CarouselLayout>\n                  {focusTrack && <FocusLayout trackRef={focusTrack} />}\n                </FocusLayoutContainer>\n              </div>\n            )}\n            <ControlBar controls={{ chat: true, settings: !!SettingsComponent }} />\n          </div>\n          <Chat\n            style={{ display: widgetState.showChat ? 'grid' : 'none' }}\n            messageFormatter={chatMessageFormatter}\n            messageEncoder={chatMessageEncoder}\n            messageDecoder={chatMessageDecoder}\n          />\n          {SettingsComponent && (\n            <div\n              className=\"lk-settings-menu-modal\"\n              style={{ display: widgetState.showSettings ? 'block' : 'none' }}\n            >\n              <SettingsComponent />\n            </div>\n          )}\n        </LayoutContextProvider>\n      )}\n      <RoomAudioRenderer />\n      <ConnectionStateToast />\n    </div>\n  );\n}\n","import { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { MediaDeviceMenu } from './MediaDeviceMenu';\nimport { DisconnectButton } from '../components/controls/DisconnectButton';\nimport { TrackToggle } from '../components/controls/TrackToggle';\nimport { ChatIcon, GearIcon, LeaveIcon } from '../assets/icons';\nimport { ChatToggle } from '../components/controls/ChatToggle';\nimport { useLocalParticipantPermissions, usePersistentUserChoices } from '../hooks';\nimport { useMediaQuery } from '../hooks/internal';\nimport { useMaybeLayoutContext } from '../context';\nimport { supportsScreenSharing } from '@livekit/components-core';\nimport { mergeProps } from '../utils';\nimport { StartMediaButton } from '../components/controls/StartMediaButton';\nimport { SettingsMenuToggle } from '../components/controls/SettingsMenuToggle';\n\n/** @public */\nexport type ControlBarControls = {\n  microphone?: boolean;\n  camera?: boolean;\n  chat?: boolean;\n  screenShare?: boolean;\n  leave?: boolean;\n  settings?: boolean;\n};\n\n/** @public */\nexport interface ControlBarProps extends React.HTMLAttributes<HTMLDivElement> {\n  variation?: 'minimal' | 'verbose' | 'textOnly';\n  controls?: ControlBarControls;\n  /**\n   * If `true`, the user's device choices will be persisted.\n   * This will enables the user to have the same device choices when they rejoin the room.\n   * @defaultValue true\n   * @alpha\n   */\n  saveUserChoices?: boolean;\n}\n\n/**\n * The `ControlBar` prefab gives the user the basic user interface to control their\n * media devices (camera, microphone and screen share), open the `Chat` and leave the room.\n *\n * @remarks\n * This component is build with other LiveKit components like `TrackToggle`,\n * `DeviceSelectorButton`, `DisconnectButton` and `StartAudio`.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ControlBar />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ControlBar({\n  variation,\n  controls,\n  saveUserChoices = true,\n  ...props\n}: ControlBarProps) {\n  const [isChatOpen, setIsChatOpen] = React.useState(false);\n  const layoutContext = useMaybeLayoutContext();\n  React.useEffect(() => {\n    if (layoutContext?.widget.state?.showChat !== undefined) {\n      setIsChatOpen(layoutContext?.widget.state?.showChat);\n    }\n  }, [layoutContext?.widget.state?.showChat]);\n  const isTooLittleSpace = useMediaQuery(`(max-width: ${isChatOpen ? 1000 : 760}px)`);\n\n  const defaultVariation = isTooLittleSpace ? 'minimal' : 'verbose';\n  variation ??= defaultVariation;\n\n  const visibleControls = { leave: true, ...controls };\n\n  const localPermissions = useLocalParticipantPermissions();\n\n  if (!localPermissions) {\n    visibleControls.camera = false;\n    visibleControls.chat = false;\n    visibleControls.microphone = false;\n    visibleControls.screenShare = false;\n  } else {\n    visibleControls.camera ??= localPermissions.canPublish;\n    visibleControls.microphone ??= localPermissions.canPublish;\n    visibleControls.screenShare ??= localPermissions.canPublish;\n    visibleControls.chat ??= localPermissions.canPublishData && controls?.chat;\n  }\n\n  const showIcon = React.useMemo(\n    () => variation === 'minimal' || variation === 'verbose',\n    [variation],\n  );\n  const showText = React.useMemo(\n    () => variation === 'textOnly' || variation === 'verbose',\n    [variation],\n  );\n\n  const browserSupportsScreenSharing = supportsScreenSharing();\n\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = React.useState(false);\n\n  const onScreenShareChange = React.useCallback(\n    (enabled: boolean) => {\n      setIsScreenShareEnabled(enabled);\n    },\n    [setIsScreenShareEnabled],\n  );\n\n  const htmlProps = mergeProps({ className: 'lk-control-bar' }, props);\n\n  const {\n    saveAudioInputEnabled,\n    saveVideoInputEnabled,\n    saveAudioInputDeviceId,\n    saveVideoInputDeviceId,\n  } = usePersistentUserChoices({ preventSave: !saveUserChoices });\n\n  const microphoneOnChange = React.useCallback(\n    (enabled: boolean, isUserInitiated: boolean) =>\n      isUserInitiated ? saveAudioInputEnabled(enabled) : null,\n    [saveAudioInputEnabled],\n  );\n\n  const cameraOnChange = React.useCallback(\n    (enabled: boolean, isUserInitiated: boolean) =>\n      isUserInitiated ? saveVideoInputEnabled(enabled) : null,\n    [saveVideoInputEnabled],\n  );\n\n  return (\n    <div {...htmlProps}>\n      {visibleControls.microphone && (\n        <div className=\"lk-button-group\">\n          <TrackToggle\n            source={Track.Source.Microphone}\n            showIcon={showIcon}\n            onChange={microphoneOnChange}\n          >\n            {showText && 'Microphone'}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              kind=\"audioinput\"\n              onActiveDeviceChange={(_kind, deviceId) => saveAudioInputDeviceId(deviceId ?? '')}\n            />\n          </div>\n        </div>\n      )}\n      {visibleControls.camera && (\n        <div className=\"lk-button-group\">\n          <TrackToggle source={Track.Source.Camera} showIcon={showIcon} onChange={cameraOnChange}>\n            {showText && 'Camera'}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              kind=\"videoinput\"\n              onActiveDeviceChange={(_kind, deviceId) => saveVideoInputDeviceId(deviceId ?? '')}\n            />\n          </div>\n        </div>\n      )}\n      {visibleControls.screenShare && browserSupportsScreenSharing && (\n        <TrackToggle\n          source={Track.Source.ScreenShare}\n          captureOptions={{ audio: true, selfBrowserSurface: 'include' }}\n          showIcon={showIcon}\n          onChange={onScreenShareChange}\n        >\n          {showText && (isScreenShareEnabled ? 'Stop screen share' : 'Share screen')}\n        </TrackToggle>\n      )}\n      {visibleControls.chat && (\n        <ChatToggle>\n          {showIcon && <ChatIcon />}\n          {showText && 'Chat'}\n        </ChatToggle>\n      )}\n      {visibleControls.settings && (\n        <SettingsMenuToggle>\n          {showIcon && <GearIcon />}\n          {showText && 'Settings'}\n        </SettingsMenuToggle>\n      )}\n      {visibleControls.leave && (\n        <DisconnectButton>\n          {showIcon && <LeaveIcon />}\n          {showText && 'Leave'}\n        </DisconnectButton>\n      )}\n      <StartMediaButton />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useRoomContext } from '../../context';\nimport { useStartAudio, useStartVideo } from '../../hooks';\n\n/** @public */\nexport interface AllowMediaPlaybackProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  label?: string;\n}\n\n/**\n * The `StartMediaButton` component is only visible when the browser blocks media playback. This is due to some browser implemented autoplay policies.\n * To start media playback, the user must perform a user-initiated event such as clicking this button.\n * As soon as media playback starts, the button hides itself again.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <StartMediaButton label=\"Click to allow media playback\" />\n * </LiveKitRoom>\n * ```\n *\n * @see Autoplay policy on MDN web docs: {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Best_practices#autoplay_policy}\n * @public\n */\nexport const StartMediaButton: (\n  props: AllowMediaPlaybackProps & React.RefAttributes<HTMLButtonElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLButtonElement, AllowMediaPlaybackProps>(\n  function StartMediaButton({ label, ...props }: AllowMediaPlaybackProps, ref) {\n    const room = useRoomContext();\n    const { mergedProps: audioProps, canPlayAudio } = useStartAudio({ room, props });\n    const { mergedProps, canPlayVideo } = useStartVideo({ room, props: audioProps });\n    const { style, ...restProps } = mergedProps;\n    style.display = canPlayAudio && canPlayVideo ? 'none' : 'block';\n\n    return (\n      <button ref={ref} style={style} {...restProps}>\n        {label ?? `Start ${!canPlayAudio ? 'Audio' : 'Video'}`}\n      </button>\n    );\n  },\n);\n","import * as React from 'react';\nimport { useSettingsToggle } from '../../hooks/useSettingsToggle';\n\n/** @alpha */\nexport interface SettingsMenuToggleProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\n/**\n * The `SettingsMenuToggle` component is a button that toggles the visibility of the `SettingsMenu` component.\n * @remarks\n * For the component to have any effect it has to live inside a `LayoutContext` context.\n *\n * @alpha\n */\nexport const SettingsMenuToggle: (\n  props: SettingsMenuToggleProps & React.RefAttributes<HTMLButtonElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLButtonElement, SettingsMenuToggleProps>(\n  function SettingsMenuToggle(props: SettingsMenuToggleProps, ref) {\n    const { mergedProps } = useSettingsToggle({ props });\n\n    return (\n      <button ref={ref} {...mergedProps}>\n        {props.children}\n      </button>\n    );\n  },\n);\n","import { useLayoutContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport * as React from 'react';\n\n/** @alpha */\nexport interface UseSettingsToggleProps {\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * The `useSettingsToggle` hook provides state and functions for toggling the settings menu.\n * @remarks\n * Depends on the `LayoutContext` to work properly.\n * @see {@link SettingsMenu}\n * @alpha\n */\nexport function useSettingsToggle({ props }: UseSettingsToggleProps) {\n  const { dispatch, state } = useLayoutContext().widget;\n  const className = 'lk-button lk-settings-toggle';\n\n  const mergedProps = React.useMemo(() => {\n    return mergeProps(props, {\n      className,\n      onClick: () => {\n        if (dispatch) dispatch({ msg: 'toggle_settings' });\n      },\n      'aria-pressed': state?.showSettings ? 'true' : 'false',\n    });\n  }, [props, className, dispatch, state]);\n\n  return { mergedProps };\n}\n","import * as React from 'react';\nimport { ControlBar } from './ControlBar';\n\nimport { ParticipantAudioTile } from '../components/participant/ParticipantAudioTile';\nimport { LayoutContextProvider } from '../components/layout/LayoutContextProvider';\nimport type { WidgetState } from '@livekit/components-core';\nimport { Chat } from './Chat';\nimport { TrackLoop } from '../components';\nimport { useTracks } from '../hooks';\nimport { useWarnAboutMissingStyles } from '../hooks/useWarnAboutMissingStyles';\nimport { Track } from 'livekit-client';\n\n/** @public */\nexport interface AudioConferenceProps extends React.HTMLAttributes<HTMLDivElement> {}\n\n/**\n * This component is the default setup of a classic LiveKit audio conferencing app.\n * It provides functionality like switching between participant grid view and focus view.\n *\n * @remarks\n * The component is implemented with other LiveKit components like `FocusContextProvider`,\n * `GridLayout`, `ControlBar`, `FocusLayoutContainer` and `FocusLayout`.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <AudioConference />\n * <LiveKitRoom>\n * ```\n * @public\n */\nexport function AudioConference({ ...props }: AudioConferenceProps) {\n  const [widgetState, setWidgetState] = React.useState<WidgetState>({\n    showChat: false,\n    unreadMessages: 0,\n  });\n\n  const audioTracks = useTracks([Track.Source.Microphone]);\n\n  useWarnAboutMissingStyles();\n\n  return (\n    <LayoutContextProvider onWidgetChange={setWidgetState}>\n      <div className=\"lk-audio-conference\" {...props}>\n        <div className=\"lk-audio-conference-stage\">\n          <TrackLoop tracks={audioTracks}>\n            <ParticipantAudioTile />\n          </TrackLoop>\n        </div>\n        <ControlBar\n          controls={{ microphone: true, screenShare: false, camera: false, chat: true }}\n        />\n        {widgetState.showChat && <Chat />}\n      </div>\n    </LayoutContextProvider>\n  );\n}\n","export * from './components';\n\nexport * from './hooks';\n\nexport * from './prefabs';\n\nexport * from './context';\n\nexport * from './assets/icons';\n\nexport * from './assets/images';\n\n// Re-exports from core\nexport { setLogLevel, setLogExtension, isTrackReference } from '@livekit/components-core';\nexport type {\n  ChatMessage,\n  ReceivedChatMessage,\n  MessageDecoder,\n  MessageEncoder,\n  LocalUserChoices,\n  TrackReference,\n  TrackReferenceOrPlaceholder,\n  ParticipantClickEvent,\n  ParticipantIdentifier,\n  PinState,\n  WidgetState,\n} from '@livekit/components-core';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}